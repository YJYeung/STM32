ARM GAS  /tmp/ccoFuW87.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_eth.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.ETH_MACAddressConfig,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	ETH_MACAddressConfig:
  24              	.LFB162:
  25              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @file    stm32f7xx_hal_eth.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief   ETH HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          functionalities of the Ethernet (ETH) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Peripheral Control functions 
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                     ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Declare a ETH_HandleTypeDef handle structure, for example:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          ETH_HandleTypeDef  heth;
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Fill parameters of Init structure in heth handle
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Call HAL_ETH_Init() API to initialize the Ethernet peripheral (MAC, DMA, ...) 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Initialize the ETH low level resources through the HAL_ETH_MspInit() API:
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Enable the Ethernet interface clock using 
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMAC_CLK_ENABLE();
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMACTX_CLK_ENABLE();
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                (+++) __HAL_RCC_ETHMACRX_CLK_ENABLE();
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Initialize the related GPIO clocks
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Configure Ethernet pin-out
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) Configure Ethernet NVIC interrupt (IT mode)   
ARM GAS  /tmp/ccoFuW87.s 			page 2


  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Initialize Ethernet DMA Descriptors in chain mode and point to allocated buffers:
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_DMATxDescListInit(); for Transmission process
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_DMARxDescListInit(); for Reception process
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Enable MAC and DMA transmission and reception:
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           (##) HAL_ETH_Start();
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Prepare ETH DMA TX Descriptors and give the hand to ETH DMA to transfer 
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          the frame to MAC TX FIFO:
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_TransmitFrame();
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#)Poll for a received frame in ETH RX DMA Descriptors and get received 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          frame parameters
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_GetReceivedFrame(); (should be called into an infinite loop)
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Get a received frame when an ETH RX interrupt occurs:
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) HAL_ETH_GetReceivedFrame_IT(); (called in IT mode only)
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Communicate with external PHY device:
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) Read a specific register from the PHY  
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****               HAL_ETH_ReadPHYRegister();
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          (##) Write data to a specific RHY register:
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****               HAL_ETH_WritePHYRegister();
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Configure the Ethernet MAC after ETH peripheral initialization
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigMAC(); all MAC parameters should be filled.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (#) Configure the Ethernet DMA after ETH peripheral initialization
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigDMA(); all DMA parameters should be filled.
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** *** Callback registration ***
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   =============================================
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   The compilation define  USE_HAL_ETH_REGISTER_CALLBACKS when set to 1
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   allows the user to configure dynamically the driver callbacks.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   Use Function @ref HAL_ETH_RegisterCallback() to register an interrupt callback.
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   Function @ref HAL_ETH_RegisterCallback() allows to register following callbacks:
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) TxCpltCallback   : Tx Complete Callback.
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) RxCpltCallback   : Rx Complete Callback.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) DMAErrorCallback : DMA Error Callback.
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) MspInitCallback  : MspInit Callback.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) MspDeInitCallback: MspDeInit Callback.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   and a pointer to the user callback function.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   Use function @ref HAL_ETH_UnRegisterCallback() to reset a callback to the default
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   weak function.
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @ref HAL_ETH_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   and the Callback ID.
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   This function allows to reset following callbacks:
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) TxCpltCallback   : Tx Complete Callback.
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) RxCpltCallback   : Rx Complete Callback.
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) DMAErrorCallback : DMA Error Callback.
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) MspInitCallback  : MspInit Callback.
ARM GAS  /tmp/ccoFuW87.s 			page 3


  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (+) MspDeInitCallback: MspDeInit Callback.
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   By default, after the HAL_ETH_Init and when the state is HAL_ETH_STATE_RESET
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   all callbacks are set to the corresponding weak functions:
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   examples @ref HAL_ETH_TxCpltCallback(), @ref HAL_ETH_RxCpltCallback().
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   Exception done for MspInit and MspDeInit functions that are
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   reset to the legacy weak function in the HAL_ETH_Init/ @ref HAL_ETH_DeInit only when
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   these callbacks are null (not registered beforehand).
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if not, MspInit or MspDeInit are not null, the HAL_ETH_Init/ @ref HAL_ETH_DeInit
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   Callbacks can be registered/unregistered in HAL_ETH_STATE_READY state only.
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   in HAL_ETH_STATE_READY or HAL_ETH_STATE_RESET state,
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   In that case first register the MspInit/MspDeInit user callbacks
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   using @ref HAL_ETH_RegisterCallback() before calling @ref HAL_ETH_DeInit
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   or HAL_ETH_Init function.
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   When The compilation define USE_HAL_ETH_REGISTER_CALLBACKS is set to 0 or
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   not defined, the callback registration feature is not available and all callbacks
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   are set to the corresponding weak functions.
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @attention
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * All rights reserved.</center></h2>
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * the "License"; You may not use this file except in compliance with the
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * License. You may obtain a copy of the License at:
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                        opensource.org/licenses/BSD-3-Clause
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ******************************************************************************
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Includes ------------------------------------------------------------------*/
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #include "stm32f7xx_hal.h"
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @addtogroup STM32F7xx_HAL_Driver
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH ETH 
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief ETH HAL module driver
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #ifdef HAL_ETH_MODULE_ENABLED
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if defined (ETH)
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private typedef -----------------------------------------------------------*/
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private define ------------------------------------------------------------*/
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Private_Constants ETH Private Constants
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
ARM GAS  /tmp/ccoFuW87.s 			page 4


 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_SWRESET                 ((uint32_t)500)  
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_LINKED_STATE          ((uint32_t)5000)  
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #define ETH_TIMEOUT_AUTONEGO_COMPLETED    ((uint32_t)5000) 
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private macro -------------------------------------------------------------*/
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private variables ---------------------------------------------------------*/
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private function prototypes -----------------------------------------------*/
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Private_Functions ETH Private Functions
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth, uint32_t err);
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACAddressConfig(ETH_HandleTypeDef *heth, uint32_t MacAddr, uint8_t *Addr);
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionEnable(ETH_HandleTypeDef *heth);
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionDisable(ETH_HandleTypeDef *heth);
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionEnable(ETH_HandleTypeDef *heth);
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionDisable(ETH_HandleTypeDef *heth);
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionEnable(ETH_HandleTypeDef *heth);
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionDisable(ETH_HandleTypeDef *heth);
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionEnable(ETH_HandleTypeDef *heth);
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionDisable(ETH_HandleTypeDef *heth);
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth);
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_InitCallbacksToDefault(ETH_HandleTypeDef *heth);
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /* Private functions ---------------------------------------------------------*/
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions ETH Exported Functions
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group1 Initialization and de-initialization functions 
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Initialization and Configuration functions 
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim    
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             ##### Initialization and de-initialization functions #####
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]  This section provides functions allowing to:
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Initialize and configure the Ethernet peripheral
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) De-initialize the Ethernet peripheral
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the Ethernet MAC and DMA according to default
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         parameters.
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
ARM GAS  /tmp/ccoFuW87.s 			page 5


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Init(ETH_HandleTypeDef *heth)
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tempreg = 0, phyreg = 0;
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t hclk = 60000000;
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t err = ETH_SUCCESS;
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth == NULL)
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_AUTONEGOTIATION(heth->Init.AutoNegotiation));
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RX_MODE(heth->Init.RxMode));
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_CHECKSUM_MODE(heth->Init.ChecksumMode));
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_MEDIA_INTERFACE(heth->Init.MediaInterface));  
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_RESET)
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Allocate lock resource and initialize it */
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->Lock = HAL_UNLOCKED;
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     ETH_InitCallbacksToDefault(heth);
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(heth->MspInitCallback == NULL)
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Init the low level hardware : GPIO, CLOCK, NVIC. */
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspInitCallback = HAL_ETH_MspInit;
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->MspInitCallback(heth);
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #else
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC. */
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_MspInit(heth);
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable SYSCFG Clock */
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Select MII or RMII Mode*/
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   SYSCFG->PMC &= ~(SYSCFG_PMC_MII_RMII_SEL);
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   SYSCFG->PMC |= (uint32_t)heth->Init.MediaInterface;
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Ethernet Software reset */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the SWR bit: resets all MAC subsystem internal registers and logic */
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* After reset all the registers holds their respective reset values */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMABMR |= ETH_DMABMR_SR;
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccoFuW87.s 			page 6


 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait for software reset */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while (((heth->Instance)->DMABMR & ETH_DMABMR_SR) != (uint32_t)RESET)
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_SWRESET)
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {     
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_TIMEOUT;
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Note: The SWR is not performed if the ETH_RX_CLK or the ETH_TX_CLK are  
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****          not available, please check your external PHY or the IO configuration */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*-------------------------------- MAC Initialization ----------------------*/
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tempreg = (heth->Instance)->MACMIIAR;
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear CSR Clock Range CR[2:0] bits */
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tempreg &= ETH_MACMIIAR_CR_MASK;
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get hclk frequency value */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   hclk = HAL_RCC_GetHCLKFreq();
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set CR bits depending on hclk value */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((hclk >= 20000000)&&(hclk < 35000000))
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 20-35 MHz */
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div16;
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 35000000)&&(hclk < 60000000))
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 35-60 MHz */ 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div26;
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 60000000)&&(hclk < 100000000))
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 60-100 MHz */ 
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div42;
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if((hclk >= 100000000)&&(hclk < 150000000))
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 100-150 MHz */ 
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div62;
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* ((hclk >= 150000000)&&(hclk <= 216000000)) */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* CSR Clock Range between 150-216 MHz */ 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tempreg |= (uint32_t)ETH_MACMIIAR_CR_Div102;    
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MAC MIIAR: Configure the ETHERNET CSR Clock Range */
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACMIIAR = (uint32_t)tempreg;
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccoFuW87.s 			page 7


 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*-------------------- PHY initialization and configuration ----------------*/
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Put the PHY in reset mode */
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((HAL_ETH_WritePHYRegister(heth, PHY_BCR, PHY_RESET)) != HAL_OK)
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* In case of write timeout */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     err = ETH_ERROR;
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Config MAC and DMA */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     ETH_MACDMAConfig(heth, err);
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the ETH peripheral state to READY */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Return HAL_ERROR */
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Delay to assure PHY reset */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(PHY_RESET_DELAY);
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if((heth->Init).AutoNegotiation != ETH_AUTONEGOTIATION_DISABLE)
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get tick */
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tickstart = HAL_GetTick();
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* We wait for linked status */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     do
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_ETH_ReadPHYRegister(heth, PHY_BSR, &phyreg);
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check for the Timeout */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_LINKED_STATE)
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* In case of write timeout */
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         err = ETH_ERROR;
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Config MAC and DMA */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         ETH_MACDMAConfig(heth, err);
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->State= HAL_ETH_STATE_READY;
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Process Unlocked */
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         __HAL_UNLOCK(heth);
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         return HAL_TIMEOUT;
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } while (((phyreg & PHY_LINKED_STATUS) != PHY_LINKED_STATUS));
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Enable Auto-Negotiation */
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_ETH_WritePHYRegister(heth, PHY_BCR, PHY_AUTONEGOTIATION)) != HAL_OK)
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
ARM GAS  /tmp/ccoFuW87.s 			page 8


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;   
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get tick */
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tickstart = HAL_GetTick();
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the auto-negotiation will be completed */
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     do
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_ETH_ReadPHYRegister(heth, PHY_BSR, &phyreg);
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check for the Timeout */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if((HAL_GetTick() - tickstart ) > ETH_TIMEOUT_AUTONEGO_COMPLETED)
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* In case of write timeout */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         err = ETH_ERROR;
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Config MAC and DMA */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         ETH_MACDMAConfig(heth, err);
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->State= HAL_ETH_STATE_READY;
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Process Unlocked */
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         __HAL_UNLOCK(heth);
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         return HAL_TIMEOUT;
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } while (((phyreg & PHY_AUTONEGO_COMPLETE) != PHY_AUTONEGO_COMPLETE));
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Read the result of the auto-negotiation */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_ETH_ReadPHYRegister(heth, PHY_SR, &phyreg)) != HAL_OK)
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;   
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Configure the MAC with the Duplex Mode fixed by the auto-negotiation process */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((phyreg & PHY_DUPLEX_STATUS) != (uint32_t)RESET)
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet duplex mode to Full-duplex following the auto-negotiation */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).DuplexMode = ETH_MODE_FULLDUPLEX;  
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
ARM GAS  /tmp/ccoFuW87.s 			page 9


 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet duplex mode to Half-duplex following the auto-negotiation */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).DuplexMode = ETH_MODE_HALFDUPLEX;           
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Configure the MAC with the speed fixed by the auto-negotiation process */
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((phyreg & PHY_SPEED_STATUS) == PHY_SPEED_STATUS)
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {  
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet speed to 10M following the auto-negotiation */
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).Speed = ETH_SPEED_10M; 
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {   
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Ethernet speed to 100M following the auto-negotiation */ 
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Init).Speed = ETH_SPEED_100M;
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* AutoNegotiation Disable */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check parameters */
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_SPEED(heth->Init.Speed));
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DUPLEX_MODE(heth->Init.DuplexMode));
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set MAC Speed and Duplex Mode */
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(HAL_ETH_WritePHYRegister(heth, PHY_BCR, ((uint16_t)((heth->Init).DuplexMode >> 3) |
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                                 (uint16_t)((heth->Init).Speed >> 1))) != HAL_OK)
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* In case of write timeout */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       err = ETH_ERROR;
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Config MAC and DMA */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       ETH_MACDMAConfig(heth, err);
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the ETH peripheral state to READY */
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return HAL_ERROR */
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_ERROR;
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }  
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Delay to assure PHY configuration */
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(PHY_CONFIG_DELAY);
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Config MAC and DMA */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACDMAConfig(heth, err);
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  De-Initializes the ETH peripheral. 
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
ARM GAS  /tmp/ccoFuW87.s 			page 10


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DeInit(ETH_HandleTypeDef *heth)
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->MspDeInitCallback == NULL)
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->MspDeInitCallback = HAL_ETH_MspDeInit;
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* De-Init the low level hardware : GPIO, CLOCK, NVIC. */
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->MspDeInitCallback(heth);
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #else
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* De-Init the low level hardware : GPIO, CLOCK, NVIC. */
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_ETH_MspDeInit(heth);
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL state to Disabled */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_RESET;
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Release Lock */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the DMA Tx descriptors in chain mode.
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  DMATxDescTab Pointer to the first Tx desc list 
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  TxBuff Pointer to the first TxBuffer list
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  TxBuffCount Number of the used Tx desc in the list
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DMATxDescListInit(ETH_HandleTypeDef *heth, ETH_DMADescTypeDef *DMATxDescT
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t i = 0;
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmatxdesc;
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DMATxDescToSet pointer with the first one of the DMATxDescTab list */
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->TxDesc = DMATxDescTab;
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Fill each DMATxDesc descriptor with the right values */   
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   for(i=0; i < TxBuffCount; i++)
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the pointer on the member (i) of the Tx Desc list */
ARM GAS  /tmp/ccoFuW87.s 			page 11


 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc = DMATxDescTab + i;
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Second Address Chained bit */
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc->Status = ETH_DMATXDESC_TCH;  
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 address pointer */
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmatxdesc->Buffer1Addr = (uint32_t)(&TxBuff[i*ETH_TX_BUF_SIZE]);
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if ((heth->Init).ChecksumMode == ETH_CHECKSUM_BY_HARDWARE)
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set the DMA Tx descriptors checksum insertion */
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Status |= ETH_DMATXDESC_CHECKSUMTCPUDPICMPFULL;
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Initialize the next descriptor with the Next Descriptor Polling Enable */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(i < (TxBuffCount-1))
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set next descriptor address register with next descriptor base address */
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Buffer2NextDescAddr = (uint32_t)(DMATxDescTab+i+1);
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* For last descriptor, set next descriptor address register equal to the first descriptor ba
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       dmatxdesc->Buffer2NextDescAddr = (uint32_t) DMATxDescTab;  
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set Transmit Descriptor List Address Register */
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMATDLAR = (uint32_t) DMATxDescTab;
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the DMA Rx descriptors in chain mode.
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  DMARxDescTab Pointer to the first Rx desc list 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RxBuff Pointer to the first RxBuffer list
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RxBuffCount Number of the used Rx desc in the list
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DMARxDescListInit(ETH_HandleTypeDef *heth, ETH_DMADescTypeDef *DMARxDescT
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t i = 0;
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMADescTypeDef *DMARxDesc;
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccoFuW87.s 			page 12


 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the Ethernet RxDesc pointer with the first one of the DMARxDescTab list */
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->RxDesc = DMARxDescTab; 
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Fill each DMARxDesc descriptor with the right values */
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   for(i=0; i < RxBuffCount; i++)
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the pointer on the member (i) of the Rx Desc list */
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc = DMARxDescTab+i;
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Own bit of the Rx descriptor Status */
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->Status = ETH_DMARXDESC_OWN;
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 size and Second Address Chained bit */
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->ControlBufferSize = ETH_DMARXDESC_RCH | ETH_RX_BUF_SIZE;  
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Buffer1 address pointer */
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     DMARxDesc->Buffer1Addr = (uint32_t)(&RxBuff[i*ETH_RX_BUF_SIZE]);
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((heth->Init).RxMode == ETH_RXINTERRUPT_MODE)
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Enable Ethernet DMA Rx Descriptor interrupt */
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->ControlBufferSize &= ~ETH_DMARXDESC_DIC;
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Initialize the next descriptor with the Next Descriptor Polling Enable */
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(i < (RxBuffCount-1))
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set next descriptor address register with next descriptor base address */
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->Buffer2NextDescAddr = (uint32_t)(DMARxDescTab+i+1); 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* For last descriptor, set next descriptor address register equal to the first descriptor ba
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       DMARxDesc->Buffer2NextDescAddr = (uint32_t)(DMARxDescTab); 
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set Receive Descriptor List Address Register */
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMARDLAR = (uint32_t) DMARxDescTab;
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Initializes the ETH MSP.
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
ARM GAS  /tmp/ccoFuW87.s 			page 13


 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_MspInit(ETH_HandleTypeDef *heth)
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_MspInit could be implemented in the user file
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  DeInitializes ETH MSP.
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_MspDeInit(ETH_HandleTypeDef *heth)
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_MspDeInit could be implemented in the user file
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Register a User ETH Callback
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         To be used instead of the weak predefined callback
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param heth eth handle
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param CallbackID ID of the callback to be registered
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *        This parameter can be one of the following values:
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_TX_COMPLETE_CB_ID Tx Complete Callback ID
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_RX_COMPLETE_CB_ID Rx Complete Callback ID
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_DMA_ERROR_CB_ID   DMA Error Callback ID
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MSPINIT_CB_ID     MspInit callback ID
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MSPDEINIT_CB_ID   MspDeInit callback ID
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param pCallback pointer to the Callback function
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval status
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_RegisterCallback(ETH_HandleTypeDef *heth, HAL_ETH_CallbackIDTypeDef Callb
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_StatusTypeDef status = HAL_OK;
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(pCallback == NULL)
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process locked */
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_READY)
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     switch (CallbackID)
ARM GAS  /tmp/ccoFuW87.s 			page 14


 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_TX_COMPLETE_CB_ID :
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxCpltCallback = pCallback;
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_RX_COMPLETE_CB_ID :
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxCpltCallback = pCallback;
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_DMA_ERROR_CB_ID :
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->DMAErrorCallback = pCallback;
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_MSPINIT_CB_ID :
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspInitCallback = pCallback;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_MSPDEINIT_CB_ID :
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspDeInitCallback = pCallback;
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     default :
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return error status */
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       status =  HAL_ERROR;
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if(heth->State == HAL_ETH_STATE_RESET)
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     switch (CallbackID)
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_MSPINIT_CB_ID :
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspInitCallback = pCallback;
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_MSPDEINIT_CB_ID :
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspDeInitCallback = pCallback;
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     default :
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return error status */
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       status =  HAL_ERROR;
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Return error status */
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     status =  HAL_ERROR;
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Release Lock */
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return status;
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
ARM GAS  /tmp/ccoFuW87.s 			page 15


 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Unregister an ETH Callback
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         ETH callabck is redirected to the weak predefined callback
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param heth eth handle
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param CallbackID ID of the callback to be unregistered
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *        This parameter can be one of the following values:
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_TX_COMPLETE_CB_ID Tx Complete Callback ID
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_RX_COMPLETE_CB_ID Rx Complete Callback ID
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_DMA_ERROR_CB_ID   DMA Error Callback ID
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MSPINIT_CB_ID     MspInit callback ID
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MSPDEINIT_CB_ID   MspDeInit callback ID
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval status
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_UnRegisterCallback(ETH_HandleTypeDef *heth, HAL_ETH_CallbackIDTypeDef Cal
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_StatusTypeDef status = HAL_OK;
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process locked */
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_READY)
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     switch (CallbackID)
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_TX_COMPLETE_CB_ID :
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxCpltCallback = HAL_ETH_TxCpltCallback;
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_RX_COMPLETE_CB_ID :
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxCpltCallback = HAL_ETH_RxCpltCallback;
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_DMA_ERROR_CB_ID :
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->DMAErrorCallback = HAL_ETH_ErrorCallback;
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_MSPINIT_CB_ID :
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspInitCallback = HAL_ETH_MspInit;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_MSPDEINIT_CB_ID :
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspDeInitCallback = HAL_ETH_MspDeInit;
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     default :
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return error status */
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       status =  HAL_ERROR;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if(heth->State == HAL_ETH_STATE_RESET)
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     switch (CallbackID)
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_MSPINIT_CB_ID :
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspInitCallback = HAL_ETH_MspInit;
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
ARM GAS  /tmp/ccoFuW87.s 			page 16


 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     case HAL_ETH_MSPDEINIT_CB_ID :
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->MspDeInitCallback = HAL_ETH_MspDeInit;
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     default :
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return error status */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       status =  HAL_ERROR;
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       break;
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Return error status */
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     status =  HAL_ERROR;
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Release Lock */
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return status;
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group2 IO operation functions 
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Data transfers functions 
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim   
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           ##### IO operation functions #####
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ==============================================================================  
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]  This section provides functions allowing to:
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Transmit a frame
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_TransmitFrame();
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Receive a frame
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_GetReceivedFrame();
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_GetReceivedFrame_IT();
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Read from an External PHY register
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_ReadPHYRegister();
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (+) Write to an External PHY register
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****             HAL_ETH_WritePHYRegister();
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Sends an Ethernet frame. 
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  FrameLength Amount of data to be sent
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
ARM GAS  /tmp/ccoFuW87.s 			page 17


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_TransmitFrame(ETH_HandleTypeDef *heth, uint32_t FrameLength)
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t bufcount = 0, size = 0, i = 0;
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (FrameLength == 0) 
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set ETH HAL state to READY */
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return  HAL_ERROR;                                    
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check if the descriptor is owned by the ETHERNET DMA (when set) or CPU (when reset) */
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(((heth->TxDesc)->Status & ETH_DMATXDESC_OWN) != (uint32_t)RESET)
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {  
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* OWN bit set */
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_BUSY_TX;
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_ERROR;
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the number of needed Tx buffers for the current frame */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (FrameLength > ETH_TX_BUF_SIZE)
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     bufcount = FrameLength/ETH_TX_BUF_SIZE;
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if (FrameLength % ETH_TX_BUF_SIZE) 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       bufcount++;
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {  
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     bufcount = 1;
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (bufcount == 1)
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set LAST and FIRST segment */
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->Status |=ETH_DMATXDESC_FS|ETH_DMATXDESC_LS;
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set frame size */
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->ControlBufferSize = (FrameLength & ETH_DMATXDESC_TBS1);
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc->Status |= ETH_DMATXDESC_OWN;
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Point to next descriptor */
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxDesc= (ETH_DMADescTypeDef *)(heth->TxDesc->Buffer2NextDescAddr);
ARM GAS  /tmp/ccoFuW87.s 			page 18


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     for (i=0; i< bufcount; i++)
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Clear FIRST and LAST segment bits */
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->Status &= ~(ETH_DMATXDESC_FS | ETH_DMATXDESC_LS);
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if (i == 0) 
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Setting the first segment bit */
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->Status |= ETH_DMATXDESC_FS;  
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Program size */
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->ControlBufferSize = (ETH_TX_BUF_SIZE & ETH_DMATXDESC_TBS1);
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if (i == (bufcount-1))
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         /* Setting the last segment bit */
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->Status |= ETH_DMATXDESC_LS;
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         size = FrameLength - (bufcount-1)*ETH_TX_BUF_SIZE;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->ControlBufferSize = (size & ETH_DMATXDESC_TBS1);
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc->Status |= ETH_DMATXDESC_OWN;
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* point to next descriptor */
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->TxDesc = (ETH_DMADescTypeDef *)(heth->TxDesc->Buffer2NextDescAddr);
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* When Tx Buffer unavailable flag is set: clear it and resume transmission */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (((heth->Instance)->DMASR & ETH_DMASR_TBUS) != (uint32_t)RESET)
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear TBUS ETHERNET DMA flag */
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMASR = ETH_DMASR_TBUS;
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Resume DMA transmission*/
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMATPDR = 0;
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Checks for received frames. 
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
ARM GAS  /tmp/ccoFuW87.s 			page 19


1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetReceivedFrame(ETH_HandleTypeDef *heth)
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t framelength = 0;
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH state to BUSY */
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check if segment is not owned by DMA */
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* (((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET) && ((heth->RxDesc->Status & E
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET))
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if last segment */
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if(((heth->RxDesc->Status & ETH_DMARXDESC_LS) != (uint32_t)RESET)) 
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* increment segment count */
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount++;
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check if last segment is first segment: one segment contains the frame */
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if ((heth->RxFrameInfos).SegCount == 1)
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         (heth->RxFrameInfos).FSRxDesc =heth->RxDesc;
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.LSRxDesc = heth->RxDesc;
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the Frame Length of the received packet: substruct 4 bytes of the CRC */
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       framelength = (((heth->RxDesc)->Status & ETH_DMARXDESC_FL) >> ETH_DMARXDESC_FRAMELENGTHSHIFT)
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.length = framelength;
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the address of the buffer start address */
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.buffer = ((heth->RxFrameInfos).FSRxDesc)->Buffer1Addr;
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* point to next descriptor */
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) ((heth->RxDesc)->Buffer2NextDescAddr);
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set HAL State to Ready */
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return function status */
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_OK;
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if first segment */
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else if((heth->RxDesc->Status & ETH_DMARXDESC_FS) != (uint32_t)RESET)
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).FSRxDesc = heth->RxDesc;
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).LSRxDesc = NULL;
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount = 1;
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if intermediate segment */ 
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
ARM GAS  /tmp/ccoFuW87.s 			page 20


1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount++;
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } 
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to Ready */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_ERROR;
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Gets the Received frame in interrupt mode. 
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetReceivedFrame_IT(ETH_HandleTypeDef *heth)
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t descriptorscancounter = 0;
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Scan descriptors owned by CPU */
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while (((heth->RxDesc->Status & ETH_DMARXDESC_OWN) == (uint32_t)RESET) && (descriptorscancounter 
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Just for security */
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     descriptorscancounter++;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if first segment in frame */
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* ((heth->RxDesc->Status & ETH_DMARXDESC_FS) != (uint32_t)RESET) && ((heth->RxDesc->Status & E
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((heth->RxDesc->Status & (ETH_DMARXDESC_FS | ETH_DMARXDESC_LS)) == (uint32_t)ETH_DMARXDESC_FS
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     { 
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.FSRxDesc = heth->RxDesc;
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.SegCount = 1;   
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check if intermediate segment */
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* ((heth->RxDesc->Status & ETH_DMARXDESC_LS) == (uint32_t)RESET)&& ((heth->RxDesc->Status & ET
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else if ((heth->RxDesc->Status & (ETH_DMARXDESC_LS | ETH_DMARXDESC_FS)) == (uint32_t)RESET)
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Increment segment count */
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos.SegCount)++;
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*)(heth->RxDesc->Buffer2NextDescAddr);
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
ARM GAS  /tmp/ccoFuW87.s 			page 21


1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Should be last segment */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     else
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     { 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Last segment */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.LSRxDesc = heth->RxDesc;
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Increment segment count */
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos.SegCount)++;
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Check if last segment is first segment: one segment contains the frame */
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       if ((heth->RxFrameInfos.SegCount) == 1)
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->RxFrameInfos.FSRxDesc = heth->RxDesc;
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the Frame Length of the received packet: substruct 4 bytes of the CRC */
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.length = (((heth->RxDesc)->Status & ETH_DMARXDESC_FL) >> ETH_DMARXDESC_FRA
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Get the address of the buffer start address */ 
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.buffer =((heth->RxFrameInfos).FSRxDesc)->Buffer1Addr;
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */      
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxDesc = (ETH_DMADescTypeDef*) (heth->RxDesc->Buffer2NextDescAddr);
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Set HAL State to Ready */
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State = HAL_ETH_STATE_READY;
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Return function status */
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_OK;
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set HAL State to Ready */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_ERROR;
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  This function handles ETH interrupt request.
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** void HAL_ETH_IRQHandler(ETH_HandleTypeDef *heth)
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Frame received */
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_R)) 
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccoFuW87.s 			page 22


1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*Call registered Receive complete callback*/
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->RxCpltCallback(heth);
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #else
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Receive complete callback */
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_RxCpltCallback(heth);
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Clear the Eth DMA Rx IT pending bits */
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_R);
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Frame transmitted */
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else if (__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_T)) 
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*  Call resgistered Transfer complete callback*/
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->TxCpltCallback(heth);
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #else
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Transfer complete callback */
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_TxCpltCallback(heth);
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear the Eth DMA Tx IT pending bits */
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_T);
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear the interrupt flags */
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_IT_NIS);
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* ETH DMA Error */
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(__HAL_ETH_DMA_GET_FLAG(heth, ETH_DMA_FLAG_AIS))
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->DMAErrorCallback(heth);
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #else
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Ethernet Error callback */
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_ETH_ErrorCallback(heth);
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear the interrupt flags */
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMA_FLAG_AIS);
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set HAL State to Ready */
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     heth->State = HAL_ETH_STATE_READY;
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
ARM GAS  /tmp/ccoFuW87.s 			page 23


1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Process Unlocked */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     __HAL_UNLOCK(heth);
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Tx Transfer completed callbacks.
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_TxCpltCallback(ETH_HandleTypeDef *heth)
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Rx Transfer completed callbacks.
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_RxCpltCallback(ETH_HandleTypeDef *heth)
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_RxCpltCallback could be implemented in the user file
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Ethernet transfer error callbacks
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** __weak void HAL_ETH_ErrorCallback(ETH_HandleTypeDef *heth)
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   UNUSED(heth);
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   the HAL_ETH_ErrorCallback could be implemented in the user file
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Reads a PHY register
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module                  
ARM GAS  /tmp/ccoFuW87.s 			page 24


1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param PHYReg PHY register address, is the index of one of the 32 PHY register. 
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                This parameter can be one of the following values: 
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   PHY_BCR: Transceiver Basic Control Register, 
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   PHY_BSR: Transceiver Basic Status Register.   
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *                   More PHY register could be read depending on the used PHY
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param RegValue PHY register value                  
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ReadPHYRegister(ETH_HandleTypeDef *heth, uint16_t PHYReg, uint32_t *RegVa
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;     
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_PHY_ADDRESS(heth->Init.PhyAddress));
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_BUSY_RD)
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_BUSY;
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY_RD */
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY_RD;
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = heth->Instance->MACMIIAR;
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Keep only the CSR Clock Range CR[2:0] bits value */
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_CR_MASK;
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prepare the MII address register value */
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)heth->Init.PhyAddress << 11) & ETH_MACMIIAR_PA); /* Set the PHY device addre
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)PHYReg<<6) & ETH_MACMIIAR_MR);                   /* Set the PHY register add
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_MW;                                           /* Set the read mode       
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MB;                                            /* Set the MII Busy bit    
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write the result value into the MII Address register */
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIAR = tmpreg;
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check for the Busy flag */
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while((tmpreg & ETH_MACMIIAR_MB) == ETH_MACMIIAR_MB)
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > PHY_READ_TO)
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_READY;
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = heth->Instance->MACMIIAR;
ARM GAS  /tmp/ccoFuW87.s 			page 25


1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get MACMIIDR value */
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *RegValue = (uint16_t)(heth->Instance->MACMIIDR);
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to READY */
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Writes to a PHY register.
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  PHYReg PHY register address, is the index of one of the 32 PHY register. 
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This parameter can be one of the following values: 
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             PHY_BCR: Transceiver Control Register.  
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             More PHY register could be written depending on the used PHY
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  RegValue the value to write
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_WritePHYRegister(ETH_HandleTypeDef *heth, uint16_t PHYReg, uint32_t RegVa
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tickstart = 0;
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_PHY_ADDRESS(heth->Init.PhyAddress));
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the ETH peripheral state */
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->State == HAL_ETH_STATE_BUSY_WR)
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     return HAL_BUSY;
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to BUSY_WR */
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY_WR;
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACMIIAR value */
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = heth->Instance->MACMIIAR;
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Keep only the CSR Clock Range CR[2:0] bits value */
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_CR_MASK;
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prepare the MII register address value */
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)heth->Init.PhyAddress<<11) & ETH_MACMIIAR_PA); /* Set the PHY device address
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)PHYReg<<6) & ETH_MACMIIAR_MR);                 /* Set the PHY register addre
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MW;                                          /* Set the write mode */
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MB;                                          /* Set the MII Busy bit */
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Give the value to the MII data register */
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIDR = (uint16_t)RegValue;
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write the result value into the MII Address register */
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->Instance->MACMIIAR = tmpreg;
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccoFuW87.s 			page 26


1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get tick */
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tickstart = HAL_GetTick();
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check for the Busy flag */
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   while((tmpreg & ETH_MACMIIAR_MB) == ETH_MACMIIAR_MB)
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check for the Timeout */
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if((HAL_GetTick() - tickstart ) > PHY_WRITE_TO)
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->State= HAL_ETH_STATE_READY;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Process Unlocked */
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       __HAL_UNLOCK(heth);
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       return HAL_TIMEOUT;
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = heth->Instance->MACMIIAR;
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set ETH HAL State to READY */
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK; 
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group3 Peripheral Control functions
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  *  @brief    Peripheral Control functions 
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  *
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** @verbatim   
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  ===============================================================================
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                   ##### Peripheral Control functions #####
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  ===============================================================================  
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     [..]  This section provides functions allowing to:
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Enable MAC and DMA transmission and reception.
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_Start();
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Disable MAC and DMA transmission and reception. 
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_Stop();
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Set the MAC configuration in runtime mode
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigMAC();
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (+) Set the DMA configuration in runtime mode
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****           HAL_ETH_ConfigDMA();
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** @endverbatim
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */ 
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****  /**
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables Ethernet MAC and DMA reception/transmission 
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
ARM GAS  /tmp/ccoFuW87.s 			page 27


1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Start(ETH_HandleTypeDef *heth)
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable transmit state machine of the MAC for transmission on the MII */
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACTransmissionEnable(heth);
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable receive state machine of the MAC for reception from the MII */
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACReceptionEnable(heth);
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Flush Transmit FIFO */
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_FlushTransmitFIFO(heth);
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Start DMA transmission */
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMATransmissionEnable(heth);
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Start DMA reception */
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAReceptionEnable(heth);
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state to READY*/
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Stop Ethernet MAC and DMA reception/transmission 
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Stop(ETH_HandleTypeDef *heth)
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_BUSY;
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Stop DMA transmission */
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMATransmissionDisable(heth);
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Stop DMA reception */
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAReceptionDisable(heth);
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable receive state machine of the MAC for reception from the MII */
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACReceptionDisable(heth);
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccoFuW87.s 			page 28


1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Flush Transmit FIFO */
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_FlushTransmitFIFO(heth);
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable transmit state machine of the MAC for transmission on the MII */
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACTransmissionDisable(heth);
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state*/
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State = HAL_ETH_STATE_READY;
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Set ETH MAC Configuration.
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  macconf MAC Configuration structure  
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ConfigMAC(ETH_HandleTypeDef *heth, ETH_MACInitTypeDef *macconf)
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_BUSY;
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_SPEED(heth->Init.Speed));
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DUPLEX_MODE(heth->Init.DuplexMode)); 
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (macconf != NULL)
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Check the parameters */
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_WATCHDOG(macconf->Watchdog));
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_JABBER(macconf->Jabber));
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_INTER_FRAME_GAP(macconf->InterFrameGap));
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CARRIER_SENSE(macconf->CarrierSense));
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_OWN(macconf->ReceiveOwn));
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_LOOPBACK_MODE(macconf->LoopbackMode));
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CHECKSUM_OFFLOAD(macconf->ChecksumOffload));
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RETRY_TRANSMISSION(macconf->RetryTransmission));
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_AUTOMATIC_PADCRC_STRIP(macconf->AutomaticPadCRCStrip));
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_BACKOFF_LIMIT(macconf->BackOffLimit));
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DEFERRAL_CHECK(macconf->DeferralCheck));
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_ALL(macconf->ReceiveAll));
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_SOURCE_ADDR_FILTER(macconf->SourceAddrFilter));
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_CONTROL_FRAMES(macconf->PassControlFrames));
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_BROADCAST_FRAMES_RECEPTION(macconf->BroadcastFramesReception));
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_DESTINATION_ADDR_FILTER(macconf->DestinationAddrFilter));
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PROMISCUOUS_MODE(macconf->PromiscuousMode));
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_MULTICAST_FRAMES_FILTER(macconf->MulticastFramesFilter));
ARM GAS  /tmp/ccoFuW87.s 			page 29


1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_UNICAST_FRAMES_FILTER(macconf->UnicastFramesFilter));
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PAUSE_TIME(macconf->PauseTime));
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_ZEROQUANTA_PAUSE(macconf->ZeroQuantaPause));
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_PAUSE_LOW_THRESHOLD(macconf->PauseLowThreshold));
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_UNICAST_PAUSE_FRAME_DETECT(macconf->UnicastPauseFrameDetect));
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_RECEIVE_FLOWCONTROL(macconf->ReceiveFlowControl));
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_TRANSMIT_FLOWCONTROL(macconf->TransmitFlowControl));
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_VLAN_TAG_COMPARISON(macconf->VLANTagComparison));
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     assert_param(IS_ETH_VLAN_TAG_IDENTIFIER(macconf->VLANTagIdentifier));
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*------------------------ ETHERNET MACCR Configuration --------------------*/
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET MACCR value */
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear WD, PCE, PS, TE and RE bits */
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ETH_MACCR_CLEAR_MASK;
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(macconf->Watchdog | 
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->InterFrameGap |
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->CarrierSense |
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).Speed | 
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ReceiveOwn |
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->LoopbackMode |
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).DuplexMode | 
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ChecksumOffload |    
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->RetryTransmission | 
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->AutomaticPadCRCStrip | 
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->BackOffLimit | 
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->DeferralCheck);
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACCR */
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = (uint32_t)tmpreg;
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account :
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     at least four TX_CLK/RX_CLK clock cycles */
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = tmpreg; 
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*----------------------- ETHERNET MACFFR Configuration --------------------*/ 
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACFFR */  
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACFFR = (uint32_t)(macconf->ReceiveAll | 
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PassControlFrames |
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->BroadcastFramesReception | 
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->DestinationAddrFilter |
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PromiscuousMode |
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->MulticastFramesFilter |
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->UnicastFramesFilter);
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account :
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFFR;
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFFR = tmpreg;
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*--------------- ETHERNET MACHTHR and MACHTLR Configuration ---------------*/
ARM GAS  /tmp/ccoFuW87.s 			page 30


1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACHTHR */
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACHTHR = (uint32_t)macconf->HashTableHigh;
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACHTLR */
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACHTLR = (uint32_t)macconf->HashTableLow;
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*----------------------- ETHERNET MACFCR Configuration --------------------*/
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Get the ETHERNET MACFCR value */  
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFCR;
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Clear xx bits */
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg &= ETH_MACFCR_CLEAR_MASK;
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg |= (uint32_t)((macconf->PauseTime << 16) | 
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->PauseLowThreshold |
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->UnicastPauseFrameDetect | 
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ReceiveFlowControl |
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->TransmitFlowControl); 
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Write to ETHERNET MACFCR */
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFCR = (uint32_t)tmpreg;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account :
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->MACFCR;
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFCR = tmpreg;
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*----------------------- ETHERNET MACVLANTR Configuration -----------------*/
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACVLANTR = (uint32_t)(macconf->VLANTagComparison | 
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                               macconf->VLANTagIdentifier);
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Wait until the write operation will be taken into account :
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       tmpreg = (heth->Instance)->MACVLANTR;
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_Delay(ETH_REG_WRITE_DELAY);
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Instance)->MACVLANTR = tmpreg;
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else /* macconf == NULL : here we just configure Speed and Duplex mode */
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*------------------------ ETHERNET MACCR Configuration --------------------*/
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET MACCR value */
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear FES and DM bits */
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ~((uint32_t)0x00004800);
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(heth->Init.Speed | heth->Init.DuplexMode);
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET MACCR */
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = (uint32_t)tmpreg;
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     at least four TX_CLK/RX_CLK clock cycles */
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACCR;
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = tmpreg;
ARM GAS  /tmp/ccoFuW87.s 			page 31


1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH state to Ready */
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_READY;
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Unlocked */
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return function status */
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return HAL_OK;  
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Sets ETH DMA Configuration.
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  dmaconf DMA Configuration structure  
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ConfigDMA(ETH_HandleTypeDef *heth, ETH_DMAInitTypeDef *dmaconf)
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __HAL_LOCK(heth);
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   heth->State= HAL_ETH_STATE_BUSY;
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check parameters */
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DROP_TCPIP_CHECKSUM_FRAME(dmaconf->DropTCPIPChecksumErrorFrame));
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RECEIVE_STORE_FORWARD(dmaconf->ReceiveStoreForward));
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FLUSH_RECEIVE_FRAME(dmaconf->FlushReceivedFrame));
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TRANSMIT_STORE_FORWARD(dmaconf->TransmitStoreForward));
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TRANSMIT_THRESHOLD_CONTROL(dmaconf->TransmitThresholdControl));
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FORWARD_ERROR_FRAMES(dmaconf->ForwardErrorFrames));
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FORWARD_UNDERSIZED_GOOD_FRAMES(dmaconf->ForwardUndersizedGoodFrames));
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RECEIVE_THRESHOLD_CONTROL(dmaconf->ReceiveThresholdControl));
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_SECOND_FRAME_OPERATE(dmaconf->SecondFrameOperate));
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_ADDRESS_ALIGNED_BEATS(dmaconf->AddressAlignedBeats));
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_FIXED_BURST(dmaconf->FixedBurst));
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_RXDMA_BURST_LENGTH(dmaconf->RxDMABurstLength));
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_TXDMA_BURST_LENGTH(dmaconf->TxDMABurstLength));
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_ENHANCED_DESCRIPTOR_FORMAT(dmaconf->EnhancedDescriptorFormat));
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DMA_DESC_SKIP_LENGTH(dmaconf->DescriptorSkipLength));
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_DMA_ARBITRATION_ROUNDROBIN_RXTX(dmaconf->DMAArbitration));
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET DMAOMR Configuration --------------------*/
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET DMAOMR value */
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear xx bits */
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ETH_DMAOMR_CLEAR_MASK;
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= (uint32_t)(dmaconf->DropTCPIPChecksumErrorFrame | 
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->FlushReceivedFrame |
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitStoreForward | 
ARM GAS  /tmp/ccoFuW87.s 			page 32


1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitThresholdControl |
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardErrorFrames |
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardUndersizedGoodFrames |
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveThresholdControl |
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->SecondFrameOperate);
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET DMAOMR */
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = (uint32_t)tmpreg;
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   at least four TX_CLK/RX_CLK clock cycles */
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = tmpreg;
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET DMABMR Configuration --------------------*/
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMABMR = (uint32_t)(dmaconf->AddressAlignedBeats | 
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->TxDMABurstLength |
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->EnhancedDescriptorFormat |
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          (dmaconf->DescriptorSkipLength << 2) |
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->DMAArbitration | 
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and 
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->DMABMR;
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->DMABMR = tmpreg;
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the ETH state to Ready */
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    heth->State= HAL_ETH_STATE_READY;
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Process Unlocked */
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    __HAL_UNLOCK(heth);
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Return function status */
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    return HAL_OK; 
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group4 Peripheral State functions 
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *  @brief   Peripheral State functions 
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @verbatim   
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          ##### Peripheral State functions #####
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ===============================================================================  
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   [..]
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   This subsection permits to get in run-time the status of the peripheral 
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   and the data flow.
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        (+) Get the ETH handle state:
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            HAL_ETH_GetState();
ARM GAS  /tmp/ccoFuW87.s 			page 33


1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****            
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   @endverbatim
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Return the ETH HAL state
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL state
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** HAL_ETH_StateTypeDef HAL_ETH_GetState(ETH_HandleTypeDef *heth)
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return ETH state */
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   return heth->State;
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @}
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /** @addtogroup ETH_Private_Functions
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @{
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Configures Ethernet MAC and DMA with default parameters.
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  err Ethernet Init error
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth, uint32_t err)
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACInitTypeDef macinit;
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_DMAInitTypeDef dmainit;
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if (err != ETH_SUCCESS) /* Auto-negotiation failed */
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Ethernet duplex mode to Full-duplex */
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Init).DuplexMode = ETH_MODE_FULLDUPLEX;
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Ethernet speed to 100M */
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Init).Speed = ETH_SPEED_100M;
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Ethernet MAC default initialization **************************************/
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.Watchdog = ETH_WATCHDOG_ENABLE;
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.Jabber = ETH_JABBER_ENABLE;
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.InterFrameGap = ETH_INTERFRAMEGAP_96BIT;
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.CarrierSense = ETH_CARRIERSENCE_ENABLE;
ARM GAS  /tmp/ccoFuW87.s 			page 34


1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveOwn = ETH_RECEIVEOWN_ENABLE;
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.LoopbackMode = ETH_LOOPBACKMODE_DISABLE;
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   if(heth->Init.ChecksumMode == ETH_CHECKSUM_BY_HARDWARE)
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     macinit.ChecksumOffload = ETH_CHECKSUMOFFLAOD_ENABLE;
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   else
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     macinit.ChecksumOffload = ETH_CHECKSUMOFFLAOD_DISABLE;
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.RetryTransmission = ETH_RETRYTRANSMISSION_DISABLE;
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.AutomaticPadCRCStrip = ETH_AUTOMATICPADCRCSTRIP_DISABLE;
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.BackOffLimit = ETH_BACKOFFLIMIT_10;
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.DeferralCheck = ETH_DEFFERRALCHECK_DISABLE;
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveAll = ETH_RECEIVEAll_DISABLE;
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.SourceAddrFilter = ETH_SOURCEADDRFILTER_DISABLE;
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PassControlFrames = ETH_PASSCONTROLFRAMES_BLOCKALL;
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.BroadcastFramesReception = ETH_BROADCASTFRAMESRECEPTION_ENABLE;
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.DestinationAddrFilter = ETH_DESTINATIONADDRFILTER_NORMAL;
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PromiscuousMode = ETH_PROMISCUOUS_MODE_DISABLE;
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.MulticastFramesFilter = ETH_MULTICASTFRAMESFILTER_PERFECT;
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.UnicastFramesFilter = ETH_UNICASTFRAMESFILTER_PERFECT;
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.HashTableHigh = 0x0;
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.HashTableLow = 0x0;
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PauseTime = 0x0;
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ZeroQuantaPause = ETH_ZEROQUANTAPAUSE_DISABLE;
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.PauseLowThreshold = ETH_PAUSELOWTHRESHOLD_MINUS4;
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.UnicastPauseFrameDetect = ETH_UNICASTPAUSEFRAMEDETECT_DISABLE;
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.ReceiveFlowControl = ETH_RECEIVEFLOWCONTROL_DISABLE;
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.TransmitFlowControl = ETH_TRANSMITFLOWCONTROL_DISABLE;
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.VLANTagComparison = ETH_VLANTAGCOMPARISON_16BIT;
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   macinit.VLANTagIdentifier = 0x0;
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*------------------------ ETHERNET MACCR Configuration --------------------*/
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Get the ETHERNET MACCR value */
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear WD, PCE, PS, TE and RE bits */
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ETH_MACCR_CLEAR_MASK;
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the WD bit according to ETH Watchdog value */
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the JD: bit according to ETH Jabber value */
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the IFG bit according to ETH InterFrameGap value */
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DCRS bit according to ETH CarrierSense value */
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the FES bit according to ETH Speed value */ 
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DO bit according to ETH ReceiveOwn value */ 
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the LM bit according to ETH LoopbackMode value */
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DM bit according to ETH Mode value */ 
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the IPCO bit according to ETH ChecksumOffload value */
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DR bit according to ETH RetryTransmission value */
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ACS bit according to ETH AutomaticPadCRCStrip value */
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the BL bit according to ETH BackOffLimit value */
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DC bit according to ETH DeferralCheck value */
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= (uint32_t)(macinit.Watchdog | 
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.InterFrameGap |
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.CarrierSense |
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).Speed | 
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ReceiveOwn |
ARM GAS  /tmp/ccoFuW87.s 			page 35


1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.LoopbackMode |
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).DuplexMode | 
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ChecksumOffload |    
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.RetryTransmission | 
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.AutomaticPadCRCStrip | 
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.BackOffLimit | 
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.DeferralCheck);
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MACCR */
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = (uint32_t)tmpreg;
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg; 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /*----------------------- ETHERNET MACFFR Configuration --------------------*/ 
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the RA bit according to ETH ReceiveAll value */
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the SAF and SAIF bits according to ETH SourceAddrFilter value */
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PCF bit according to ETH PassControlFrames value */
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DBF bit according to ETH BroadcastFramesReception value */
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the DAIF bit according to ETH DestinationAddrFilter value */
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PR bit according to ETH PromiscuousMode value */
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the PM, HMC and HPF bits according to ETH MulticastFramesFilter value */
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the HUC and HPF bits according to ETH UnicastFramesFilter value */
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Write to ETHERNET MACFFR */  
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACFFR = (uint32_t)(macinit.ReceiveAll | 
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PassControlFrames |
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.BroadcastFramesReception | 
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.DestinationAddrFilter |
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.PromiscuousMode |
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.MulticastFramesFilter |
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.UnicastFramesFilter);
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       at least four TX_CLK/RX_CLK clock cycles */
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFFR;
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFFR = tmpreg;
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*--------------- ETHERNET MACHTHR and MACHTLR Configuration --------------*/
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACHTHR */
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACHTHR = (uint32_t)macinit.HashTableHigh;
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACHTLR */
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACHTLR = (uint32_t)macinit.HashTableLow;
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*----------------------- ETHERNET MACFCR Configuration -------------------*/
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Get the ETHERNET MACFCR value */  
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFCR;
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Clear xx bits */
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg &= ETH_MACFCR_CLEAR_MASK;
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the PT bit according to ETH PauseTime value */
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the DZPQ bit according to ETH ZeroQuantaPause value */
ARM GAS  /tmp/ccoFuW87.s 			page 36


1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the PLT bit according to ETH PauseLowThreshold value */
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the UP bit according to ETH UnicastPauseFrameDetect value */
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the RFE bit according to ETH ReceiveFlowControl value */
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the TFE bit according to ETH TransmitFlowControl value */ 
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg |= (uint32_t)((macinit.PauseTime << 16) | 
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.PauseLowThreshold |
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.UnicastPauseFrameDetect | 
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ReceiveFlowControl |
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.TransmitFlowControl); 
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Write to ETHERNET MACFCR */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFCR = (uint32_t)tmpreg;
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Wait until the write operation will be taken into account:
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    at least four TX_CLK/RX_CLK clock cycles */
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    tmpreg = (heth->Instance)->MACFCR;
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFCR = tmpreg;
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*----------------------- ETHERNET MACVLANTR Configuration ----------------*/
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the ETV bit according to ETH VLANTagComparison value */
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Set the VL bit according to ETH VLANTagIdentifier value */  
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACVLANTR = (uint32_t)(macinit.VLANTagComparison | 
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                             macinit.VLANTagIdentifier);
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        at least four TX_CLK/RX_CLK clock cycles */
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->MACVLANTR;
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACVLANTR = tmpreg;
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Ethernet DMA default initialization ************************************/
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DropTCPIPChecksumErrorFrame = ETH_DROPTCPIPCHECKSUMERRORFRAME_ENABLE;
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ReceiveStoreForward = ETH_RECEIVESTOREFORWARD_ENABLE;
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.FlushReceivedFrame = ETH_FLUSHRECEIVEDFRAME_ENABLE;
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TransmitStoreForward = ETH_TRANSMITSTOREFORWARD_ENABLE;  
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TransmitThresholdControl = ETH_TRANSMITTHRESHOLDCONTROL_64BYTES;
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ForwardErrorFrames = ETH_FORWARDERRORFRAMES_DISABLE;
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ForwardUndersizedGoodFrames = ETH_FORWARDUNDERSIZEDGOODFRAMES_DISABLE;
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.ReceiveThresholdControl = ETH_RECEIVEDTHRESHOLDCONTROL_64BYTES;
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.SecondFrameOperate = ETH_SECONDFRAMEOPERARTE_ENABLE;
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.AddressAlignedBeats = ETH_ADDRESSALIGNEDBEATS_ENABLE;
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.FixedBurst = ETH_FIXEDBURST_ENABLE;
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.RxDMABurstLength = ETH_RXDMABURSTLENGTH_32BEAT;
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.TxDMABurstLength = ETH_TXDMABURSTLENGTH_32BEAT;
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.EnhancedDescriptorFormat = ETH_DMAENHANCEDDESCRIPTOR_ENABLE;
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DescriptorSkipLength = 0x0;
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     dmainit.DMAArbitration = ETH_DMAARBITRATION_ROUNDROBIN_RXTX_1_1;
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Get the ETHERNET DMAOMR value */
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->DMAOMR;
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear xx bits */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg &= ETH_DMAOMR_CLEAR_MASK;
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DT bit according to ETH DropTCPIPChecksumErrorFrame value */
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RSF bit according to ETH ReceiveStoreForward value */
ARM GAS  /tmp/ccoFuW87.s 			page 37


2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DFF bit according to ETH FlushReceivedFrame value */
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the TSF bit according to ETH TransmitStoreForward value */
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the TTC bit according to ETH TransmitThresholdControl value */
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FEF bit according to ETH ForwardErrorFrames value */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FUF bit according to ETH ForwardUndersizedGoodFrames value */
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RTC bit according to ETH ReceiveThresholdControl value */
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the OSF bit according to ETH SecondFrameOperate value */
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg |= (uint32_t)(dmainit.DropTCPIPChecksumErrorFrame | 
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.FlushReceivedFrame |
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitStoreForward | 
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.TransmitThresholdControl |
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardErrorFrames |
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ForwardUndersizedGoodFrames |
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveThresholdControl |
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.SecondFrameOperate);
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Write to ETHERNET DMAOMR */
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMAOMR = (uint32_t)tmpreg;
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Wait until the write operation will be taken into account:
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        at least four TX_CLK/RX_CLK clock cycles */
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     tmpreg = (heth->Instance)->DMAOMR;
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMAOMR = tmpreg;
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /*----------------------- ETHERNET DMABMR Configuration ------------------*/
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the AAL bit according to ETH AddressAlignedBeats value */
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the FB bit according to ETH FixedBurst value */
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the RPBL and 4*PBL bits according to ETH RxDMABurstLength value */
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the PBL and 4*PBL bits according to ETH TxDMABurstLength value */
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the Enhanced DMA descriptors bit according to ETH EnhancedDescriptorFormat value*/
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the DSL bit according to ETH DesciptorSkipLength value */
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set the PR and DA bits according to ETH DMAArbitration value */
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMABMR = (uint32_t)(dmainit.AddressAlignedBeats | 
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.RxDMABurstLength |    /* !! if 4xPBL is selected 
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.TxDMABurstLength |
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.EnhancedDescriptorFormat |
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           (dmainit.DescriptorSkipLength << 2) |
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.DMAArbitration |
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Wait until the write operation will be taken into account:
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         at least four TX_CLK/RX_CLK clock cycles */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      tmpreg = (heth->Instance)->DMABMR;
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->DMABMR = tmpreg;
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      if((heth->Init).RxMode == ETH_RXINTERRUPT_MODE)
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      {
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        /* Enable the Ethernet Rx Interrupt */
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****        __HAL_ETH_DMA_ENABLE_IT((heth), ETH_DMA_IT_NIS | ETH_DMA_IT_R);
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      }
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Initialize MAC address in ethernet MAC */ 
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      ETH_MACAddressConfig(heth, ETH_MAC_ADDRESS0, heth->Init.MACAddr);
ARM GAS  /tmp/ccoFuW87.s 			page 38


2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Configures the selected MAC address.
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  MacAddr The MAC address to configure
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *          This parameter can be one of the following values:
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address0: MAC Address0 
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address1: MAC Address1 
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address2: MAC Address2
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *             @arg ETH_MAC_Address3: MAC Address3
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  Addr Pointer to MAC address buffer data (6 bytes)
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval HAL status
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACAddressConfig(ETH_HandleTypeDef *heth, uint32_t MacAddr, uint8_t *Addr)
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
  26              		.loc 1 2102 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg;
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Check the parameters */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   assert_param(IS_ETH_MAC_ADDRESS0123(MacAddr));
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Calculate the selected MAC address high register */
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = ((uint32_t)Addr[5] << 8) | (uint32_t)Addr[4];
  32              		.loc 1 2109 0
  33 0000 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
  34              	.LVL1:
  35 0002 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
  36 0004 43EA0023 		orr	r3, r3, r0, lsl #8
  37              	.LVL2:
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Load the selected MAC address high register */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (*(__IO uint32_t *)((uint32_t)(ETH_MAC_ADDR_HBASE + MacAddr))) = tmpreg;
  38              		.loc 1 2111 0
  39 0008 0748     		ldr	r0, .L2
  40 000a 0B50     		str	r3, [r1, r0]
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Calculate the selected MAC address low register */
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = ((uint32_t)Addr[3] << 24) | ((uint32_t)Addr[2] << 16) | ((uint32_t)Addr[1] << 8) | Addr[
  41              		.loc 1 2113 0
  42 000c D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
  43 000e 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
  44              	.LVL3:
  45 0010 1B04     		lsls	r3, r3, #16
  46 0012 43EA0063 		orr	r3, r3, r0, lsl #24
  47 0016 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
  48 0018 43EA0023 		orr	r3, r3, r0, lsl #8
  49 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  50              	.LVL4:
  51 001e 1343     		orrs	r3, r3, r2
  52              	.LVL5:
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Load the selected MAC address low register */
ARM GAS  /tmp/ccoFuW87.s 			page 39


2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (*(__IO uint32_t *)((uint32_t)(ETH_MAC_ADDR_LBASE + MacAddr))) = tmpreg;
  53              		.loc 1 2116 0
  54 0020 024A     		ldr	r2, .L2+4
  55 0022 8B50     		str	r3, [r1, r2]
  56 0024 7047     		bx	lr
  57              	.L3:
  58 0026 00BF     		.align	2
  59              	.L2:
  60 0028 40800240 		.word	1073905728
  61 002c 44800240 		.word	1073905732
  62              		.cfi_endproc
  63              	.LFE162:
  65              		.section	.text.ETH_DMATransmissionEnable,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-d16
  72              	ETH_DMATransmissionEnable:
  73              	.LFB167:
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the MAC transmission.
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionEnable(ETH_HandleTypeDef *heth)
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the MAC transmission */
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR |= ETH_MACCR_TE;
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the MAC transmission.
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module  
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACTransmissionDisable(ETH_HandleTypeDef *heth)
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the MAC transmission */
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR &= ~ETH_MACCR_TE;
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
ARM GAS  /tmp/ccoFuW87.s 			page 40


2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the MAC reception.
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionEnable(ETH_HandleTypeDef *heth)
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the MAC reception */
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR |= ETH_MACCR_RE;
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the MAC reception.
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_MACReceptionDisable(ETH_HandleTypeDef *heth)
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the MAC reception */
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR &= ~ETH_MACCR_RE; 
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACCR;
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the DMA transmission.
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionEnable(ETH_HandleTypeDef *heth)
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
  74              		.loc 1 2206 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccoFuW87.s 			page 41


  78              		@ link register save eliminated.
  79              	.LVL6:
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the DMA transmission */
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_ST;  
  80              		.loc 1 2208 0
  81 0000 0168     		ldr	r1, [r0]
  82 0002 41F21802 		movw	r2, #4120
  83 0006 8B58     		ldr	r3, [r1, r2]
  84 0008 43F40053 		orr	r3, r3, #8192
  85 000c 8B50     		str	r3, [r1, r2]
  86 000e 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE167:
  90              		.section	.text.ETH_DMATransmissionDisable,"ax",%progbits
  91              		.align	1
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv5-d16
  97              	ETH_DMATransmissionDisable:
  98              	.LFB168:
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the DMA transmission.
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module   
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMATransmissionDisable(ETH_HandleTypeDef *heth)
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
  99              		.loc 1 2218 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL7:
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the DMA transmission */
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR &= ~ETH_DMAOMR_ST;
 105              		.loc 1 2220 0
 106 0000 0168     		ldr	r1, [r0]
 107 0002 41F21802 		movw	r2, #4120
 108 0006 8B58     		ldr	r3, [r1, r2]
 109 0008 23F40053 		bic	r3, r3, #8192
 110 000c 8B50     		str	r3, [r1, r2]
 111 000e 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE168:
 115              		.section	.text.ETH_DMAReceptionEnable,"ax",%progbits
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv5-d16
 122              	ETH_DMAReceptionEnable:
 123              	.LFB169:
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
ARM GAS  /tmp/ccoFuW87.s 			page 42


2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Enables the DMA reception.
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module 
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionEnable(ETH_HandleTypeDef *heth)
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {  
 124              		.loc 1 2230 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.LVL8:
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Enable the DMA reception */
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_SR;  
 130              		.loc 1 2232 0
 131 0000 0168     		ldr	r1, [r0]
 132 0002 41F21802 		movw	r2, #4120
 133 0006 8B58     		ldr	r3, [r1, r2]
 134 0008 43F00203 		orr	r3, r3, #2
 135 000c 8B50     		str	r3, [r1, r2]
 136 000e 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE169:
 140              		.section	.text.ETH_DMAReceptionDisable,"ax",%progbits
 141              		.align	1
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	ETH_DMAReceptionDisable:
 148              	.LFB170:
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Disables the DMA reception.
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module 
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_DMAReceptionDisable(ETH_HandleTypeDef *heth)
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** { 
 149              		.loc 1 2242 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.LVL9:
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Disable the DMA reception */
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR &= ~ETH_DMAOMR_SR;
 155              		.loc 1 2244 0
 156 0000 0168     		ldr	r1, [r0]
 157 0002 41F21802 		movw	r2, #4120
 158 0006 8B58     		ldr	r3, [r1, r2]
 159 0008 23F00203 		bic	r3, r3, #2
ARM GAS  /tmp/ccoFuW87.s 			page 43


 160 000c 8B50     		str	r3, [r1, r2]
 161 000e 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE170:
 165              		.section	.text.ETH_MACDMAConfig,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu fpv5-d16
 172              	ETH_MACDMAConfig:
 173              	.LFB161:
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   ETH_MACInitTypeDef macinit;
 174              		.loc 1 1839 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 120
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL10:
 179 0000 70B5     		push	{r4, r5, r6, lr}
 180              	.LCFI0:
 181              		.cfi_def_cfa_offset 16
 182              		.cfi_offset 4, -16
 183              		.cfi_offset 5, -12
 184              		.cfi_offset 6, -8
 185              		.cfi_offset 14, -4
 186 0002 9EB0     		sub	sp, sp, #120
 187              	.LCFI1:
 188              		.cfi_def_cfa_offset 136
 189 0004 0446     		mov	r4, r0
 190              	.LVL11:
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 191              		.loc 1 1844 0
 192 0006 29B1     		cbz	r1, .L9
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 193              		.loc 1 1847 0
 194 0008 4FF40063 		mov	r3, #2048
 195 000c C360     		str	r3, [r0, #12]
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 196              		.loc 1 1850 0
 197 000e 4FF48043 		mov	r3, #16384
 198 0012 8360     		str	r3, [r0, #8]
 199              	.L9:
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 200              		.loc 1 1860 0
 201 0014 E369     		ldr	r3, [r4, #28]
 202 0016 002B     		cmp	r3, #0
 203 0018 68D1     		bne	.L10
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 204              		.loc 1 1862 0
 205 001a 4FF48063 		mov	r3, #1024
 206 001e 0793     		str	r3, [sp, #28]
 207              	.L11:
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear WD, PCE, PS, TE and RE bits */
 208              		.loc 1 1893 0
 209 0020 2168     		ldr	r1, [r4]
 210              	.LVL12:
 211 0022 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/ccoFuW87.s 			page 44


 212              	.LVL13:
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the WD bit according to ETH Watchdog value */
 213              		.loc 1 1895 0
 214 0024 374A     		ldr	r2, .L15
 215 0026 1A40     		ands	r2, r2, r3
 216              	.LVL14:
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ReceiveOwn |
 217              		.loc 1 1913 0
 218 0028 A368     		ldr	r3, [r4, #8]
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ChecksumOffload |    
 219              		.loc 1 1916 0
 220 002a E068     		ldr	r0, [r4, #12]
 221              	.LVL15:
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        (heth->Init).DuplexMode | 
 222              		.loc 1 1915 0
 223 002c 0343     		orrs	r3, r3, r0
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.RetryTransmission | 
 224              		.loc 1 1917 0
 225 002e 0798     		ldr	r0, [sp, #28]
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.ChecksumOffload |    
 226              		.loc 1 1916 0
 227 0030 0343     		orrs	r3, r3, r0
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.RetryTransmission | 
 228              		.loc 1 1917 0
 229 0032 43F40073 		orr	r3, r3, #512
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        macinit.Jabber | 
 230              		.loc 1 1909 0
 231 0036 1343     		orrs	r3, r3, r2
 232              	.LVL16:
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 233              		.loc 1 1924 0
 234 0038 0B60     		str	r3, [r1]
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 235              		.loc 1 1928 0
 236 003a 2368     		ldr	r3, [r4]
 237              	.LVL17:
 238 003c 1D68     		ldr	r5, [r3]
 239              	.LVL18:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg; 
 240              		.loc 1 1929 0
 241 003e 0120     		movs	r0, #1
 242 0040 FFF7FEFF 		bl	HAL_Delay
 243              	.LVL19:
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 244              		.loc 1 1930 0
 245 0044 2368     		ldr	r3, [r4]
 246 0046 1D60     		str	r5, [r3]
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                         macinit.SourceAddrFilter |
 247              		.loc 1 1942 0
 248 0048 2368     		ldr	r3, [r4]
 249 004a 4022     		movs	r2, #64
 250 004c 5A60     		str	r2, [r3, #4]
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 251              		.loc 1 1953 0
 252 004e 2368     		ldr	r3, [r4]
 253 0050 5D68     		ldr	r5, [r3, #4]
 254              	.LVL20:
ARM GAS  /tmp/ccoFuW87.s 			page 45


1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFFR = tmpreg;
 255              		.loc 1 1954 0
 256 0052 0120     		movs	r0, #1
 257 0054 FFF7FEFF 		bl	HAL_Delay
 258              	.LVL21:
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
 259              		.loc 1 1955 0
 260 0058 2368     		ldr	r3, [r4]
 261 005a 5D60     		str	r5, [r3, #4]
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
 262              		.loc 1 1959 0
 263 005c 2368     		ldr	r3, [r4]
 264 005e 0025     		movs	r5, #0
 265              	.LVL22:
 266 0060 9D60     		str	r5, [r3, #8]
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /*----------------------- ETHERNET MACFCR Configuration -------------------*/
 267              		.loc 1 1962 0
 268 0062 2368     		ldr	r3, [r4]
 269 0064 DD60     		str	r5, [r3, #12]
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    /* Clear xx bits */
 270              		.loc 1 1966 0
 271 0066 2268     		ldr	r2, [r4]
 272 0068 9369     		ldr	r3, [r2, #24]
 273              	.LVL23:
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
 274              		.loc 1 1968 0
 275 006a 23F0BE03 		bic	r3, r3, #190
 276              	.LVL24:
 277 006e 1B04     		lsls	r3, r3, #16
 278 0070 1B0C     		lsrs	r3, r3, #16
 279              	.LVL25:
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                         macinit.ZeroQuantaPause |
 280              		.loc 1 1976 0
 281 0072 43F08003 		orr	r3, r3, #128
 282              	.LVL26:
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
 283              		.loc 1 1984 0
 284 0076 9361     		str	r3, [r2, #24]
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 285              		.loc 1 1988 0
 286 0078 2368     		ldr	r3, [r4]
 287              	.LVL27:
 288 007a 9E69     		ldr	r6, [r3, #24]
 289              	.LVL28:
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->MACFCR = tmpreg;
 290              		.loc 1 1989 0
 291 007c 0120     		movs	r0, #1
 292 007e FFF7FEFF 		bl	HAL_Delay
 293              	.LVL29:
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
 294              		.loc 1 1990 0
 295 0082 2368     		ldr	r3, [r4]
 296 0084 9E61     		str	r6, [r3, #24]
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                             macinit.VLANTagIdentifier);
 297              		.loc 1 1995 0
 298 0086 2368     		ldr	r3, [r4]
 299 0088 DD61     		str	r5, [r3, #28]
ARM GAS  /tmp/ccoFuW87.s 			page 46


2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 300              		.loc 1 2000 0
 301 008a 2368     		ldr	r3, [r4]
 302 008c DD69     		ldr	r5, [r3, #28]
 303              	.LVL30:
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACVLANTR = tmpreg;
 304              		.loc 1 2001 0
 305 008e 0120     		movs	r0, #1
 306 0090 FFF7FEFF 		bl	HAL_Delay
 307              	.LVL31:
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 308              		.loc 1 2002 0
 309 0094 2368     		ldr	r3, [r4]
 310 0096 DD61     		str	r5, [r3, #28]
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear xx bits */
 311              		.loc 1 2023 0
 312 0098 2168     		ldr	r1, [r4]
 313 009a 41F21805 		movw	r5, #4120
 314              	.LVL32:
 315 009e 4B59     		ldr	r3, [r1, r5]
 316              	.LVL33:
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 317              		.loc 1 2025 0
 318 00a0 194A     		ldr	r2, .L15+4
 319 00a2 1A40     		ands	r2, r2, r3
 320              	.LVL34:
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          dmainit.ReceiveStoreForward |
 321              		.loc 1 2036 0
 322 00a4 194B     		ldr	r3, .L15+8
 323 00a6 1343     		orrs	r3, r3, r2
 324              	.LVL35:
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 325              		.loc 1 2047 0
 326 00a8 4B51     		str	r3, [r1, r5]
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 327              		.loc 1 2051 0
 328 00aa 2368     		ldr	r3, [r4]
 329              	.LVL36:
 330 00ac 5E59     		ldr	r6, [r3, r5]
 331              	.LVL37:
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->DMAOMR = tmpreg;
 332              		.loc 1 2052 0
 333 00ae 0120     		movs	r0, #1
 334 00b0 FFF7FEFF 		bl	HAL_Delay
 335              	.LVL38:
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 336              		.loc 1 2053 0
 337 00b4 2368     		ldr	r3, [r4]
 338 00b6 5E51     		str	r6, [r3, r5]
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           dmainit.FixedBurst |
 339              		.loc 1 2063 0
 340 00b8 2368     		ldr	r3, [r4]
 341 00ba 03F58053 		add	r3, r3, #4096
 342 00be 144A     		ldr	r2, .L15+12
 343 00c0 1A60     		str	r2, [r3]
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 344              		.loc 1 2074 0
ARM GAS  /tmp/ccoFuW87.s 			page 47


 345 00c2 2368     		ldr	r3, [r4]
 346 00c4 03F58053 		add	r3, r3, #4096
 347 00c8 1D68     		ldr	r5, [r3]
 348              	.LVL39:
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->DMABMR = tmpreg;
 349              		.loc 1 2075 0
 350 00ca 0120     		movs	r0, #1
 351 00cc FFF7FEFF 		bl	HAL_Delay
 352              	.LVL40:
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 353              		.loc 1 2076 0
 354 00d0 2368     		ldr	r3, [r4]
 355 00d2 03F58053 		add	r3, r3, #4096
 356 00d6 1D60     		str	r5, [r3]
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      {
 357              		.loc 1 2078 0
 358 00d8 A369     		ldr	r3, [r4, #24]
 359 00da 012B     		cmp	r3, #1
 360 00dc 09D0     		beq	.L14
 361              	.L12:
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 362              		.loc 1 2085 0
 363 00de 6269     		ldr	r2, [r4, #20]
 364 00e0 0021     		movs	r1, #0
 365 00e2 2046     		mov	r0, r4
 366 00e4 FFF7FEFF 		bl	ETH_MACAddressConfig
 367              	.LVL41:
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 368              		.loc 1 2086 0
 369 00e8 1EB0     		add	sp, sp, #120
 370              	.LCFI2:
 371              		.cfi_remember_state
 372              		.cfi_def_cfa_offset 16
 373              		@ sp needed
 374 00ea 70BD     		pop	{r4, r5, r6, pc}
 375              	.LVL42:
 376              	.L10:
 377              	.LCFI3:
 378              		.cfi_restore_state
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 379              		.loc 1 1866 0
 380 00ec 0023     		movs	r3, #0
 381 00ee 0793     		str	r3, [sp, #28]
 382 00f0 96E7     		b	.L11
 383              	.LVL43:
 384              	.L14:
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      }
 385              		.loc 1 2081 0
 386 00f2 2168     		ldr	r1, [r4]
 387 00f4 41F21C02 		movw	r2, #4124
 388 00f8 8858     		ldr	r0, [r1, r2]
 389 00fa 064B     		ldr	r3, .L15+16
 390 00fc 0343     		orrs	r3, r3, r0
 391 00fe 8B50     		str	r3, [r1, r2]
 392 0100 EDE7     		b	.L12
 393              	.L16:
 394 0102 00BF     		.align	2
ARM GAS  /tmp/ccoFuW87.s 			page 48


 395              	.L15:
 396 0104 0F8120FF 		.word	-14647025
 397 0108 233FDEF8 		.word	-119652573
 398 010c 04002002 		.word	35651588
 399 0110 8020C102 		.word	46211200
 400 0114 40000100 		.word	65600
 401              		.cfi_endproc
 402              	.LFE161:
 404              		.section	.text.ETH_MACTransmissionEnable,"ax",%progbits
 405              		.align	1
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv5-d16
 411              	ETH_MACTransmissionEnable:
 412              	.LFB163:
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 413              		.loc 1 2126 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              	.LVL44:
 418 0000 10B5     		push	{r4, lr}
 419              	.LCFI4:
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 4, -8
 422              		.cfi_offset 14, -4
 423 0002 82B0     		sub	sp, sp, #8
 424              	.LCFI5:
 425              		.cfi_def_cfa_offset 16
 426 0004 0446     		mov	r4, r0
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 427              		.loc 1 2127 0
 428 0006 0023     		movs	r3, #0
 429 0008 0193     		str	r3, [sp, #4]
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 430              		.loc 1 2130 0
 431 000a 0268     		ldr	r2, [r0]
 432 000c 1368     		ldr	r3, [r2]
 433 000e 43F00803 		orr	r3, r3, #8
 434 0012 1360     		str	r3, [r2]
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 435              		.loc 1 2134 0
 436 0014 0368     		ldr	r3, [r0]
 437 0016 1B68     		ldr	r3, [r3]
 438 0018 0193     		str	r3, [sp, #4]
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 439              		.loc 1 2135 0
 440 001a 0120     		movs	r0, #1
 441              	.LVL45:
 442 001c FFF7FEFF 		bl	HAL_Delay
 443              	.LVL46:
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 444              		.loc 1 2136 0
 445 0020 2368     		ldr	r3, [r4]
 446 0022 019A     		ldr	r2, [sp, #4]
 447 0024 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccoFuW87.s 			page 49


2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 448              		.loc 1 2137 0
 449 0026 02B0     		add	sp, sp, #8
 450              	.LCFI6:
 451              		.cfi_def_cfa_offset 8
 452              		@ sp needed
 453 0028 10BD     		pop	{r4, pc}
 454              		.cfi_endproc
 455              	.LFE163:
 457              		.section	.text.ETH_MACReceptionEnable,"ax",%progbits
 458              		.align	1
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu fpv5-d16
 464              	ETH_MACReceptionEnable:
 465              	.LFB165:
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 466              		.loc 1 2166 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              	.LVL47:
 471 0000 10B5     		push	{r4, lr}
 472              	.LCFI7:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
 476 0002 82B0     		sub	sp, sp, #8
 477              	.LCFI8:
 478              		.cfi_def_cfa_offset 16
 479 0004 0446     		mov	r4, r0
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 480              		.loc 1 2167 0
 481 0006 0023     		movs	r3, #0
 482 0008 0193     		str	r3, [sp, #4]
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 483              		.loc 1 2170 0
 484 000a 0268     		ldr	r2, [r0]
 485 000c 1368     		ldr	r3, [r2]
 486 000e 43F00403 		orr	r3, r3, #4
 487 0012 1360     		str	r3, [r2]
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 488              		.loc 1 2174 0
 489 0014 0368     		ldr	r3, [r0]
 490 0016 1B68     		ldr	r3, [r3]
 491 0018 0193     		str	r3, [sp, #4]
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 492              		.loc 1 2175 0
 493 001a 0120     		movs	r0, #1
 494              	.LVL48:
 495 001c FFF7FEFF 		bl	HAL_Delay
 496              	.LVL49:
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 497              		.loc 1 2176 0
 498 0020 2368     		ldr	r3, [r4]
 499 0022 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccoFuW87.s 			page 50


 500 0024 1A60     		str	r2, [r3]
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 501              		.loc 1 2177 0
 502 0026 02B0     		add	sp, sp, #8
 503              	.LCFI9:
 504              		.cfi_def_cfa_offset 8
 505              		@ sp needed
 506 0028 10BD     		pop	{r4, pc}
 507              		.cfi_endproc
 508              	.LFE165:
 510              		.section	.text.ETH_FlushTransmitFIFO,"ax",%progbits
 511              		.align	1
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv5-d16
 517              	ETH_FlushTransmitFIFO:
 518              	.LFB171:
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** /**
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @brief  Clears the ETHERNET transmit FIFO.
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @param  heth pointer to a ETH_HandleTypeDef structure that contains
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   * @retval None
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   */
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth)
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** {
 519              		.loc 1 2254 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              	.LVL50:
 524 0000 30B5     		push	{r4, r5, lr}
 525              	.LCFI10:
 526              		.cfi_def_cfa_offset 12
 527              		.cfi_offset 4, -12
 528              		.cfi_offset 5, -8
 529              		.cfi_offset 14, -4
 530 0002 83B0     		sub	sp, sp, #12
 531              	.LCFI11:
 532              		.cfi_def_cfa_offset 24
 533 0004 0546     		mov	r5, r0
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 534              		.loc 1 2255 0
 535 0006 0023     		movs	r3, #0
 536 0008 0193     		str	r3, [sp, #4]
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the Flush Transmit FIFO bit */
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR |= ETH_DMAOMR_FTF;
 537              		.loc 1 2258 0
 538 000a 0268     		ldr	r2, [r0]
 539 000c 41F21804 		movw	r4, #4120
 540 0010 1359     		ldr	r3, [r2, r4]
 541 0012 43F48013 		orr	r3, r3, #1048576
 542 0016 1351     		str	r3, [r2, r4]
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccoFuW87.s 			page 51


2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Wait until the write operation will be taken into account:
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      at least four TX_CLK/RX_CLK clock cycles */
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg = (heth->Instance)->DMAOMR;
 543              		.loc 1 2262 0
 544 0018 0368     		ldr	r3, [r0]
 545 001a 1B59     		ldr	r3, [r3, r4]
 546 001c 0193     		str	r3, [sp, #4]
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 547              		.loc 1 2263 0
 548 001e 0120     		movs	r0, #1
 549              	.LVL51:
 550 0020 FFF7FEFF 		bl	HAL_Delay
 551              	.LVL52:
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = tmpreg;
 552              		.loc 1 2264 0
 553 0024 2B68     		ldr	r3, [r5]
 554 0026 019A     		ldr	r2, [sp, #4]
 555 0028 1A51     		str	r2, [r3, r4]
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 556              		.loc 1 2265 0
 557 002a 03B0     		add	sp, sp, #12
 558              	.LCFI12:
 559              		.cfi_def_cfa_offset 12
 560              		@ sp needed
 561 002c 30BD     		pop	{r4, r5, pc}
 562              		.cfi_endproc
 563              	.LFE171:
 565              		.section	.text.ETH_MACReceptionDisable,"ax",%progbits
 566              		.align	1
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv5-d16
 572              	ETH_MACReceptionDisable:
 573              	.LFB166:
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 574              		.loc 1 2186 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              	.LVL53:
 579 0000 10B5     		push	{r4, lr}
 580              	.LCFI13:
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 4, -8
 583              		.cfi_offset 14, -4
 584 0002 82B0     		sub	sp, sp, #8
 585              	.LCFI14:
 586              		.cfi_def_cfa_offset 16
 587 0004 0446     		mov	r4, r0
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 588              		.loc 1 2187 0
 589 0006 0023     		movs	r3, #0
 590 0008 0193     		str	r3, [sp, #4]
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 591              		.loc 1 2190 0
 592 000a 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccoFuW87.s 			page 52


 593 000c 1368     		ldr	r3, [r2]
 594 000e 23F00403 		bic	r3, r3, #4
 595 0012 1360     		str	r3, [r2]
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 596              		.loc 1 2194 0
 597 0014 0368     		ldr	r3, [r0]
 598 0016 1B68     		ldr	r3, [r3]
 599 0018 0193     		str	r3, [sp, #4]
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 600              		.loc 1 2195 0
 601 001a 0120     		movs	r0, #1
 602              	.LVL54:
 603 001c FFF7FEFF 		bl	HAL_Delay
 604              	.LVL55:
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 605              		.loc 1 2196 0
 606 0020 2368     		ldr	r3, [r4]
 607 0022 019A     		ldr	r2, [sp, #4]
 608 0024 1A60     		str	r2, [r3]
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 609              		.loc 1 2197 0
 610 0026 02B0     		add	sp, sp, #8
 611              	.LCFI15:
 612              		.cfi_def_cfa_offset 8
 613              		@ sp needed
 614 0028 10BD     		pop	{r4, pc}
 615              		.cfi_endproc
 616              	.LFE166:
 618              		.section	.text.ETH_MACTransmissionDisable,"ax",%progbits
 619              		.align	1
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu fpv5-d16
 625              	ETH_MACTransmissionDisable:
 626              	.LFB164:
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   __IO uint32_t tmpreg = 0;
 627              		.loc 1 2146 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 8
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              	.LVL56:
 632 0000 10B5     		push	{r4, lr}
 633              	.LCFI16:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 14, -4
 637 0002 82B0     		sub	sp, sp, #8
 638              	.LCFI17:
 639              		.cfi_def_cfa_offset 16
 640 0004 0446     		mov	r4, r0
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 641              		.loc 1 2147 0
 642 0006 0023     		movs	r3, #0
 643 0008 0193     		str	r3, [sp, #4]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 644              		.loc 1 2150 0
ARM GAS  /tmp/ccoFuW87.s 			page 53


 645 000a 0268     		ldr	r2, [r0]
 646 000c 1368     		ldr	r3, [r2]
 647 000e 23F00803 		bic	r3, r3, #8
 648 0012 1360     		str	r3, [r2]
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 649              		.loc 1 2154 0
 650 0014 0368     		ldr	r3, [r0]
 651 0016 1B68     		ldr	r3, [r3]
 652 0018 0193     		str	r3, [sp, #4]
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->MACCR = tmpreg;
 653              		.loc 1 2155 0
 654 001a 0120     		movs	r0, #1
 655              	.LVL57:
 656 001c FFF7FEFF 		bl	HAL_Delay
 657              	.LVL58:
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 658              		.loc 1 2156 0
 659 0020 2368     		ldr	r3, [r4]
 660 0022 019A     		ldr	r2, [sp, #4]
 661 0024 1A60     		str	r2, [r3]
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 662              		.loc 1 2157 0
 663 0026 02B0     		add	sp, sp, #8
 664              	.LCFI18:
 665              		.cfi_def_cfa_offset 8
 666              		@ sp needed
 667 0028 10BD     		pop	{r4, pc}
 668              		.cfi_endproc
 669              	.LFE164:
 671              		.section	.text.HAL_ETH_DMATxDescListInit,"ax",%progbits
 672              		.align	1
 673              		.global	HAL_ETH_DMATxDescListInit
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv5-d16
 679              	HAL_ETH_DMATxDescListInit:
 680              	.LFB143:
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t i = 0;
 681              		.loc 1 530 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686              	.LVL59:
 687 0000 F0B4     		push	{r4, r5, r6, r7}
 688              	.LCFI19:
 689              		.cfi_def_cfa_offset 16
 690              		.cfi_offset 4, -16
 691              		.cfi_offset 5, -12
 692              		.cfi_offset 6, -8
 693              		.cfi_offset 7, -4
 694              	.LVL60:
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 695              		.loc 1 535 0
 696 0002 90F84540 		ldrb	r4, [r0, #69]	@ zero_extendqisi2
 697 0006 012C     		cmp	r4, #1
ARM GAS  /tmp/ccoFuW87.s 			page 54


 698 0008 31D0     		beq	.L34
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 699              		.loc 1 535 0 is_stmt 0 discriminator 2
 700 000a 0124     		movs	r4, #1
 701 000c 80F84540 		strb	r4, [r0, #69]
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 702              		.loc 1 538 0 is_stmt 1 discriminator 2
 703 0010 0224     		movs	r4, #2
 704 0012 80F84440 		strb	r4, [r0, #68]
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 705              		.loc 1 541 0 discriminator 2
 706 0016 C162     		str	r1, [r0, #44]
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 707              		.loc 1 544 0 discriminator 2
 708 0018 0024     		movs	r4, #0
 709 001a 01E0     		b	.L29
 710              	.LVL61:
 711              	.L31:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 712              		.loc 1 570 0
 713 001c F960     		str	r1, [r7, #12]
 714              	.L32:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 715              		.loc 1 544 0 discriminator 2
 716 001e 0134     		adds	r4, r4, #1
 717              	.LVL62:
 718              	.L29:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 719              		.loc 1 544 0 is_stmt 0 discriminator 1
 720 0020 9C42     		cmp	r4, r3
 721 0022 17D2     		bcs	.L36
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 722              		.loc 1 547 0 is_stmt 1
 723 0024 6501     		lsls	r5, r4, #5
 724 0026 4F19     		adds	r7, r1, r5
 725              	.LVL63:
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 726              		.loc 1 550 0
 727 0028 4FF48016 		mov	r6, #1048576
 728 002c 4E51     		str	r6, [r1, r5]
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 729              		.loc 1 553 0
 730 002e 40F2F456 		movw	r6, #1524
 731 0032 06FB0426 		mla	r6, r6, r4, r2
 732 0036 BE60     		str	r6, [r7, #8]
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 733              		.loc 1 555 0
 734 0038 C669     		ldr	r6, [r0, #28]
 735 003a 1EB9     		cbnz	r6, .L30
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 736              		.loc 1 558 0
 737 003c 4E59     		ldr	r6, [r1, r5]
 738 003e 46F44006 		orr	r6, r6, #12582912
 739 0042 4E51     		str	r6, [r1, r5]
 740              	.L30:
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 741              		.loc 1 562 0
ARM GAS  /tmp/ccoFuW87.s 			page 55


 742 0044 5D1E     		subs	r5, r3, #1
 743 0046 AC42     		cmp	r4, r5
 744 0048 E8D2     		bcs	.L31
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 745              		.loc 1 565 0
 746 004a 651C     		adds	r5, r4, #1
 747 004c 01EB4515 		add	r5, r1, r5, lsl #5
 748 0050 FD60     		str	r5, [r7, #12]
 749 0052 E4E7     		b	.L32
 750              	.LVL64:
 751              	.L36:
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 752              		.loc 1 575 0
 753 0054 0268     		ldr	r2, [r0]
 754              	.LVL65:
 755 0056 41F21003 		movw	r3, #4112
 756              	.LVL66:
 757 005a D150     		str	r1, [r2, r3]
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 758              		.loc 1 578 0
 759 005c 0123     		movs	r3, #1
 760 005e 80F84430 		strb	r3, [r0, #68]
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 761              		.loc 1 581 0
 762 0062 0023     		movs	r3, #0
 763 0064 80F84530 		strb	r3, [r0, #69]
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 764              		.loc 1 584 0
 765 0068 1846     		mov	r0, r3
 766              	.LVL67:
 767              	.L28:
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 768              		.loc 1 585 0
 769 006a F0BC     		pop	{r4, r5, r6, r7}
 770              	.LCFI20:
 771              		.cfi_remember_state
 772              		.cfi_restore 7
 773              		.cfi_restore 6
 774              		.cfi_restore 5
 775              		.cfi_restore 4
 776              		.cfi_def_cfa_offset 0
 777 006c 7047     		bx	lr
 778              	.LVL68:
 779              	.L34:
 780              	.LCFI21:
 781              		.cfi_restore_state
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 782              		.loc 1 535 0
 783 006e 0220     		movs	r0, #2
 784              	.LVL69:
 785 0070 FBE7     		b	.L28
 786              		.cfi_endproc
 787              	.LFE143:
 789              		.section	.text.HAL_ETH_DMARxDescListInit,"ax",%progbits
 790              		.align	1
 791              		.global	HAL_ETH_DMARxDescListInit
 792              		.syntax unified
ARM GAS  /tmp/ccoFuW87.s 			page 56


 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv5-d16
 797              	HAL_ETH_DMARxDescListInit:
 798              	.LFB144:
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t i = 0;
 799              		.loc 1 597 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL70:
 805 0000 F0B4     		push	{r4, r5, r6, r7}
 806              	.LCFI22:
 807              		.cfi_def_cfa_offset 16
 808              		.cfi_offset 4, -16
 809              		.cfi_offset 5, -12
 810              		.cfi_offset 6, -8
 811              		.cfi_offset 7, -4
 812              	.LVL71:
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 813              		.loc 1 602 0
 814 0002 90F84540 		ldrb	r4, [r0, #69]	@ zero_extendqisi2
 815 0006 012C     		cmp	r4, #1
 816 0008 2ED0     		beq	.L43
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 817              		.loc 1 602 0 is_stmt 0 discriminator 2
 818 000a 0124     		movs	r4, #1
 819 000c 80F84540 		strb	r4, [r0, #69]
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 820              		.loc 1 605 0 is_stmt 1 discriminator 2
 821 0010 0224     		movs	r4, #2
 822 0012 80F84440 		strb	r4, [r0, #68]
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 823              		.loc 1 608 0 discriminator 2
 824 0016 8162     		str	r1, [r0, #40]
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 825              		.loc 1 611 0 discriminator 2
 826 0018 0024     		movs	r4, #0
 827 001a 01E0     		b	.L39
 828              	.LVL72:
 829              	.L40:
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 830              		.loc 1 640 0
 831 001c E960     		str	r1, [r5, #12]
 832              	.L41:
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 833              		.loc 1 611 0 discriminator 2
 834 001e 0134     		adds	r4, r4, #1
 835              	.LVL73:
 836              	.L39:
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 837              		.loc 1 611 0 is_stmt 0 discriminator 1
 838 0020 9C42     		cmp	r4, r3
 839 0022 14D2     		bcs	.L45
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 840              		.loc 1 614 0 is_stmt 1
ARM GAS  /tmp/ccoFuW87.s 			page 57


 841 0024 6601     		lsls	r6, r4, #5
 842 0026 8D19     		adds	r5, r1, r6
 843              	.LVL74:
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 844              		.loc 1 617 0
 845 0028 4FF00047 		mov	r7, #-2147483648
 846 002c 8F51     		str	r7, [r1, r6]
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 847              		.loc 1 620 0
 848 002e 44F2F456 		movw	r6, #17908
 849 0032 6E60     		str	r6, [r5, #4]
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 850              		.loc 1 623 0
 851 0034 40F2F456 		movw	r6, #1524
 852 0038 06FB0426 		mla	r6, r6, r4, r2
 853 003c AE60     		str	r6, [r5, #8]
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 854              		.loc 1 632 0
 855 003e 5E1E     		subs	r6, r3, #1
 856 0040 B442     		cmp	r4, r6
 857 0042 EBD2     		bcs	.L40
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 858              		.loc 1 635 0
 859 0044 661C     		adds	r6, r4, #1
 860 0046 01EB4616 		add	r6, r1, r6, lsl #5
 861 004a EE60     		str	r6, [r5, #12]
 862 004c E7E7     		b	.L41
 863              	.LVL75:
 864              	.L45:
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 865              		.loc 1 645 0
 866 004e 0268     		ldr	r2, [r0]
 867              	.LVL76:
 868 0050 41F20C03 		movw	r3, #4108
 869              	.LVL77:
 870 0054 D150     		str	r1, [r2, r3]
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 871              		.loc 1 648 0
 872 0056 0123     		movs	r3, #1
 873 0058 80F84430 		strb	r3, [r0, #68]
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 874              		.loc 1 651 0
 875 005c 0023     		movs	r3, #0
 876 005e 80F84530 		strb	r3, [r0, #69]
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 877              		.loc 1 654 0
 878 0062 1846     		mov	r0, r3
 879              	.LVL78:
 880              	.L38:
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 881              		.loc 1 655 0
 882 0064 F0BC     		pop	{r4, r5, r6, r7}
 883              	.LCFI23:
 884              		.cfi_remember_state
 885              		.cfi_restore 7
 886              		.cfi_restore 6
 887              		.cfi_restore 5
ARM GAS  /tmp/ccoFuW87.s 			page 58


 888              		.cfi_restore 4
 889              		.cfi_def_cfa_offset 0
 890 0066 7047     		bx	lr
 891              	.LVL79:
 892              	.L43:
 893              	.LCFI24:
 894              		.cfi_restore_state
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 895              		.loc 1 602 0
 896 0068 0220     		movs	r0, #2
 897              	.LVL80:
 898 006a FBE7     		b	.L38
 899              		.cfi_endproc
 900              	.LFE144:
 902              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 903              		.align	1
 904              		.weak	HAL_ETH_MspInit
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 908              		.fpu fpv5-d16
 910              	HAL_ETH_MspInit:
 911              	.LFB145:
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 912              		.loc 1 664 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              		@ link register save eliminated.
 917              	.LVL81:
 918 0000 7047     		bx	lr
 919              		.cfi_endproc
 920              	.LFE145:
 922              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 923              		.align	1
 924              		.weak	HAL_ETH_MspDeInit
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv5-d16
 930              	HAL_ETH_MspDeInit:
 931              	.LFB146:
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 932              		.loc 1 680 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937              	.LVL82:
 938 0000 7047     		bx	lr
 939              		.cfi_endproc
 940              	.LFE146:
 942              		.section	.text.HAL_ETH_DeInit,"ax",%progbits
 943              		.align	1
 944              		.global	HAL_ETH_DeInit
 945              		.syntax unified
 946              		.thumb
ARM GAS  /tmp/ccoFuW87.s 			page 59


 947              		.thumb_func
 948              		.fpu fpv5-d16
 950              	HAL_ETH_DeInit:
 951              	.LFB142:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 952              		.loc 1 494 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL83:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 957              		.loc 1 494 0
 958 0000 10B5     		push	{r4, lr}
 959              	.LCFI25:
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 4, -8
 962              		.cfi_offset 14, -4
 963 0002 0446     		mov	r4, r0
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 964              		.loc 1 496 0
 965 0004 0223     		movs	r3, #2
 966 0006 80F84430 		strb	r3, [r0, #68]
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif
 967              		.loc 1 507 0
 968 000a FFF7FEFF 		bl	HAL_ETH_MspDeInit
 969              	.LVL84:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 970              		.loc 1 511 0
 971 000e 0020     		movs	r0, #0
 972 0010 84F84400 		strb	r0, [r4, #68]
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 973              		.loc 1 514 0
 974 0014 84F84500 		strb	r0, [r4, #69]
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 975              		.loc 1 518 0
 976 0018 10BD     		pop	{r4, pc}
 977              		.cfi_endproc
 978              	.LFE142:
 980              		.section	.text.HAL_ETH_TransmitFrame,"ax",%progbits
 981              		.align	1
 982              		.global	HAL_ETH_TransmitFrame
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu fpv5-d16
 988              	HAL_ETH_TransmitFrame:
 989              	.LFB147:
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t bufcount = 0, size = 0, i = 0;
 990              		.loc 1 891 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              		@ link register save eliminated.
 995              	.LVL85:
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 996              		.loc 1 895 0
 997 0000 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
ARM GAS  /tmp/ccoFuW87.s 			page 60


 998 0004 012B     		cmp	r3, #1
 999 0006 00F08780 		beq	.L61
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1000              		.loc 1 895 0 is_stmt 0 discriminator 2
 1001 000a 0123     		movs	r3, #1
 1002 000c 80F84530 		strb	r3, [r0, #69]
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1003              		.loc 1 898 0 is_stmt 1 discriminator 2
 1004 0010 0223     		movs	r3, #2
 1005 0012 80F84430 		strb	r3, [r0, #68]
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1006              		.loc 1 900 0 discriminator 2
 1007 0016 99B1     		cbz	r1, .L67
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {  
 1008              		.loc 1 912 0
 1009 0018 C36A     		ldr	r3, [r0, #44]
 1010 001a 1A68     		ldr	r2, [r3]
 1011 001c 002A     		cmp	r2, #0
 1012 001e 17DB     		blt	.L68
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t bufcount = 0, size = 0, i = 0;
 1013              		.loc 1 891 0
 1014 0020 30B4     		push	{r4, r5}
 1015              	.LCFI26:
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 4, -8
 1018              		.cfi_offset 5, -4
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1019              		.loc 1 924 0
 1020 0022 40F2F452 		movw	r2, #1524
 1021 0026 9142     		cmp	r1, r2
 1022 0028 1AD9     		bls	.L62
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     if (FrameLength % ETH_TX_BUF_SIZE) 
 1023              		.loc 1 926 0
 1024 002a 3C4C     		ldr	r4, .L71
 1025 002c A4FB0124 		umull	r2, r4, r4, r1
 1026 0030 A40A     		lsrs	r4, r4, #10
 1027              	.LVL86:
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1028              		.loc 1 927 0
 1029 0032 40F2F452 		movw	r2, #1524
 1030 0036 02FB1412 		mls	r2, r2, r4, r1
 1031 003a 92B1     		cbz	r2, .L54
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1032              		.loc 1 929 0
 1033 003c 0134     		adds	r4, r4, #1
 1034              	.LVL87:
 1035 003e 10E0     		b	.L54
 1036              	.LVL88:
 1037              	.L67:
 1038              	.LCFI27:
 1039              		.cfi_def_cfa_offset 0
 1040              		.cfi_restore 4
 1041              		.cfi_restore 5
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1042              		.loc 1 903 0
 1043 0040 0123     		movs	r3, #1
 1044 0042 80F84430 		strb	r3, [r0, #68]
ARM GAS  /tmp/ccoFuW87.s 			page 61


 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1045              		.loc 1 906 0
 1046 0046 0022     		movs	r2, #0
 1047 0048 80F84520 		strb	r2, [r0, #69]
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 1048              		.loc 1 908 0
 1049 004c 1846     		mov	r0, r3
 1050              	.LVL89:
 1051 004e 7047     		bx	lr
 1052              	.LVL90:
 1053              	.L68:
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1054              		.loc 1 915 0
 1055 0050 1223     		movs	r3, #18
 1056 0052 80F84430 		strb	r3, [r0, #68]
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1057              		.loc 1 918 0
 1058 0056 0023     		movs	r3, #0
 1059 0058 80F84530 		strb	r3, [r0, #69]
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1060              		.loc 1 920 0
 1061 005c 0120     		movs	r0, #1
 1062              	.LVL91:
 1063 005e 7047     		bx	lr
 1064              	.LVL92:
 1065              	.L62:
 1066              	.LCFI28:
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 4, -8
 1069              		.cfi_offset 5, -4
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1070              		.loc 1 934 0
 1071 0060 0124     		movs	r4, #1
 1072              	.LVL93:
 1073              	.L54:
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1074              		.loc 1 936 0
 1075 0062 012C     		cmp	r4, #1
 1076 0064 01D0     		beq	.L69
 1077 0066 0023     		movs	r3, #0
 1078 0068 37E0     		b	.L55
 1079              	.L69:
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set frame size */
 1080              		.loc 1 939 0
 1081 006a 1A68     		ldr	r2, [r3]
 1082 006c 42F04052 		orr	r2, r2, #805306368
 1083 0070 1A60     		str	r2, [r3]
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 1084              		.loc 1 941 0
 1085 0072 C36A     		ldr	r3, [r0, #44]
 1086 0074 C1F30C01 		ubfx	r1, r1, #0, #13
 1087              	.LVL94:
 1088 0078 5960     		str	r1, [r3, #4]
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Point to next descriptor */
 1089              		.loc 1 943 0
 1090 007a C26A     		ldr	r2, [r0, #44]
 1091 007c 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccoFuW87.s 			page 62


 1092 007e 43F00043 		orr	r3, r3, #-2147483648
 1093 0082 1360     		str	r3, [r2]
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1094              		.loc 1 945 0
 1095 0084 C36A     		ldr	r3, [r0, #44]
 1096 0086 DB68     		ldr	r3, [r3, #12]
 1097 0088 C362     		str	r3, [r0, #44]
 1098              	.LVL95:
 1099              	.L56:
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1100              		.loc 1 979 0
 1101 008a 0368     		ldr	r3, [r0]
 1102 008c 41F21402 		movw	r2, #4116
 1103 0090 9A58     		ldr	r2, [r3, r2]
 1104 0092 12F0040F 		tst	r2, #4
 1105 0096 08D0     		beq	.L60
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Resume DMA transmission*/
 1106              		.loc 1 982 0
 1107 0098 0421     		movs	r1, #4
 1108 009a 41F21402 		movw	r2, #4116
 1109 009e 9950     		str	r1, [r3, r2]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1110              		.loc 1 984 0
 1111 00a0 0268     		ldr	r2, [r0]
 1112 00a2 0021     		movs	r1, #0
 1113 00a4 41F20403 		movw	r3, #4100
 1114 00a8 D150     		str	r1, [r2, r3]
 1115              	.L60:
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1116              		.loc 1 988 0
 1117 00aa 0123     		movs	r3, #1
 1118 00ac 80F84430 		strb	r3, [r0, #68]
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1119              		.loc 1 991 0
 1120 00b0 0023     		movs	r3, #0
 1121 00b2 80F84530 		strb	r3, [r0, #69]
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1122              		.loc 1 994 0
 1123 00b6 1846     		mov	r0, r3
 1124              	.LVL96:
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1125              		.loc 1 995 0
 1126 00b8 30BC     		pop	{r4, r5}
 1127              	.LCFI29:
 1128              		.cfi_remember_state
 1129              		.cfi_restore 5
 1130              		.cfi_restore 4
 1131              		.cfi_def_cfa_offset 0
 1132              	.LVL97:
 1133 00ba 7047     		bx	lr
 1134              	.LVL98:
 1135              	.L70:
 1136              	.LCFI30:
 1137              		.cfi_restore_state
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 1138              		.loc 1 957 0
 1139 00bc C56A     		ldr	r5, [r0, #44]
ARM GAS  /tmp/ccoFuW87.s 			page 63


 1140 00be 2A68     		ldr	r2, [r5]
 1141 00c0 42F08052 		orr	r2, r2, #268435456
 1142 00c4 2A60     		str	r2, [r5]
 1143 00c6 11E0     		b	.L57
 1144              	.L58:
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* point to next descriptor */
 1145              		.loc 1 972 0 discriminator 2
 1146 00c8 C56A     		ldr	r5, [r0, #44]
 1147 00ca 2A68     		ldr	r2, [r5]
 1148 00cc 42F00042 		orr	r2, r2, #-2147483648
 1149 00d0 2A60     		str	r2, [r5]
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1150              		.loc 1 974 0 discriminator 2
 1151 00d2 C26A     		ldr	r2, [r0, #44]
 1152 00d4 D268     		ldr	r2, [r2, #12]
 1153 00d6 C262     		str	r2, [r0, #44]
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1154              		.loc 1 949 0 discriminator 2
 1155 00d8 0133     		adds	r3, r3, #1
 1156              	.LVL99:
 1157              	.L55:
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1158              		.loc 1 949 0 is_stmt 0 discriminator 1
 1159 00da 9C42     		cmp	r4, r3
 1160 00dc D5D9     		bls	.L56
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1161              		.loc 1 952 0 is_stmt 1
 1162 00de C56A     		ldr	r5, [r0, #44]
 1163 00e0 2A68     		ldr	r2, [r5]
 1164 00e2 22F04052 		bic	r2, r2, #805306368
 1165 00e6 2A60     		str	r2, [r5]
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 1166              		.loc 1 954 0
 1167 00e8 002B     		cmp	r3, #0
 1168 00ea E7D0     		beq	.L70
 1169              	.L57:
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1170              		.loc 1 961 0
 1171 00ec C26A     		ldr	r2, [r0, #44]
 1172 00ee 40F2F455 		movw	r5, #1524
 1173 00f2 5560     		str	r5, [r2, #4]
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 1174              		.loc 1 963 0
 1175 00f4 621E     		subs	r2, r4, #1
 1176 00f6 9342     		cmp	r3, r2
 1177 00f8 E6D1     		bne	.L58
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         size = FrameLength - (bufcount-1)*ETH_TX_BUF_SIZE;
 1178              		.loc 1 966 0
 1179 00fa C56A     		ldr	r5, [r0, #44]
 1180 00fc 2A68     		ldr	r2, [r5]
 1181 00fe 42F00052 		orr	r2, r2, #536870912
 1182 0102 2A60     		str	r2, [r5]
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         heth->TxDesc->ControlBufferSize = (size & ETH_DMATXDESC_TBS1);
 1183              		.loc 1 967 0
 1184 0104 064A     		ldr	r2, .L71+4
 1185 0106 02FB0412 		mla	r2, r2, r4, r1
 1186 010a 02F2F452 		addw	r2, r2, #1524
ARM GAS  /tmp/ccoFuW87.s 			page 64


 1187              	.LVL100:
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 1188              		.loc 1 968 0
 1189 010e C56A     		ldr	r5, [r0, #44]
 1190 0110 C2F30C02 		ubfx	r2, r2, #0, #13
 1191              	.LVL101:
 1192 0114 6A60     		str	r2, [r5, #4]
 1193 0116 D7E7     		b	.L58
 1194              	.LVL102:
 1195              	.L61:
 1196              	.LCFI31:
 1197              		.cfi_def_cfa_offset 0
 1198              		.cfi_restore 4
 1199              		.cfi_restore 5
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1200              		.loc 1 895 0
 1201 0118 0220     		movs	r0, #2
 1202              	.LVL103:
 1203 011a 7047     		bx	lr
 1204              	.L72:
 1205              		.align	2
 1206              	.L71:
 1207 011c 0BB002AC 		.word	-1409110005
 1208 0120 0CFAFFFF 		.word	-1524
 1209              		.cfi_endproc
 1210              	.LFE147:
 1212              		.section	.text.HAL_ETH_GetReceivedFrame,"ax",%progbits
 1213              		.align	1
 1214              		.global	HAL_ETH_GetReceivedFrame
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1218              		.fpu fpv5-d16
 1220              	HAL_ETH_GetReceivedFrame:
 1221              	.LFB148:
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t framelength = 0;
 1222              		.loc 1 1004 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              		@ link register save eliminated.
 1227              	.LVL104:
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1228              		.loc 1 1008 0
 1229 0000 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 1230 0004 012B     		cmp	r3, #1
 1231 0006 40D0     		beq	.L79
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1232              		.loc 1 1008 0 is_stmt 0 discriminator 2
 1233 0008 0123     		movs	r3, #1
 1234 000a 80F84530 		strb	r3, [r0, #69]
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1235              		.loc 1 1011 0 is_stmt 1 discriminator 2
 1236 000e 0223     		movs	r3, #2
 1237 0010 80F84430 		strb	r3, [r0, #68]
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1238              		.loc 1 1015 0 discriminator 2
ARM GAS  /tmp/ccoFuW87.s 			page 65


 1239 0014 836A     		ldr	r3, [r0, #40]
 1240 0016 1A68     		ldr	r2, [r3]
 1241 0018 002A     		cmp	r2, #0
 1242 001a 28DB     		blt	.L75
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1243              		.loc 1 1018 0
 1244 001c 1A68     		ldr	r2, [r3]
 1245 001e 12F4807F 		tst	r2, #256
 1246 0022 19D0     		beq	.L76
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1247              		.loc 1 1021 0
 1248 0024 826B     		ldr	r2, [r0, #56]
 1249 0026 0132     		adds	r2, r2, #1
 1250 0028 8263     		str	r2, [r0, #56]
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 1251              		.loc 1 1024 0
 1252 002a 012A     		cmp	r2, #1
 1253 002c 12D0     		beq	.L80
 1254              	.L77:
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1255              		.loc 1 1029 0
 1256 002e 4363     		str	r3, [r0, #52]
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.length = framelength;
 1257              		.loc 1 1032 0
 1258 0030 1A68     		ldr	r2, [r3]
 1259 0032 C2F30D42 		ubfx	r2, r2, #16, #14
 1260 0036 043A     		subs	r2, r2, #4
 1261              	.LVL105:
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1262              		.loc 1 1033 0
 1263 0038 C263     		str	r2, [r0, #60]
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* point to next descriptor */
 1264              		.loc 1 1036 0
 1265 003a 026B     		ldr	r2, [r0, #48]
 1266              	.LVL106:
 1267 003c 9268     		ldr	r2, [r2, #8]
 1268 003e 0264     		str	r2, [r0, #64]
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1269              		.loc 1 1038 0
 1270 0040 DB68     		ldr	r3, [r3, #12]
 1271 0042 8362     		str	r3, [r0, #40]
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1272              		.loc 1 1041 0
 1273 0044 0123     		movs	r3, #1
 1274 0046 80F84430 		strb	r3, [r0, #68]
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1275              		.loc 1 1044 0
 1276 004a 0023     		movs	r3, #0
 1277 004c 80F84530 		strb	r3, [r0, #69]
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1278              		.loc 1 1047 0
 1279 0050 1846     		mov	r0, r3
 1280              	.LVL107:
 1281 0052 7047     		bx	lr
 1282              	.LVL108:
 1283              	.L80:
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
ARM GAS  /tmp/ccoFuW87.s 			page 66


 1284              		.loc 1 1026 0
 1285 0054 0363     		str	r3, [r0, #48]
 1286 0056 EAE7     		b	.L77
 1287              	.L76:
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1288              		.loc 1 1050 0
 1289 0058 1A68     		ldr	r2, [r3]
 1290 005a 12F4007F 		tst	r2, #512
 1291 005e 0ED0     		beq	.L78
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).LSRxDesc = NULL;
 1292              		.loc 1 1052 0
 1293 0060 0363     		str	r3, [r0, #48]
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->RxFrameInfos).SegCount = 1;
 1294              		.loc 1 1053 0
 1295 0062 0022     		movs	r2, #0
 1296 0064 4263     		str	r2, [r0, #52]
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 1297              		.loc 1 1054 0
 1298 0066 0122     		movs	r2, #1
 1299 0068 8263     		str	r2, [r0, #56]
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1300              		.loc 1 1056 0
 1301 006a DB68     		ldr	r3, [r3, #12]
 1302 006c 8362     		str	r3, [r0, #40]
 1303              	.L75:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1304              		.loc 1 1068 0
 1305 006e 0123     		movs	r3, #1
 1306 0070 80F84430 		strb	r3, [r0, #68]
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1307              		.loc 1 1071 0
 1308 0074 0022     		movs	r2, #0
 1309 0076 80F84520 		strb	r2, [r0, #69]
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1310              		.loc 1 1074 0
 1311 007a 1846     		mov	r0, r3
 1312              	.LVL109:
 1313 007c 7047     		bx	lr
 1314              	.LVL110:
 1315              	.L78:
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 1316              		.loc 1 1061 0
 1317 007e 826B     		ldr	r2, [r0, #56]
 1318 0080 0132     		adds	r2, r2, #1
 1319 0082 8263     		str	r2, [r0, #56]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     } 
 1320              		.loc 1 1063 0
 1321 0084 DB68     		ldr	r3, [r3, #12]
 1322 0086 8362     		str	r3, [r0, #40]
 1323 0088 F1E7     		b	.L75
 1324              	.L79:
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1325              		.loc 1 1008 0
 1326 008a 0220     		movs	r0, #2
 1327              	.LVL111:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1328              		.loc 1 1075 0
ARM GAS  /tmp/ccoFuW87.s 			page 67


 1329 008c 7047     		bx	lr
 1330              		.cfi_endproc
 1331              	.LFE148:
 1333              		.section	.text.HAL_ETH_GetReceivedFrame_IT,"ax",%progbits
 1334              		.align	1
 1335              		.global	HAL_ETH_GetReceivedFrame_IT
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1339              		.fpu fpv5-d16
 1341              	HAL_ETH_GetReceivedFrame_IT:
 1342              	.LFB149:
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t descriptorscancounter = 0;
 1343              		.loc 1 1084 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              		@ link register save eliminated.
 1348              	.LVL112:
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1349              		.loc 1 1088 0
 1350 0000 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 1351 0004 012B     		cmp	r3, #1
 1352 0006 45D0     		beq	.L90
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1353              		.loc 1 1088 0 is_stmt 0 discriminator 2
 1354 0008 0123     		movs	r3, #1
 1355 000a 80F84530 		strb	r3, [r0, #69]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1356              		.loc 1 1091 0 is_stmt 1 discriminator 2
 1357 000e 0223     		movs	r3, #2
 1358 0010 80F84430 		strb	r3, [r0, #68]
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1359              		.loc 1 1085 0 discriminator 2
 1360 0014 0021     		movs	r1, #0
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1361              		.loc 1 1094 0 discriminator 2
 1362 0016 0AE0     		b	.L83
 1363              	.LVL113:
 1364              	.L91:
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       heth->RxFrameInfos.SegCount = 1;   
 1365              		.loc 1 1103 0
 1366 0018 0363     		str	r3, [r0, #48]
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 1367              		.loc 1 1104 0
 1368 001a 0122     		movs	r2, #1
 1369 001c 8263     		str	r2, [r0, #56]
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1370              		.loc 1 1106 0
 1371 001e DB68     		ldr	r3, [r3, #12]
 1372 0020 8362     		str	r3, [r0, #40]
 1373 0022 04E0     		b	.L83
 1374              	.L92:
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       /* Point to next descriptor */
 1375              		.loc 1 1113 0
 1376 0024 826B     		ldr	r2, [r0, #56]
 1377 0026 0132     		adds	r2, r2, #1
ARM GAS  /tmp/ccoFuW87.s 			page 68


 1378 0028 8263     		str	r2, [r0, #56]
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1379              		.loc 1 1115 0
 1380 002a DB68     		ldr	r3, [r3, #12]
 1381 002c 8362     		str	r3, [r0, #40]
 1382              	.LVL114:
 1383              	.L83:
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1384              		.loc 1 1094 0
 1385 002e 836A     		ldr	r3, [r0, #40]
 1386 0030 1A68     		ldr	r2, [r3]
 1387 0032 002A     		cmp	r2, #0
 1388 0034 26DB     		blt	.L88
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1389              		.loc 1 1094 0 is_stmt 0 discriminator 1
 1390 0036 0329     		cmp	r1, #3
 1391 0038 24D8     		bhi	.L88
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1392              		.loc 1 1097 0 is_stmt 1
 1393 003a 0131     		adds	r1, r1, #1
 1394              	.LVL115:
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     { 
 1395              		.loc 1 1101 0
 1396 003c 1A68     		ldr	r2, [r3]
 1397 003e 02F44072 		and	r2, r2, #768
 1398 0042 B2F5007F 		cmp	r2, #512
 1399 0046 E7D0     		beq	.L91
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1400              		.loc 1 1110 0
 1401 0048 1A68     		ldr	r2, [r3]
 1402 004a 12F4407F 		tst	r2, #768
 1403 004e E9D0     		beq	.L92
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1404              		.loc 1 1121 0
 1405 0050 4363     		str	r3, [r0, #52]
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1406              		.loc 1 1124 0
 1407 0052 826B     		ldr	r2, [r0, #56]
 1408 0054 0132     		adds	r2, r2, #1
 1409 0056 8263     		str	r2, [r0, #56]
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 1410              		.loc 1 1127 0
 1411 0058 012A     		cmp	r2, #1
 1412 005a 11D0     		beq	.L93
 1413              	.L87:
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1414              		.loc 1 1133 0
 1415 005c 1A68     		ldr	r2, [r3]
 1416 005e C2F30D42 		ubfx	r2, r2, #16, #14
 1417 0062 043A     		subs	r2, r2, #4
 1418 0064 C263     		str	r2, [r0, #60]
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1419              		.loc 1 1136 0
 1420 0066 026B     		ldr	r2, [r0, #48]
 1421 0068 9268     		ldr	r2, [r2, #8]
 1422 006a 0264     		str	r2, [r0, #64]
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
ARM GAS  /tmp/ccoFuW87.s 			page 69


 1423              		.loc 1 1139 0
 1424 006c DB68     		ldr	r3, [r3, #12]
 1425 006e 8362     		str	r3, [r0, #40]
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 1426              		.loc 1 1142 0
 1427 0070 0123     		movs	r3, #1
 1428 0072 80F84430 		strb	r3, [r0, #68]
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1429              		.loc 1 1145 0
 1430 0076 0023     		movs	r3, #0
 1431 0078 80F84530 		strb	r3, [r0, #69]
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1432              		.loc 1 1148 0
 1433 007c 1846     		mov	r0, r3
 1434              	.LVL116:
 1435 007e 7047     		bx	lr
 1436              	.LVL117:
 1437              	.L93:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 1438              		.loc 1 1129 0
 1439 0080 0363     		str	r3, [r0, #48]
 1440 0082 EBE7     		b	.L87
 1441              	.L88:
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1442              		.loc 1 1153 0
 1443 0084 0123     		movs	r3, #1
 1444 0086 80F84430 		strb	r3, [r0, #68]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1445              		.loc 1 1156 0
 1446 008a 0022     		movs	r2, #0
 1447 008c 80F84520 		strb	r2, [r0, #69]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1448              		.loc 1 1159 0
 1449 0090 1846     		mov	r0, r3
 1450              	.LVL118:
 1451 0092 7047     		bx	lr
 1452              	.LVL119:
 1453              	.L90:
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1454              		.loc 1 1088 0
 1455 0094 0220     		movs	r0, #2
 1456              	.LVL120:
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1457              		.loc 1 1160 0
 1458 0096 7047     		bx	lr
 1459              		.cfi_endproc
 1460              	.LFE149:
 1462              		.section	.text.HAL_ETH_TxCpltCallback,"ax",%progbits
 1463              		.align	1
 1464              		.weak	HAL_ETH_TxCpltCallback
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1468              		.fpu fpv5-d16
 1470              	HAL_ETH_TxCpltCallback:
 1471              	.LFB151:
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccoFuW87.s 			page 70


 1472              		.loc 1 1243 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
 1477              	.LVL121:
 1478 0000 7047     		bx	lr
 1479              		.cfi_endproc
 1480              	.LFE151:
 1482              		.section	.text.HAL_ETH_RxCpltCallback,"ax",%progbits
 1483              		.align	1
 1484              		.weak	HAL_ETH_RxCpltCallback
 1485              		.syntax unified
 1486              		.thumb
 1487              		.thumb_func
 1488              		.fpu fpv5-d16
 1490              	HAL_ETH_RxCpltCallback:
 1491              	.LFB152:
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 1492              		.loc 1 1259 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 0
 1495              		@ frame_needed = 0, uses_anonymous_args = 0
 1496              		@ link register save eliminated.
 1497              	.LVL122:
 1498 0000 7047     		bx	lr
 1499              		.cfi_endproc
 1500              	.LFE152:
 1502              		.section	.text.HAL_ETH_ErrorCallback,"ax",%progbits
 1503              		.align	1
 1504              		.weak	HAL_ETH_ErrorCallback
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.fpu fpv5-d16
 1510              	HAL_ETH_ErrorCallback:
 1511              	.LFB153:
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 1512              		.loc 1 1275 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 1517              	.LVL123:
 1518 0000 7047     		bx	lr
 1519              		.cfi_endproc
 1520              	.LFE153:
 1522              		.section	.text.HAL_ETH_IRQHandler,"ax",%progbits
 1523              		.align	1
 1524              		.global	HAL_ETH_IRQHandler
 1525              		.syntax unified
 1526              		.thumb
 1527              		.thumb_func
 1528              		.fpu fpv5-d16
 1530              	HAL_ETH_IRQHandler:
 1531              	.LFB150:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Frame received */
ARM GAS  /tmp/ccoFuW87.s 			page 71


 1532              		.loc 1 1169 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              	.LVL124:
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Frame received */
 1537              		.loc 1 1169 0
 1538 0000 10B5     		push	{r4, lr}
 1539              	.LCFI32:
 1540              		.cfi_def_cfa_offset 8
 1541              		.cfi_offset 4, -8
 1542              		.cfi_offset 14, -4
 1543 0002 0446     		mov	r4, r0
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1544              		.loc 1 1171 0
 1545 0004 0368     		ldr	r3, [r0]
 1546 0006 41F21402 		movw	r2, #4116
 1547 000a 9A58     		ldr	r2, [r3, r2]
 1548 000c 12F0400F 		tst	r2, #64
 1549 0010 11D1     		bne	.L102
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1550              		.loc 1 1192 0
 1551 0012 41F21402 		movw	r2, #4116
 1552 0016 9B58     		ldr	r3, [r3, r2]
 1553 0018 13F0010F 		tst	r3, #1
 1554 001c 19D1     		bne	.L103
 1555              	.LVL125:
 1556              	.L99:
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1557              		.loc 1 1213 0
 1558 001e 2268     		ldr	r2, [r4]
 1559 0020 41F21403 		movw	r3, #4116
 1560 0024 4FF48031 		mov	r1, #65536
 1561 0028 D150     		str	r1, [r2, r3]
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1562              		.loc 1 1216 0
 1563 002a 2268     		ldr	r2, [r4]
 1564 002c D358     		ldr	r3, [r2, r3]
 1565 002e 13F4004F 		tst	r3, #32768
 1566 0032 1BD1     		bne	.L104
 1567              	.L97:
 1568 0034 10BD     		pop	{r4, pc}
 1569              	.LVL126:
 1570              	.L102:
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 1571              		.loc 1 1178 0
 1572 0036 FFF7FEFF 		bl	HAL_ETH_RxCpltCallback
 1573              	.LVL127:
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1574              		.loc 1 1182 0
 1575 003a 2268     		ldr	r2, [r4]
 1576 003c 4021     		movs	r1, #64
 1577 003e 41F21403 		movw	r3, #4116
 1578 0042 D150     		str	r1, [r2, r3]
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1579              		.loc 1 1185 0
 1580 0044 0123     		movs	r3, #1
ARM GAS  /tmp/ccoFuW87.s 			page 72


 1581 0046 84F84430 		strb	r3, [r4, #68]
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1582              		.loc 1 1188 0
 1583 004a 0023     		movs	r3, #0
 1584 004c 84F84530 		strb	r3, [r4, #69]
 1585 0050 E5E7     		b	.L99
 1586              	.LVL128:
 1587              	.L103:
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 1588              		.loc 1 1199 0
 1589 0052 FFF7FEFF 		bl	HAL_ETH_TxCpltCallback
 1590              	.LVL129:
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1591              		.loc 1 1203 0
 1592 0056 2168     		ldr	r1, [r4]
 1593 0058 0123     		movs	r3, #1
 1594 005a 41F21402 		movw	r2, #4116
 1595 005e 8B50     		str	r3, [r1, r2]
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1596              		.loc 1 1206 0
 1597 0060 84F84430 		strb	r3, [r4, #68]
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1598              		.loc 1 1209 0
 1599 0064 0023     		movs	r3, #0
 1600 0066 84F84530 		strb	r3, [r4, #69]
 1601 006a D8E7     		b	.L99
 1602              	.L104:
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 1603              		.loc 1 1222 0
 1604 006c 2046     		mov	r0, r4
 1605 006e FFF7FEFF 		bl	HAL_ETH_ErrorCallback
 1606              	.LVL130:
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1607              		.loc 1 1226 0
 1608 0072 2268     		ldr	r2, [r4]
 1609 0074 4FF40041 		mov	r1, #32768
 1610 0078 41F21403 		movw	r3, #4116
 1611 007c D150     		str	r1, [r2, r3]
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1612              		.loc 1 1229 0
 1613 007e 0123     		movs	r3, #1
 1614 0080 84F84430 		strb	r3, [r4, #68]
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1615              		.loc 1 1232 0
 1616 0084 0023     		movs	r3, #0
 1617 0086 84F84530 		strb	r3, [r4, #69]
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1618              		.loc 1 1234 0
 1619 008a D3E7     		b	.L97
 1620              		.cfi_endproc
 1621              	.LFE150:
 1623              		.section	.text.HAL_ETH_ReadPHYRegister,"ax",%progbits
 1624              		.align	1
 1625              		.global	HAL_ETH_ReadPHYRegister
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
ARM GAS  /tmp/ccoFuW87.s 			page 73


 1629              		.fpu fpv5-d16
 1631              	HAL_ETH_ReadPHYRegister:
 1632              	.LFB154:
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;     
 1633              		.loc 1 1297 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              	.LVL131:
 1638 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1639              	.LCFI33:
 1640              		.cfi_def_cfa_offset 24
 1641              		.cfi_offset 3, -24
 1642              		.cfi_offset 4, -20
 1643              		.cfi_offset 5, -16
 1644              		.cfi_offset 6, -12
 1645              		.cfi_offset 7, -8
 1646              		.cfi_offset 14, -4
 1647              	.LVL132:
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1648              		.loc 1 1305 0
 1649 0002 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1650 0006 DBB2     		uxtb	r3, r3
 1651 0008 822B     		cmp	r3, #130
 1652 000a 01D1     		bne	.L112
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1653              		.loc 1 1307 0
 1654 000c 0220     		movs	r0, #2
 1655              	.LVL133:
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1656              		.loc 1 1355 0
 1657 000e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1658              	.LVL134:
 1659              	.L112:
 1660 0010 1646     		mov	r6, r2
 1661 0012 0546     		mov	r5, r0
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1662              		.loc 1 1310 0
 1663 0014 8223     		movs	r3, #130
 1664 0016 80F84430 		strb	r3, [r0, #68]
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1665              		.loc 1 1313 0
 1666 001a 0268     		ldr	r2, [r0]
 1667              	.LVL135:
 1668 001c 1469     		ldr	r4, [r2, #16]
 1669              	.LVL136:
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1670              		.loc 1 1316 0
 1671 001e 04F01C04 		and	r4, r4, #28
 1672              	.LVL137:
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)PHYReg<<6) & ETH_MACMIIAR_MR);                   /* Set the PHY register add
 1673              		.loc 1 1319 0
 1674 0022 038A     		ldrh	r3, [r0, #16]
 1675 0024 DB02     		lsls	r3, r3, #11
 1676 0026 9BB2     		uxth	r3, r3
 1677 0028 1C43     		orrs	r4, r4, r3
 1678              	.LVL138:
ARM GAS  /tmp/ccoFuW87.s 			page 74


1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMIIAR_MW;                                           /* Set the read mode       
 1679              		.loc 1 1320 0
 1680 002a 8901     		lsls	r1, r1, #6
 1681              	.LVL139:
 1682 002c 01F4F861 		and	r1, r1, #1984
 1683              	.LVL140:
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MB;                                            /* Set the MII Busy bit    
 1684              		.loc 1 1321 0
 1685 0030 0C43     		orrs	r4, r4, r1
 1686              	.LVL141:
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1687              		.loc 1 1322 0
 1688 0032 44F00104 		orr	r4, r4, #1
 1689              	.LVL142:
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1690              		.loc 1 1325 0
 1691 0036 1461     		str	r4, [r2, #16]
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1692              		.loc 1 1328 0
 1693 0038 FFF7FEFF 		bl	HAL_GetTick
 1694              	.LVL143:
 1695 003c 0746     		mov	r7, r0
 1696              	.LVL144:
 1697              	.L107:
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1698              		.loc 1 1331 0
 1699 003e 14F0010F 		tst	r4, #1
 1700 0042 10D0     		beq	.L113
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1701              		.loc 1 1334 0
 1702 0044 FFF7FEFF 		bl	HAL_GetTick
 1703              	.LVL145:
 1704 0048 C01B     		subs	r0, r0, r7
 1705 004a B0F5803F 		cmp	r0, #65536
 1706 004e 02D2     		bcs	.L114
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1707              		.loc 1 1344 0
 1708 0050 2B68     		ldr	r3, [r5]
 1709 0052 1C69     		ldr	r4, [r3, #16]
 1710              	.LVL146:
 1711 0054 F3E7     		b	.L107
 1712              	.L114:
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1713              		.loc 1 1336 0
 1714 0056 0123     		movs	r3, #1
 1715 0058 85F84430 		strb	r3, [r5, #68]
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1716              		.loc 1 1339 0
 1717 005c 0023     		movs	r3, #0
 1718 005e 85F84530 		strb	r3, [r5, #69]
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1719              		.loc 1 1341 0
 1720 0062 0320     		movs	r0, #3
 1721 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1722              	.LVL147:
 1723              	.L113:
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccoFuW87.s 			page 75


 1724              		.loc 1 1348 0
 1725 0066 2B68     		ldr	r3, [r5]
 1726 0068 5B69     		ldr	r3, [r3, #20]
 1727 006a 9BB2     		uxth	r3, r3
 1728 006c 3360     		str	r3, [r6]
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1729              		.loc 1 1351 0
 1730 006e 0123     		movs	r3, #1
 1731 0070 85F84430 		strb	r3, [r5, #68]
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1732              		.loc 1 1354 0
 1733 0074 0020     		movs	r0, #0
 1734 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1735              		.cfi_endproc
 1736              	.LFE154:
 1738              		.section	.text.HAL_ETH_WritePHYRegister,"ax",%progbits
 1739              		.align	1
 1740              		.global	HAL_ETH_WritePHYRegister
 1741              		.syntax unified
 1742              		.thumb
 1743              		.thumb_func
 1744              		.fpu fpv5-d16
 1746              	HAL_ETH_WritePHYRegister:
 1747              	.LFB155:
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 1748              		.loc 1 1369 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 0
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 1752              	.LVL148:
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1753              		.loc 1 1377 0
 1754 0000 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1755 0004 DBB2     		uxtb	r3, r3
 1756 0006 422B     		cmp	r3, #66
 1757 0008 01D1     		bne	.L125
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1758              		.loc 1 1379 0
 1759 000a 0220     		movs	r0, #2
 1760              	.LVL149:
 1761 000c 7047     		bx	lr
 1762              	.LVL150:
 1763              	.L125:
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 1764              		.loc 1 1369 0
 1765 000e 70B5     		push	{r4, r5, r6, lr}
 1766              	.LCFI34:
 1767              		.cfi_def_cfa_offset 16
 1768              		.cfi_offset 4, -16
 1769              		.cfi_offset 5, -12
 1770              		.cfi_offset 6, -8
 1771              		.cfi_offset 14, -4
 1772 0010 0546     		mov	r5, r0
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1773              		.loc 1 1382 0
 1774 0012 4223     		movs	r3, #66
 1775 0014 80F84430 		strb	r3, [r0, #68]
ARM GAS  /tmp/ccoFuW87.s 			page 76


1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1776              		.loc 1 1385 0
 1777 0018 0068     		ldr	r0, [r0]
 1778              	.LVL151:
 1779 001a 0469     		ldr	r4, [r0, #16]
 1780              	.LVL152:
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1781              		.loc 1 1388 0
 1782 001c 04F01C04 		and	r4, r4, #28
 1783              	.LVL153:
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |=(((uint32_t)PHYReg<<6) & ETH_MACMIIAR_MR);                 /* Set the PHY register addre
 1784              		.loc 1 1391 0
 1785 0020 2B8A     		ldrh	r3, [r5, #16]
 1786 0022 DB02     		lsls	r3, r3, #11
 1787 0024 9BB2     		uxth	r3, r3
 1788 0026 1C43     		orrs	r4, r4, r3
 1789              	.LVL154:
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   tmpreg |= ETH_MACMIIAR_MW;                                          /* Set the write mode */
 1790              		.loc 1 1392 0
 1791 0028 8901     		lsls	r1, r1, #6
 1792              	.LVL155:
 1793 002a 01F4F861 		and	r1, r1, #1984
 1794 002e 0C43     		orrs	r4, r4, r1
 1795              	.LVL156:
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1796              		.loc 1 1394 0
 1797 0030 44F00304 		orr	r4, r4, #3
 1798              	.LVL157:
 1799 0034 92B2     		uxth	r2, r2
 1800              	.LVL158:
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1801              		.loc 1 1397 0
 1802 0036 4261     		str	r2, [r0, #20]
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1803              		.loc 1 1400 0
 1804 0038 2B68     		ldr	r3, [r5]
 1805 003a 1C61     		str	r4, [r3, #16]
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1806              		.loc 1 1403 0
 1807 003c FFF7FEFF 		bl	HAL_GetTick
 1808              	.LVL159:
 1809 0040 0646     		mov	r6, r0
 1810              	.LVL160:
 1811              	.L117:
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1812              		.loc 1 1406 0
 1813 0042 14F0010F 		tst	r4, #1
 1814 0046 10D0     		beq	.L126
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 1815              		.loc 1 1409 0
 1816 0048 FFF7FEFF 		bl	HAL_GetTick
 1817              	.LVL161:
 1818 004c 801B     		subs	r0, r0, r6
 1819 004e B0F5803F 		cmp	r0, #65536
 1820 0052 02D2     		bcs	.L127
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1821              		.loc 1 1419 0
ARM GAS  /tmp/ccoFuW87.s 			page 77


 1822 0054 2B68     		ldr	r3, [r5]
 1823 0056 1C69     		ldr	r4, [r3, #16]
 1824              	.LVL162:
 1825 0058 F3E7     		b	.L117
 1826              	.L127:
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1827              		.loc 1 1411 0
 1828 005a 0123     		movs	r3, #1
 1829 005c 85F84430 		strb	r3, [r5, #68]
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1830              		.loc 1 1414 0
 1831 0060 0023     		movs	r3, #0
 1832 0062 85F84530 		strb	r3, [r5, #69]
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 1833              		.loc 1 1416 0
 1834 0066 0320     		movs	r0, #3
 1835 0068 70BD     		pop	{r4, r5, r6, pc}
 1836              	.LVL163:
 1837              	.L126:
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1838              		.loc 1 1423 0
 1839 006a 0123     		movs	r3, #1
 1840 006c 85F84430 		strb	r3, [r5, #68]
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 1841              		.loc 1 1426 0
 1842 0070 0020     		movs	r0, #0
 1843 0072 70BD     		pop	{r4, r5, r6, pc}
 1844              		.cfi_endproc
 1845              	.LFE155:
 1847              		.section	.text.HAL_ETH_Init,"ax",%progbits
 1848              		.align	1
 1849              		.global	HAL_ETH_Init
 1850              		.syntax unified
 1851              		.thumb
 1852              		.thumb_func
 1853              		.fpu fpv5-d16
 1855              	HAL_ETH_Init:
 1856              	.LFB141:
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tempreg = 0, phyreg = 0;
 1857              		.loc 1 209 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 8
 1860              		@ frame_needed = 0, uses_anonymous_args = 0
 1861              	.LVL164:
 1862 0000 70B5     		push	{r4, r5, r6, lr}
 1863              	.LCFI35:
 1864              		.cfi_def_cfa_offset 16
 1865              		.cfi_offset 4, -16
 1866              		.cfi_offset 5, -12
 1867              		.cfi_offset 6, -8
 1868              		.cfi_offset 14, -4
 1869 0002 82B0     		sub	sp, sp, #8
 1870              	.LCFI36:
 1871              		.cfi_def_cfa_offset 24
 1872              	.LVL165:
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t hclk = 60000000;
 1873              		.loc 1 210 0
ARM GAS  /tmp/ccoFuW87.s 			page 78


 1874 0004 0023     		movs	r3, #0
 1875 0006 0193     		str	r3, [sp, #4]
 1876              	.LVL166:
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1877              		.loc 1 216 0
 1878 0008 0028     		cmp	r0, #0
 1879 000a 00F00C81 		beq	.L150
 1880 000e 0446     		mov	r4, r0
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1881              		.loc 1 227 0
 1882 0010 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1883 0014 002B     		cmp	r3, #0
 1884 0016 32D0     		beq	.L152
 1885              	.LVL167:
 1886              	.L130:
 1887              	.LBB2:
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1888              		.loc 1 248 0
 1889 0018 844B     		ldr	r3, .L160
 1890 001a 5A6C     		ldr	r2, [r3, #68]
 1891 001c 42F48042 		orr	r2, r2, #16384
 1892 0020 5A64     		str	r2, [r3, #68]
 1893 0022 5B6C     		ldr	r3, [r3, #68]
 1894 0024 03F48043 		and	r3, r3, #16384
 1895 0028 0093     		str	r3, [sp]
 1896 002a 009B     		ldr	r3, [sp]
 1897              	.LBE2:
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   SYSCFG->PMC |= (uint32_t)heth->Init.MediaInterface;
 1898              		.loc 1 251 0
 1899 002c 804B     		ldr	r3, .L160+4
 1900 002e 5A68     		ldr	r2, [r3, #4]
 1901 0030 22F40002 		bic	r2, r2, #8388608
 1902 0034 5A60     		str	r2, [r3, #4]
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1903              		.loc 1 252 0
 1904 0036 5A68     		ldr	r2, [r3, #4]
 1905 0038 216A     		ldr	r1, [r4, #32]
 1906 003a 0A43     		orrs	r2, r2, r1
 1907 003c 5A60     		str	r2, [r3, #4]
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1908              		.loc 1 257 0
 1909 003e 2368     		ldr	r3, [r4]
 1910 0040 03F58053 		add	r3, r3, #4096
 1911 0044 1A68     		ldr	r2, [r3]
 1912 0046 42F00102 		orr	r2, r2, #1
 1913 004a 1A60     		str	r2, [r3]
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1914              		.loc 1 260 0
 1915 004c FFF7FEFF 		bl	HAL_GetTick
 1916              	.LVL168:
 1917 0050 0546     		mov	r5, r0
 1918              	.LVL169:
 1919              	.L131:
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1920              		.loc 1 263 0
 1921 0052 2368     		ldr	r3, [r4]
 1922 0054 03F58052 		add	r2, r3, #4096
ARM GAS  /tmp/ccoFuW87.s 			page 79


 1923 0058 1268     		ldr	r2, [r2]
 1924 005a 12F0010F 		tst	r2, #1
 1925 005e 13D0     		beq	.L153
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {     
 1926              		.loc 1 266 0
 1927 0060 FFF7FEFF 		bl	HAL_GetTick
 1928              	.LVL170:
 1929 0064 401B     		subs	r0, r0, r5
 1930 0066 B0F5FA7F 		cmp	r0, #500
 1931 006a F2D9     		bls	.L131
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1932              		.loc 1 268 0
 1933 006c 0325     		movs	r5, #3
 1934              	.LVL171:
 1935 006e 84F84450 		strb	r5, [r4, #68]
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 1936              		.loc 1 271 0
 1937 0072 0023     		movs	r3, #0
 1938 0074 84F84530 		strb	r3, [r4, #69]
 1939              	.LVL172:
 1940              	.L129:
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 1941              		.loc 1 485 0
 1942 0078 2846     		mov	r0, r5
 1943 007a 02B0     		add	sp, sp, #8
 1944              	.LCFI37:
 1945              		.cfi_remember_state
 1946              		.cfi_def_cfa_offset 16
 1947              		@ sp needed
 1948 007c 70BD     		pop	{r4, r5, r6, pc}
 1949              	.LVL173:
 1950              	.L152:
 1951              	.LCFI38:
 1952              		.cfi_restore_state
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 1953              		.loc 1 230 0
 1954 007e 80F84530 		strb	r3, [r0, #69]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 1955              		.loc 1 243 0
 1956 0082 FFF7FEFF 		bl	HAL_ETH_MspInit
 1957              	.LVL174:
 1958 0086 C7E7     		b	.L130
 1959              	.LVL175:
 1960              	.L153:
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear CSR Clock Range CR[2:0] bits */
 1961              		.loc 1 282 0
 1962 0088 1D69     		ldr	r5, [r3, #16]
 1963              	.LVL176:
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1964              		.loc 1 284 0
 1965 008a 25F01C05 		bic	r5, r5, #28
 1966              	.LVL177:
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1967              		.loc 1 287 0
 1968 008e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1969              	.LVL178:
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
ARM GAS  /tmp/ccoFuW87.s 			page 80


 1970              		.loc 1 290 0
 1971 0092 684B     		ldr	r3, .L160+8
 1972 0094 0344     		add	r3, r3, r0
 1973 0096 684A     		ldr	r2, .L160+12
 1974 0098 9342     		cmp	r3, r2
 1975 009a 55D8     		bhi	.L133
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 1976              		.loc 1 293 0
 1977 009c 45F00805 		orr	r5, r5, #8
 1978              	.LVL179:
 1979              	.L134:
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1980              		.loc 1 317 0
 1981 00a0 2368     		ldr	r3, [r4]
 1982 00a2 1D61     		str	r5, [r3, #16]
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1983              		.loc 1 321 0
 1984 00a4 4FF40042 		mov	r2, #32768
 1985 00a8 0021     		movs	r1, #0
 1986 00aa 2046     		mov	r0, r4
 1987              	.LVL180:
 1988 00ac FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 1989              	.LVL181:
 1990 00b0 0546     		mov	r5, r0
 1991              	.LVL182:
 1992 00b2 0028     		cmp	r0, #0
 1993 00b4 60D1     		bne	.L154
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 1994              		.loc 1 337 0
 1995 00b6 FF20     		movs	r0, #255
 1996 00b8 FFF7FEFF 		bl	HAL_Delay
 1997              	.LVL183:
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 1998              		.loc 1 339 0
 1999 00bc 6368     		ldr	r3, [r4, #4]
 2000 00be 002B     		cmp	r3, #0
 2001 00c0 00F09180 		beq	.L138
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2002              		.loc 1 342 0
 2003 00c4 FFF7FEFF 		bl	HAL_GetTick
 2004              	.LVL184:
 2005 00c8 0646     		mov	r6, r0
 2006              	.LVL185:
 2007              	.L140:
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2008              		.loc 1 347 0
 2009 00ca 01AA     		add	r2, sp, #4
 2010 00cc 0121     		movs	r1, #1
 2011 00ce 2046     		mov	r0, r4
 2012 00d0 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 2013              	.LVL186:
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 2014              		.loc 1 350 0
 2015 00d4 FFF7FEFF 		bl	HAL_GetTick
 2016              	.LVL187:
 2017 00d8 801B     		subs	r0, r0, r6
 2018 00da 41F28833 		movw	r3, #5000
ARM GAS  /tmp/ccoFuW87.s 			page 81


 2019 00de 9842     		cmp	r0, r3
 2020 00e0 52D8     		bhi	.L155
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2021              		.loc 1 365 0
 2022 00e2 019B     		ldr	r3, [sp, #4]
 2023 00e4 13F0040F 		tst	r3, #4
 2024 00e8 EFD0     		beq	.L140
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 2025              		.loc 1 369 0
 2026 00ea 4FF48052 		mov	r2, #4096
 2027 00ee 0021     		movs	r1, #0
 2028 00f0 2046     		mov	r0, r4
 2029 00f2 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 2030              	.LVL188:
 2031 00f6 0028     		cmp	r0, #0
 2032 00f8 52D1     		bne	.L156
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2033              		.loc 1 385 0
 2034 00fa FFF7FEFF 		bl	HAL_GetTick
 2035              	.LVL189:
 2036 00fe 0646     		mov	r6, r0
 2037              	.LVL190:
 2038              	.L143:
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2039              		.loc 1 390 0
 2040 0100 01AA     		add	r2, sp, #4
 2041 0102 0121     		movs	r1, #1
 2042 0104 2046     		mov	r0, r4
 2043 0106 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 2044              	.LVL191:
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       {
 2045              		.loc 1 393 0
 2046 010a FFF7FEFF 		bl	HAL_GetTick
 2047              	.LVL192:
 2048 010e 801B     		subs	r0, r0, r6
 2049 0110 41F28833 		movw	r3, #5000
 2050 0114 9842     		cmp	r0, r3
 2051 0116 4BD8     		bhi	.L157
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2052              		.loc 1 409 0
 2053 0118 019B     		ldr	r3, [sp, #4]
 2054 011a 13F0200F 		tst	r3, #32
 2055 011e EFD0     		beq	.L143
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 2056              		.loc 1 412 0
 2057 0120 01AA     		add	r2, sp, #4
 2058 0122 1021     		movs	r1, #16
 2059 0124 2046     		mov	r0, r4
 2060 0126 FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 2061              	.LVL193:
 2062 012a 0028     		cmp	r0, #0
 2063 012c 4CD1     		bne	.L158
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 2064              		.loc 1 428 0
 2065 012e 019B     		ldr	r3, [sp, #4]
 2066 0130 13F0040F 		tst	r3, #4
 2067 0134 50D0     		beq	.L145
ARM GAS  /tmp/ccoFuW87.s 			page 82


 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 2068              		.loc 1 431 0
 2069 0136 4FF40062 		mov	r2, #2048
 2070 013a E260     		str	r2, [r4, #12]
 2071              	.L146:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {  
 2072              		.loc 1 439 0
 2073 013c 13F0020F 		tst	r3, #2
 2074 0140 4DD0     		beq	.L147
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 2075              		.loc 1 442 0
 2076 0142 0023     		movs	r3, #0
 2077 0144 A360     		str	r3, [r4, #8]
 2078 0146 5EE0     		b	.L148
 2079              	.LVL194:
 2080              	.L133:
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 2081              		.loc 1 295 0
 2082 0148 3C4B     		ldr	r3, .L160+16
 2083 014a 0344     		add	r3, r3, r0
 2084 014c 3C4A     		ldr	r2, .L160+20
 2085 014e 9342     		cmp	r3, r2
 2086 0150 02D8     		bhi	.L135
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }  
 2087              		.loc 1 298 0
 2088 0152 45F00C05 		orr	r5, r5, #12
 2089              	.LVL195:
 2090 0156 A3E7     		b	.L134
 2091              	.L135:
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 2092              		.loc 1 300 0
 2093 0158 3A4B     		ldr	r3, .L160+24
 2094 015a 0344     		add	r3, r3, r0
 2095 015c 3A4A     		ldr	r2, .L160+28
 2096 015e 9342     		cmp	r3, r2
 2097 0160 9ED9     		bls	.L134
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 2098              		.loc 1 305 0
 2099 0162 3A4B     		ldr	r3, .L160+32
 2100 0164 0344     		add	r3, r3, r0
 2101 0166 3A4A     		ldr	r2, .L160+36
 2102 0168 9342     		cmp	r3, r2
 2103 016a 02D8     		bhi	.L136
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 2104              		.loc 1 308 0
 2105 016c 45F00405 		orr	r5, r5, #4
 2106              	.LVL196:
 2107 0170 96E7     		b	.L134
 2108              	.L136:
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 2109              		.loc 1 313 0
 2110 0172 45F01005 		orr	r5, r5, #16
 2111              	.LVL197:
 2112 0176 93E7     		b	.L134
 2113              	.LVL198:
 2114              	.L154:
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
ARM GAS  /tmp/ccoFuW87.s 			page 83


 2115              		.loc 1 327 0
 2116 0178 0121     		movs	r1, #1
 2117 017a 2046     		mov	r0, r4
 2118 017c FFF7FEFF 		bl	ETH_MACDMAConfig
 2119              	.LVL199:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2120              		.loc 1 330 0
 2121 0180 0125     		movs	r5, #1
 2122 0182 84F84450 		strb	r5, [r4, #68]
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 2123              		.loc 1 333 0
 2124 0186 77E7     		b	.L129
 2125              	.LVL200:
 2126              	.L155:
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
 2127              		.loc 1 356 0
 2128 0188 0121     		movs	r1, #1
 2129 018a 2046     		mov	r0, r4
 2130 018c FFF7FEFF 		bl	ETH_MACDMAConfig
 2131              	.LVL201:
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2132              		.loc 1 358 0
 2133 0190 0123     		movs	r3, #1
 2134 0192 84F84430 		strb	r3, [r4, #68]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2135              		.loc 1 361 0
 2136 0196 0023     		movs	r3, #0
 2137 0198 84F84530 		strb	r3, [r4, #69]
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 2138              		.loc 1 363 0
 2139 019c 0325     		movs	r5, #3
 2140 019e 6BE7     		b	.L129
 2141              	.LVL202:
 2142              	.L156:
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2143              		.loc 1 375 0
 2144 01a0 0121     		movs	r1, #1
 2145 01a2 2046     		mov	r0, r4
 2146 01a4 FFF7FEFF 		bl	ETH_MACDMAConfig
 2147              	.LVL203:
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2148              		.loc 1 378 0
 2149 01a8 0125     		movs	r5, #1
 2150 01aa 84F84450 		strb	r5, [r4, #68]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 2151              		.loc 1 381 0
 2152 01ae 63E7     		b	.L129
 2153              	.LVL204:
 2154              	.L157:
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****         
 2155              		.loc 1 399 0
 2156 01b0 0121     		movs	r1, #1
 2157 01b2 2046     		mov	r0, r4
 2158 01b4 FFF7FEFF 		bl	ETH_MACDMAConfig
 2159              	.LVL205:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2160              		.loc 1 401 0
ARM GAS  /tmp/ccoFuW87.s 			page 84


 2161 01b8 0123     		movs	r3, #1
 2162 01ba 84F84430 		strb	r3, [r4, #68]
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2163              		.loc 1 404 0
 2164 01be 0023     		movs	r3, #0
 2165 01c0 84F84530 		strb	r3, [r4, #69]
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       }
 2166              		.loc 1 406 0
 2167 01c4 0325     		movs	r5, #3
 2168 01c6 57E7     		b	.L129
 2169              	.LVL206:
 2170              	.L158:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2171              		.loc 1 418 0
 2172 01c8 0121     		movs	r1, #1
 2173 01ca 2046     		mov	r0, r4
 2174 01cc FFF7FEFF 		bl	ETH_MACDMAConfig
 2175              	.LVL207:
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2176              		.loc 1 421 0
 2177 01d0 0125     		movs	r5, #1
 2178 01d2 84F84450 		strb	r5, [r4, #68]
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 2179              		.loc 1 424 0
 2180 01d6 4FE7     		b	.L129
 2181              	.LVL208:
 2182              	.L145:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 2183              		.loc 1 436 0
 2184 01d8 0022     		movs	r2, #0
 2185 01da E260     		str	r2, [r4, #12]
 2186 01dc AEE7     		b	.L146
 2187              	.L147:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }
 2188              		.loc 1 447 0
 2189 01de 4FF48043 		mov	r3, #16384
 2190 01e2 A360     		str	r3, [r4, #8]
 2191 01e4 0FE0     		b	.L148
 2192              	.LVL209:
 2193              	.L138:
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                                 (uint16_t)((heth->Init).Speed >> 1))) != HAL_OK)
 2194              		.loc 1 457 0
 2195 01e6 E368     		ldr	r3, [r4, #12]
 2196 01e8 C3F3CF02 		ubfx	r2, r3, #3, #16
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     {
 2197              		.loc 1 458 0
 2198 01ec A368     		ldr	r3, [r4, #8]
 2199 01ee C3F34F03 		ubfx	r3, r3, #1, #16
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                                 (uint16_t)((heth->Init).Speed >> 1))) != HAL_OK)
 2200              		.loc 1 457 0
 2201 01f2 1A43     		orrs	r2, r2, r3
 2202 01f4 0021     		movs	r1, #0
 2203 01f6 2046     		mov	r0, r4
 2204 01f8 FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 2205              	.LVL210:
 2206 01fc 58B9     		cbnz	r0, .L159
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
ARM GAS  /tmp/ccoFuW87.s 			page 85


 2207              		.loc 1 474 0
 2208 01fe 40F6FF70 		movw	r0, #4095
 2209 0202 FFF7FEFF 		bl	HAL_Delay
 2210              	.LVL211:
 2211              	.L148:
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2212              		.loc 1 478 0
 2213 0206 0021     		movs	r1, #0
 2214 0208 2046     		mov	r0, r4
 2215 020a FFF7FEFF 		bl	ETH_MACDMAConfig
 2216              	.LVL212:
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2217              		.loc 1 481 0
 2218 020e 0123     		movs	r3, #1
 2219 0210 84F84430 		strb	r3, [r4, #68]
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2220              		.loc 1 484 0
 2221 0214 30E7     		b	.L129
 2222              	.L159:
 2223              	.LVL213:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2224              		.loc 1 464 0
 2225 0216 0121     		movs	r1, #1
 2226 0218 2046     		mov	r0, r4
 2227 021a FFF7FEFF 		bl	ETH_MACDMAConfig
 2228              	.LVL214:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2229              		.loc 1 467 0
 2230 021e 0125     		movs	r5, #1
 2231 0220 84F84450 		strb	r5, [r4, #68]
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     }  
 2232              		.loc 1 470 0
 2233 0224 28E7     		b	.L129
 2234              	.LVL215:
 2235              	.L150:
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 2236              		.loc 1 218 0
 2237 0226 0125     		movs	r5, #1
 2238 0228 26E7     		b	.L129
 2239              	.L161:
 2240 022a 00BF     		.align	2
 2241              	.L160:
 2242 022c 00380240 		.word	1073887232
 2243 0230 00380140 		.word	1073821696
 2244 0234 00D3CEFE 		.word	-20000000
 2245 0238 BFE1E400 		.word	14999999
 2246 023c 40F1E9FD 		.word	-35000000
 2247 0240 3F787D01 		.word	24999999
 2248 0244 00796CFC 		.word	-60000000
 2249 0248 FF596202 		.word	39999999
 2250 024c 001F0AFA 		.word	-100000000
 2251 0250 7FF0FA02 		.word	49999999
 2252              		.cfi_endproc
 2253              	.LFE141:
 2255              		.section	.text.HAL_ETH_Start,"ax",%progbits
 2256              		.align	1
 2257              		.global	HAL_ETH_Start
ARM GAS  /tmp/ccoFuW87.s 			page 86


 2258              		.syntax unified
 2259              		.thumb
 2260              		.thumb_func
 2261              		.fpu fpv5-d16
 2263              	HAL_ETH_Start:
 2264              	.LFB156:
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 2265              		.loc 1 1461 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              	.LVL216:
 2270 0000 38B5     		push	{r3, r4, r5, lr}
 2271              	.LCFI39:
 2272              		.cfi_def_cfa_offset 16
 2273              		.cfi_offset 3, -16
 2274              		.cfi_offset 4, -12
 2275              		.cfi_offset 5, -8
 2276              		.cfi_offset 14, -4
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2277              		.loc 1 1463 0
 2278 0002 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 2279 0006 012B     		cmp	r3, #1
 2280 0008 01D1     		bne	.L166
 2281 000a 0220     		movs	r0, #2
 2282              	.LVL217:
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2283              		.loc 1 1491 0
 2284 000c 38BD     		pop	{r3, r4, r5, pc}
 2285              	.LVL218:
 2286              	.L166:
 2287 000e 0446     		mov	r4, r0
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2288              		.loc 1 1463 0 discriminator 2
 2289 0010 0125     		movs	r5, #1
 2290 0012 80F84550 		strb	r5, [r0, #69]
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2291              		.loc 1 1466 0 discriminator 2
 2292 0016 0223     		movs	r3, #2
 2293 0018 80F84430 		strb	r3, [r0, #68]
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2294              		.loc 1 1469 0 discriminator 2
 2295 001c FFF7FEFF 		bl	ETH_MACTransmissionEnable
 2296              	.LVL219:
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2297              		.loc 1 1472 0 discriminator 2
 2298 0020 2046     		mov	r0, r4
 2299 0022 FFF7FEFF 		bl	ETH_MACReceptionEnable
 2300              	.LVL220:
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2301              		.loc 1 1475 0 discriminator 2
 2302 0026 2046     		mov	r0, r4
 2303 0028 FFF7FEFF 		bl	ETH_FlushTransmitFIFO
 2304              	.LVL221:
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2305              		.loc 1 1478 0 discriminator 2
 2306 002c 2046     		mov	r0, r4
ARM GAS  /tmp/ccoFuW87.s 			page 87


 2307 002e FFF7FEFF 		bl	ETH_DMATransmissionEnable
 2308              	.LVL222:
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2309              		.loc 1 1481 0 discriminator 2
 2310 0032 2046     		mov	r0, r4
 2311 0034 FFF7FEFF 		bl	ETH_DMAReceptionEnable
 2312              	.LVL223:
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2313              		.loc 1 1484 0 discriminator 2
 2314 0038 84F84450 		strb	r5, [r4, #68]
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2315              		.loc 1 1487 0 discriminator 2
 2316 003c 0020     		movs	r0, #0
 2317 003e 84F84500 		strb	r0, [r4, #69]
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2318              		.loc 1 1490 0 discriminator 2
 2319 0042 38BD     		pop	{r3, r4, r5, pc}
 2320              		.cfi_endproc
 2321              	.LFE156:
 2323              		.section	.text.HAL_ETH_Stop,"ax",%progbits
 2324              		.align	1
 2325              		.global	HAL_ETH_Stop
 2326              		.syntax unified
 2327              		.thumb
 2328              		.thumb_func
 2329              		.fpu fpv5-d16
 2331              	HAL_ETH_Stop:
 2332              	.LFB157:
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Process Locked */
 2333              		.loc 1 1500 0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 0
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 2337              	.LVL224:
 2338 0000 38B5     		push	{r3, r4, r5, lr}
 2339              	.LCFI40:
 2340              		.cfi_def_cfa_offset 16
 2341              		.cfi_offset 3, -16
 2342              		.cfi_offset 4, -12
 2343              		.cfi_offset 5, -8
 2344              		.cfi_offset 14, -4
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2345              		.loc 1 1502 0
 2346 0002 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 2347 0006 012B     		cmp	r3, #1
 2348 0008 01D1     		bne	.L171
 2349 000a 0220     		movs	r0, #2
 2350              	.LVL225:
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2351              		.loc 1 1530 0
 2352 000c 38BD     		pop	{r3, r4, r5, pc}
 2353              	.LVL226:
 2354              	.L171:
 2355 000e 0446     		mov	r4, r0
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2356              		.loc 1 1502 0 discriminator 2
 2357 0010 0125     		movs	r5, #1
ARM GAS  /tmp/ccoFuW87.s 			page 88


 2358 0012 80F84550 		strb	r5, [r0, #69]
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2359              		.loc 1 1505 0 discriminator 2
 2360 0016 0223     		movs	r3, #2
 2361 0018 80F84430 		strb	r3, [r0, #68]
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2362              		.loc 1 1508 0 discriminator 2
 2363 001c FFF7FEFF 		bl	ETH_DMATransmissionDisable
 2364              	.LVL227:
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2365              		.loc 1 1511 0 discriminator 2
 2366 0020 2046     		mov	r0, r4
 2367 0022 FFF7FEFF 		bl	ETH_DMAReceptionDisable
 2368              	.LVL228:
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2369              		.loc 1 1514 0 discriminator 2
 2370 0026 2046     		mov	r0, r4
 2371 0028 FFF7FEFF 		bl	ETH_MACReceptionDisable
 2372              	.LVL229:
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2373              		.loc 1 1517 0 discriminator 2
 2374 002c 2046     		mov	r0, r4
 2375 002e FFF7FEFF 		bl	ETH_FlushTransmitFIFO
 2376              	.LVL230:
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2377              		.loc 1 1520 0 discriminator 2
 2378 0032 2046     		mov	r0, r4
 2379 0034 FFF7FEFF 		bl	ETH_MACTransmissionDisable
 2380              	.LVL231:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2381              		.loc 1 1523 0 discriminator 2
 2382 0038 84F84450 		strb	r5, [r4, #68]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2383              		.loc 1 1526 0 discriminator 2
 2384 003c 0020     		movs	r0, #0
 2385 003e 84F84500 		strb	r0, [r4, #69]
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2386              		.loc 1 1529 0 discriminator 2
 2387 0042 38BD     		pop	{r3, r4, r5, pc}
 2388              		.cfi_endproc
 2389              	.LFE157:
 2391              		.section	.text.HAL_ETH_ConfigMAC,"ax",%progbits
 2392              		.align	1
 2393              		.global	HAL_ETH_ConfigMAC
 2394              		.syntax unified
 2395              		.thumb
 2396              		.thumb_func
 2397              		.fpu fpv5-d16
 2399              	HAL_ETH_ConfigMAC:
 2400              	.LFB158:
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2401              		.loc 1 1540 0
 2402              		.cfi_startproc
 2403              		@ args = 0, pretend = 0, frame = 0
 2404              		@ frame_needed = 0, uses_anonymous_args = 0
 2405              	.LVL232:
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
ARM GAS  /tmp/ccoFuW87.s 			page 89


 2406              		.loc 1 1544 0
 2407 0000 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 2408 0004 012B     		cmp	r3, #1
 2409 0006 00F08E80 		beq	.L176
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2410              		.loc 1 1540 0 discriminator 2
 2411 000a 70B5     		push	{r4, r5, r6, lr}
 2412              	.LCFI41:
 2413              		.cfi_def_cfa_offset 16
 2414              		.cfi_offset 4, -16
 2415              		.cfi_offset 5, -12
 2416              		.cfi_offset 6, -8
 2417              		.cfi_offset 14, -4
 2418 000c 0C46     		mov	r4, r1
 2419 000e 0546     		mov	r5, r0
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2420              		.loc 1 1544 0 discriminator 2
 2421 0010 0123     		movs	r3, #1
 2422 0012 80F84530 		strb	r3, [r0, #69]
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2423              		.loc 1 1547 0 discriminator 2
 2424 0016 0223     		movs	r3, #2
 2425 0018 80F84430 		strb	r3, [r0, #68]
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   {
 2426              		.loc 1 1552 0 discriminator 2
 2427 001c 0029     		cmp	r1, #0
 2428 001e 71D0     		beq	.L174
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     /* Clear WD, PCE, PS, TE and RE bits */
 2429              		.loc 1 1585 0
 2430 0020 0168     		ldr	r1, [r0]
 2431              	.LVL233:
 2432 0022 0B68     		ldr	r3, [r1]
 2433              	.LVL234:
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2434              		.loc 1 1587 0
 2435 0024 414A     		ldr	r2, .L181
 2436 0026 1A40     		ands	r2, r2, r3
 2437              	.LVL235:
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2438              		.loc 1 1589 0
 2439 0028 2368     		ldr	r3, [r4]
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->InterFrameGap |
 2440              		.loc 1 1590 0
 2441 002a 6068     		ldr	r0, [r4, #4]
 2442              	.LVL236:
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2443              		.loc 1 1589 0
 2444 002c 0343     		orrs	r3, r3, r0
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->CarrierSense |
 2445              		.loc 1 1591 0
 2446 002e A068     		ldr	r0, [r4, #8]
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->InterFrameGap |
 2447              		.loc 1 1590 0
 2448 0030 0343     		orrs	r3, r3, r0
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).Speed | 
 2449              		.loc 1 1592 0
 2450 0032 E068     		ldr	r0, [r4, #12]
ARM GAS  /tmp/ccoFuW87.s 			page 90


1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->CarrierSense |
 2451              		.loc 1 1591 0
 2452 0034 0343     		orrs	r3, r3, r0
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ReceiveOwn |
 2453              		.loc 1 1593 0
 2454 0036 A868     		ldr	r0, [r5, #8]
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).Speed | 
 2455              		.loc 1 1592 0
 2456 0038 0343     		orrs	r3, r3, r0
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->LoopbackMode |
 2457              		.loc 1 1594 0
 2458 003a 2069     		ldr	r0, [r4, #16]
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ReceiveOwn |
 2459              		.loc 1 1593 0
 2460 003c 0343     		orrs	r3, r3, r0
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).DuplexMode | 
 2461              		.loc 1 1595 0
 2462 003e 6069     		ldr	r0, [r4, #20]
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->LoopbackMode |
 2463              		.loc 1 1594 0
 2464 0040 0343     		orrs	r3, r3, r0
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ChecksumOffload |    
 2465              		.loc 1 1596 0
 2466 0042 E868     		ldr	r0, [r5, #12]
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          (heth->Init).DuplexMode | 
 2467              		.loc 1 1595 0
 2468 0044 0343     		orrs	r3, r3, r0
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->RetryTransmission | 
 2469              		.loc 1 1597 0
 2470 0046 A069     		ldr	r0, [r4, #24]
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->ChecksumOffload |    
 2471              		.loc 1 1596 0
 2472 0048 0343     		orrs	r3, r3, r0
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->AutomaticPadCRCStrip | 
 2473              		.loc 1 1598 0
 2474 004a E069     		ldr	r0, [r4, #28]
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->RetryTransmission | 
 2475              		.loc 1 1597 0
 2476 004c 0343     		orrs	r3, r3, r0
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->BackOffLimit | 
 2477              		.loc 1 1599 0
 2478 004e 206A     		ldr	r0, [r4, #32]
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->AutomaticPadCRCStrip | 
 2479              		.loc 1 1598 0
 2480 0050 0343     		orrs	r3, r3, r0
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->DeferralCheck);
 2481              		.loc 1 1600 0
 2482 0052 606A     		ldr	r0, [r4, #36]
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->BackOffLimit | 
 2483              		.loc 1 1599 0
 2484 0054 0343     		orrs	r3, r3, r0
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2485              		.loc 1 1601 0
 2486 0056 A06A     		ldr	r0, [r4, #40]
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->DeferralCheck);
 2487              		.loc 1 1600 0
 2488 0058 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/ccoFuW87.s 			page 91


1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                          macconf->Jabber | 
 2489              		.loc 1 1589 0
 2490 005a 1343     		orrs	r3, r3, r2
 2491              	.LVL237:
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2492              		.loc 1 1604 0
 2493 005c 0B60     		str	r3, [r1]
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 2494              		.loc 1 1608 0
 2495 005e 2B68     		ldr	r3, [r5]
 2496              	.LVL238:
 2497 0060 1E68     		ldr	r6, [r3]
 2498              	.LVL239:
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = tmpreg; 
 2499              		.loc 1 1609 0
 2500 0062 0120     		movs	r0, #1
 2501 0064 FFF7FEFF 		bl	HAL_Delay
 2502              	.LVL240:
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2503              		.loc 1 1610 0
 2504 0068 2B68     		ldr	r3, [r5]
 2505 006a 1E60     		str	r6, [r3]
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2506              		.loc 1 1614 0
 2507 006c 2A68     		ldr	r2, [r5]
 2508 006e E36A     		ldr	r3, [r4, #44]
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PassControlFrames |
 2509              		.loc 1 1615 0
 2510 0070 216B     		ldr	r1, [r4, #48]
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2511              		.loc 1 1614 0
 2512 0072 0B43     		orrs	r3, r3, r1
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->BroadcastFramesReception | 
 2513              		.loc 1 1616 0
 2514 0074 616B     		ldr	r1, [r4, #52]
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PassControlFrames |
 2515              		.loc 1 1615 0
 2516 0076 0B43     		orrs	r3, r3, r1
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->DestinationAddrFilter |
 2517              		.loc 1 1617 0
 2518 0078 A16B     		ldr	r1, [r4, #56]
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->BroadcastFramesReception | 
 2519              		.loc 1 1616 0
 2520 007a 0B43     		orrs	r3, r3, r1
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PromiscuousMode |
 2521              		.loc 1 1618 0
 2522 007c E16B     		ldr	r1, [r4, #60]
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->DestinationAddrFilter |
 2523              		.loc 1 1617 0
 2524 007e 0B43     		orrs	r3, r3, r1
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->MulticastFramesFilter |
 2525              		.loc 1 1619 0
 2526 0080 216C     		ldr	r1, [r4, #64]
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->PromiscuousMode |
 2527              		.loc 1 1618 0
 2528 0082 0B43     		orrs	r3, r3, r1
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->UnicastFramesFilter);
ARM GAS  /tmp/ccoFuW87.s 			page 92


 2529              		.loc 1 1620 0
 2530 0084 616C     		ldr	r1, [r4, #68]
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->MulticastFramesFilter |
 2531              		.loc 1 1619 0
 2532 0086 0B43     		orrs	r3, r3, r1
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
 2533              		.loc 1 1621 0
 2534 0088 A16C     		ldr	r1, [r4, #72]
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->UnicastFramesFilter);
 2535              		.loc 1 1620 0
 2536 008a 0B43     		orrs	r3, r3, r1
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                           macconf->SourceAddrFilter |
 2537              		.loc 1 1614 0
 2538 008c 5360     		str	r3, [r2, #4]
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 2539              		.loc 1 1625 0
 2540 008e 2B68     		ldr	r3, [r5]
 2541 0090 5E68     		ldr	r6, [r3, #4]
 2542              	.LVL241:
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFFR = tmpreg;
 2543              		.loc 1 1626 0
 2544 0092 0120     		movs	r0, #1
 2545 0094 FFF7FEFF 		bl	HAL_Delay
 2546              	.LVL242:
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
 2547              		.loc 1 1627 0
 2548 0098 2B68     		ldr	r3, [r5]
 2549 009a 5E60     		str	r6, [r3, #4]
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
 2550              		.loc 1 1631 0
 2551 009c 2B68     		ldr	r3, [r5]
 2552 009e E26C     		ldr	r2, [r4, #76]
 2553 00a0 9A60     		str	r2, [r3, #8]
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /*----------------------- ETHERNET MACFCR Configuration --------------------*/
 2554              		.loc 1 1634 0
 2555 00a2 2B68     		ldr	r3, [r5]
 2556 00a4 226D     		ldr	r2, [r4, #80]
 2557 00a6 DA60     		str	r2, [r3, #12]
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      /* Clear xx bits */
 2558              		.loc 1 1638 0
 2559 00a8 2968     		ldr	r1, [r5]
 2560 00aa 8A69     		ldr	r2, [r1, #24]
 2561              	.LVL243:
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
 2562              		.loc 1 1640 0
 2563 00ac 22F0BE02 		bic	r2, r2, #190
 2564              	.LVL244:
 2565 00b0 1204     		lsls	r2, r2, #16
 2566 00b2 120C     		lsrs	r2, r2, #16
 2567              	.LVL245:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2568              		.loc 1 1642 0
 2569 00b4 606D     		ldr	r0, [r4, #84]
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->PauseLowThreshold |
 2570              		.loc 1 1643 0
 2571 00b6 A36D     		ldr	r3, [r4, #88]
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
ARM GAS  /tmp/ccoFuW87.s 			page 93


 2572              		.loc 1 1642 0
 2573 00b8 43EA0043 		orr	r3, r3, r0, lsl #16
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->UnicastPauseFrameDetect | 
 2574              		.loc 1 1644 0
 2575 00bc E06D     		ldr	r0, [r4, #92]
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->PauseLowThreshold |
 2576              		.loc 1 1643 0
 2577 00be 0343     		orrs	r3, r3, r0
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ReceiveFlowControl |
 2578              		.loc 1 1645 0
 2579 00c0 206E     		ldr	r0, [r4, #96]
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->UnicastPauseFrameDetect | 
 2580              		.loc 1 1644 0
 2581 00c2 0343     		orrs	r3, r3, r0
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->TransmitFlowControl); 
 2582              		.loc 1 1646 0
 2583 00c4 606E     		ldr	r0, [r4, #100]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ReceiveFlowControl |
 2584              		.loc 1 1645 0
 2585 00c6 0343     		orrs	r3, r3, r0
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
 2586              		.loc 1 1647 0
 2587 00c8 A06E     		ldr	r0, [r4, #104]
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->TransmitFlowControl); 
 2588              		.loc 1 1646 0
 2589 00ca 0343     		orrs	r3, r3, r0
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                           macconf->ZeroQuantaPause |
 2590              		.loc 1 1642 0
 2591 00cc 1343     		orrs	r3, r3, r2
 2592              	.LVL246:
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
 2593              		.loc 1 1650 0
 2594 00ce 8B61     		str	r3, [r1, #24]
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 2595              		.loc 1 1654 0
 2596 00d0 2B68     		ldr	r3, [r5]
 2597              	.LVL247:
 2598 00d2 9E69     		ldr	r6, [r3, #24]
 2599              	.LVL248:
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      (heth->Instance)->MACFCR = tmpreg;
 2600              		.loc 1 1655 0
 2601 00d4 0120     		movs	r0, #1
 2602 00d6 FFF7FEFF 		bl	HAL_Delay
 2603              	.LVL249:
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****      
 2604              		.loc 1 1656 0
 2605 00da 2B68     		ldr	r3, [r5]
 2606 00dc 9E61     		str	r6, [r3, #24]
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                               macconf->VLANTagIdentifier);
 2607              		.loc 1 1659 0
 2608 00de 2A68     		ldr	r2, [r5]
 2609 00e0 E36E     		ldr	r3, [r4, #108]
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       
 2610              		.loc 1 1660 0
 2611 00e2 216F     		ldr	r1, [r4, #112]
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                               macconf->VLANTagIdentifier);
 2612              		.loc 1 1659 0
ARM GAS  /tmp/ccoFuW87.s 			page 94


 2613 00e4 0B43     		orrs	r3, r3, r1
 2614 00e6 D361     		str	r3, [r2, #28]
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       HAL_Delay(ETH_REG_WRITE_DELAY);
 2615              		.loc 1 1664 0
 2616 00e8 2B68     		ldr	r3, [r5]
 2617 00ea DC69     		ldr	r4, [r3, #28]
 2618              	.LVL250:
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****       (heth->Instance)->MACVLANTR = tmpreg;
 2619              		.loc 1 1665 0
 2620 00ec 0120     		movs	r0, #1
 2621 00ee FFF7FEFF 		bl	HAL_Delay
 2622              	.LVL251:
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 2623              		.loc 1 1666 0
 2624 00f2 2B68     		ldr	r3, [r5]
 2625 00f4 DC61     		str	r4, [r3, #28]
 2626              	.L175:
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2627              		.loc 1 1690 0
 2628 00f6 0123     		movs	r3, #1
 2629 00f8 85F84430 		strb	r3, [r5, #68]
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2630              		.loc 1 1693 0
 2631 00fc 0020     		movs	r0, #0
 2632 00fe 85F84500 		strb	r0, [r5, #69]
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2633              		.loc 1 1696 0
 2634 0102 70BD     		pop	{r4, r5, r6, pc}
 2635              	.LVL252:
 2636              	.L174:
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2637              		.loc 1 1672 0
 2638 0104 0168     		ldr	r1, [r0]
 2639              	.LVL253:
 2640 0106 0B68     		ldr	r3, [r1]
 2641              	.LVL254:
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2642              		.loc 1 1675 0
 2643 0108 23F49043 		bic	r3, r3, #18432
 2644              	.LVL255:
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2645              		.loc 1 1677 0
 2646 010c 8268     		ldr	r2, [r0, #8]
 2647 010e C068     		ldr	r0, [r0, #12]
 2648              	.LVL256:
 2649 0110 0243     		orrs	r2, r2, r0
 2650 0112 1343     		orrs	r3, r3, r2
 2651              	.LVL257:
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     
 2652              		.loc 1 1680 0
 2653 0114 0B60     		str	r3, [r1]
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 2654              		.loc 1 1684 0
 2655 0116 2B68     		ldr	r3, [r5]
 2656              	.LVL258:
 2657 0118 1C68     		ldr	r4, [r3]
 2658              	.LVL259:
ARM GAS  /tmp/ccoFuW87.s 			page 95


1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****     (heth->Instance)->MACCR = tmpreg;
 2659              		.loc 1 1685 0
 2660 011a 0120     		movs	r0, #1
 2661 011c FFF7FEFF 		bl	HAL_Delay
 2662              	.LVL260:
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   }
 2663              		.loc 1 1686 0
 2664 0120 2B68     		ldr	r3, [r5]
 2665 0122 1C60     		str	r4, [r3]
 2666 0124 E7E7     		b	.L175
 2667              	.LVL261:
 2668              	.L176:
 2669              	.LCFI42:
 2670              		.cfi_def_cfa_offset 0
 2671              		.cfi_restore 4
 2672              		.cfi_restore 5
 2673              		.cfi_restore 6
 2674              		.cfi_restore 14
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2675              		.loc 1 1544 0
 2676 0126 0220     		movs	r0, #2
 2677              	.LVL262:
 2678 0128 7047     		bx	lr
 2679              	.L182:
 2680 012a 00BF     		.align	2
 2681              	.L181:
 2682 012c 0F8120FF 		.word	-14647025
 2683              		.cfi_endproc
 2684              	.LFE158:
 2686              		.section	.text.HAL_ETH_ConfigDMA,"ax",%progbits
 2687              		.align	1
 2688              		.global	HAL_ETH_ConfigDMA
 2689              		.syntax unified
 2690              		.thumb
 2691              		.thumb_func
 2692              		.fpu fpv5-d16
 2694              	HAL_ETH_ConfigDMA:
 2695              	.LFB159:
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2696              		.loc 1 1707 0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 0, uses_anonymous_args = 0
 2700              	.LVL263:
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2701              		.loc 1 1711 0
 2702 0000 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 2703 0004 012B     		cmp	r3, #1
 2704 0006 01D1     		bne	.L190
 2705 0008 0220     		movs	r0, #2
 2706              	.LVL264:
 2707 000a 7047     		bx	lr
 2708              	.LVL265:
 2709              	.L190:
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   uint32_t tmpreg = 0;
 2710              		.loc 1 1707 0 discriminator 2
 2711 000c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/ccoFuW87.s 			page 96


 2712              	.LCFI43:
 2713              		.cfi_def_cfa_offset 24
 2714              		.cfi_offset 4, -24
 2715              		.cfi_offset 5, -20
 2716              		.cfi_offset 6, -16
 2717              		.cfi_offset 7, -12
 2718              		.cfi_offset 8, -8
 2719              		.cfi_offset 14, -4
 2720 0010 0C46     		mov	r4, r1
 2721 0012 0546     		mov	r5, r0
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   
 2722              		.loc 1 1711 0 discriminator 2
 2723 0014 0126     		movs	r6, #1
 2724 0016 80F84560 		strb	r6, [r0, #69]
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2725              		.loc 1 1714 0 discriminator 2
 2726 001a 0223     		movs	r3, #2
 2727 001c 80F84430 		strb	r3, [r0, #68]
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Clear xx bits */
 2728              		.loc 1 1736 0 discriminator 2
 2729 0020 0168     		ldr	r1, [r0]
 2730              	.LVL266:
 2731 0022 41F21807 		movw	r7, #4120
 2732 0026 CB59     		ldr	r3, [r1, r7]
 2733              	.LVL267:
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2734              		.loc 1 1738 0 discriminator 2
 2735 0028 214A     		ldr	r2, .L191
 2736 002a 1A40     		ands	r2, r2, r3
 2737              	.LVL268:
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2738              		.loc 1 1740 0 discriminator 2
 2739 002c 2368     		ldr	r3, [r4]
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->FlushReceivedFrame |
 2740              		.loc 1 1741 0 discriminator 2
 2741 002e 6068     		ldr	r0, [r4, #4]
 2742              	.LVL269:
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2743              		.loc 1 1740 0 discriminator 2
 2744 0030 0343     		orrs	r3, r3, r0
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitStoreForward | 
 2745              		.loc 1 1742 0 discriminator 2
 2746 0032 A068     		ldr	r0, [r4, #8]
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->FlushReceivedFrame |
 2747              		.loc 1 1741 0 discriminator 2
 2748 0034 0343     		orrs	r3, r3, r0
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitThresholdControl |
 2749              		.loc 1 1743 0 discriminator 2
 2750 0036 E068     		ldr	r0, [r4, #12]
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitStoreForward | 
 2751              		.loc 1 1742 0 discriminator 2
 2752 0038 0343     		orrs	r3, r3, r0
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardErrorFrames |
 2753              		.loc 1 1744 0 discriminator 2
 2754 003a 2069     		ldr	r0, [r4, #16]
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->TransmitThresholdControl |
 2755              		.loc 1 1743 0 discriminator 2
ARM GAS  /tmp/ccoFuW87.s 			page 97


 2756 003c 0343     		orrs	r3, r3, r0
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardUndersizedGoodFrames |
 2757              		.loc 1 1745 0 discriminator 2
 2758 003e 6069     		ldr	r0, [r4, #20]
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardErrorFrames |
 2759              		.loc 1 1744 0 discriminator 2
 2760 0040 0343     		orrs	r3, r3, r0
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveThresholdControl |
 2761              		.loc 1 1746 0 discriminator 2
 2762 0042 A069     		ldr	r0, [r4, #24]
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ForwardUndersizedGoodFrames |
 2763              		.loc 1 1745 0 discriminator 2
 2764 0044 0343     		orrs	r3, r3, r0
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->SecondFrameOperate);
 2765              		.loc 1 1747 0 discriminator 2
 2766 0046 E069     		ldr	r0, [r4, #28]
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveThresholdControl |
 2767              		.loc 1 1746 0 discriminator 2
 2768 0048 0343     		orrs	r3, r3, r0
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2769              		.loc 1 1748 0 discriminator 2
 2770 004a 206A     		ldr	r0, [r4, #32]
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->SecondFrameOperate);
 2771              		.loc 1 1747 0 discriminator 2
 2772 004c 0343     		orrs	r3, r3, r0
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                        dmaconf->ReceiveStoreForward |
 2773              		.loc 1 1740 0 discriminator 2
 2774 004e 1343     		orrs	r3, r3, r2
 2775              	.LVL270:
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2776              		.loc 1 1751 0 discriminator 2
 2777 0050 CB51     		str	r3, [r1, r7]
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   HAL_Delay(ETH_REG_WRITE_DELAY);
 2778              		.loc 1 1755 0 discriminator 2
 2779 0052 2B68     		ldr	r3, [r5]
 2780              	.LVL271:
 2781 0054 53F80780 		ldr	r8, [r3, r7]
 2782              	.LVL272:
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   (heth->Instance)->DMAOMR = tmpreg;
 2783              		.loc 1 1756 0 discriminator 2
 2784 0058 3046     		mov	r0, r6
 2785 005a FFF7FEFF 		bl	HAL_Delay
 2786              	.LVL273:
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2787              		.loc 1 1757 0 discriminator 2
 2788 005e 2B68     		ldr	r3, [r5]
 2789 0060 43F80780 		str	r8, [r3, r7]
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2790              		.loc 1 1760 0 discriminator 2
 2791 0064 2A68     		ldr	r2, [r5]
 2792 0066 636A     		ldr	r3, [r4, #36]
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for
 2793              		.loc 1 1761 0 discriminator 2
 2794 0068 A16A     		ldr	r1, [r4, #40]
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2795              		.loc 1 1760 0 discriminator 2
 2796 006a 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccoFuW87.s 			page 98


1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->TxDMABurstLength |
 2797              		.loc 1 1762 0 discriminator 2
 2798 006c E16A     		ldr	r1, [r4, #44]
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for
 2799              		.loc 1 1761 0 discriminator 2
 2800 006e 0B43     		orrs	r3, r3, r1
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->EnhancedDescriptorFormat |
 2801              		.loc 1 1763 0 discriminator 2
 2802 0070 216B     		ldr	r1, [r4, #48]
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->TxDMABurstLength |
 2803              		.loc 1 1762 0 discriminator 2
 2804 0072 0B43     		orrs	r3, r3, r1
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          (dmaconf->DescriptorSkipLength << 2) |
 2805              		.loc 1 1764 0 discriminator 2
 2806 0074 616B     		ldr	r1, [r4, #52]
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->EnhancedDescriptorFormat |
 2807              		.loc 1 1763 0 discriminator 2
 2808 0076 0B43     		orrs	r3, r3, r1
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->DMAArbitration | 
 2809              		.loc 1 1765 0 discriminator 2
 2810 0078 A16B     		ldr	r1, [r4, #56]
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          (dmaconf->DescriptorSkipLength << 2) |
 2811              		.loc 1 1764 0 discriminator 2
 2812 007a 43EA8103 		orr	r3, r3, r1, lsl #2
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and 
 2813              		.loc 1 1766 0 discriminator 2
 2814 007e E16B     		ldr	r1, [r4, #60]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->DMAArbitration | 
 2815              		.loc 1 1765 0 discriminator 2
 2816 0080 0B43     		orrs	r3, r3, r1
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****                                          dmaconf->FixedBurst |
 2817              		.loc 1 1760 0 discriminator 2
 2818 0082 43F40003 		orr	r3, r3, #8388608
 2819 0086 02F58052 		add	r2, r2, #4096
 2820 008a 1360     		str	r3, [r2]
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 2821              		.loc 1 1771 0 discriminator 2
 2822 008c 2B68     		ldr	r3, [r5]
 2823 008e 03F58053 		add	r3, r3, #4096
 2824 0092 1C68     		ldr	r4, [r3]
 2825              	.LVL274:
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    (heth->Instance)->DMABMR = tmpreg;
 2826              		.loc 1 1772 0 discriminator 2
 2827 0094 3046     		mov	r0, r6
 2828 0096 FFF7FEFF 		bl	HAL_Delay
 2829              	.LVL275:
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2830              		.loc 1 1773 0 discriminator 2
 2831 009a 2B68     		ldr	r3, [r5]
 2832 009c 03F58053 		add	r3, r3, #4096
 2833 00a0 1C60     		str	r4, [r3]
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
 2834              		.loc 1 1776 0 discriminator 2
 2835 00a2 85F84460 		strb	r6, [r5, #68]
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****    
 2836              		.loc 1 1779 0 discriminator 2
 2837 00a6 0020     		movs	r0, #0
ARM GAS  /tmp/ccoFuW87.s 			page 99


 2838 00a8 85F84500 		strb	r0, [r5, #69]
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2839              		.loc 1 1782 0 discriminator 2
 2840 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2841              	.LVL276:
 2842              	.L192:
 2843              		.align	2
 2844              	.L191:
 2845 00b0 233FDEF8 		.word	-119652573
 2846              		.cfi_endproc
 2847              	.LFE159:
 2849              		.section	.text.HAL_ETH_GetState,"ax",%progbits
 2850              		.align	1
 2851              		.global	HAL_ETH_GetState
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu fpv5-d16
 2857              	HAL_ETH_GetState:
 2858              	.LFB160:
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c ****   /* Return ETH state */
 2859              		.loc 1 1814 0
 2860              		.cfi_startproc
 2861              		@ args = 0, pretend = 0, frame = 0
 2862              		@ frame_needed = 0, uses_anonymous_args = 0
 2863              		@ link register save eliminated.
 2864              	.LVL277:
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** }
 2865              		.loc 1 1816 0
 2866 0000 90F84400 		ldrb	r0, [r0, #68]	@ zero_extendqisi2
 2867              	.LVL278:
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth.c **** 
 2868              		.loc 1 1817 0
 2869 0004 7047     		bx	lr
 2870              		.cfi_endproc
 2871              	.LFE160:
 2873              		.text
 2874              	.Letext0:
 2875              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2876              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2877              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2878              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 2879              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 2880              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2881              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2882              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 2883              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 2884              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
ARM GAS  /tmp/ccoFuW87.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_eth.c
     /tmp/ccoFuW87.s:17     .text.ETH_MACAddressConfig:0000000000000000 $t
     /tmp/ccoFuW87.s:23     .text.ETH_MACAddressConfig:0000000000000000 ETH_MACAddressConfig
     /tmp/ccoFuW87.s:60     .text.ETH_MACAddressConfig:0000000000000028 $d
     /tmp/ccoFuW87.s:66     .text.ETH_DMATransmissionEnable:0000000000000000 $t
     /tmp/ccoFuW87.s:72     .text.ETH_DMATransmissionEnable:0000000000000000 ETH_DMATransmissionEnable
     /tmp/ccoFuW87.s:91     .text.ETH_DMATransmissionDisable:0000000000000000 $t
     /tmp/ccoFuW87.s:97     .text.ETH_DMATransmissionDisable:0000000000000000 ETH_DMATransmissionDisable
     /tmp/ccoFuW87.s:116    .text.ETH_DMAReceptionEnable:0000000000000000 $t
     /tmp/ccoFuW87.s:122    .text.ETH_DMAReceptionEnable:0000000000000000 ETH_DMAReceptionEnable
     /tmp/ccoFuW87.s:141    .text.ETH_DMAReceptionDisable:0000000000000000 $t
     /tmp/ccoFuW87.s:147    .text.ETH_DMAReceptionDisable:0000000000000000 ETH_DMAReceptionDisable
     /tmp/ccoFuW87.s:166    .text.ETH_MACDMAConfig:0000000000000000 $t
     /tmp/ccoFuW87.s:172    .text.ETH_MACDMAConfig:0000000000000000 ETH_MACDMAConfig
     /tmp/ccoFuW87.s:396    .text.ETH_MACDMAConfig:0000000000000104 $d
     /tmp/ccoFuW87.s:405    .text.ETH_MACTransmissionEnable:0000000000000000 $t
     /tmp/ccoFuW87.s:411    .text.ETH_MACTransmissionEnable:0000000000000000 ETH_MACTransmissionEnable
     /tmp/ccoFuW87.s:458    .text.ETH_MACReceptionEnable:0000000000000000 $t
     /tmp/ccoFuW87.s:464    .text.ETH_MACReceptionEnable:0000000000000000 ETH_MACReceptionEnable
     /tmp/ccoFuW87.s:511    .text.ETH_FlushTransmitFIFO:0000000000000000 $t
     /tmp/ccoFuW87.s:517    .text.ETH_FlushTransmitFIFO:0000000000000000 ETH_FlushTransmitFIFO
     /tmp/ccoFuW87.s:566    .text.ETH_MACReceptionDisable:0000000000000000 $t
     /tmp/ccoFuW87.s:572    .text.ETH_MACReceptionDisable:0000000000000000 ETH_MACReceptionDisable
     /tmp/ccoFuW87.s:619    .text.ETH_MACTransmissionDisable:0000000000000000 $t
     /tmp/ccoFuW87.s:625    .text.ETH_MACTransmissionDisable:0000000000000000 ETH_MACTransmissionDisable
     /tmp/ccoFuW87.s:672    .text.HAL_ETH_DMATxDescListInit:0000000000000000 $t
     /tmp/ccoFuW87.s:679    .text.HAL_ETH_DMATxDescListInit:0000000000000000 HAL_ETH_DMATxDescListInit
     /tmp/ccoFuW87.s:790    .text.HAL_ETH_DMARxDescListInit:0000000000000000 $t
     /tmp/ccoFuW87.s:797    .text.HAL_ETH_DMARxDescListInit:0000000000000000 HAL_ETH_DMARxDescListInit
     /tmp/ccoFuW87.s:903    .text.HAL_ETH_MspInit:0000000000000000 $t
     /tmp/ccoFuW87.s:910    .text.HAL_ETH_MspInit:0000000000000000 HAL_ETH_MspInit
     /tmp/ccoFuW87.s:923    .text.HAL_ETH_MspDeInit:0000000000000000 $t
     /tmp/ccoFuW87.s:930    .text.HAL_ETH_MspDeInit:0000000000000000 HAL_ETH_MspDeInit
     /tmp/ccoFuW87.s:943    .text.HAL_ETH_DeInit:0000000000000000 $t
     /tmp/ccoFuW87.s:950    .text.HAL_ETH_DeInit:0000000000000000 HAL_ETH_DeInit
     /tmp/ccoFuW87.s:981    .text.HAL_ETH_TransmitFrame:0000000000000000 $t
     /tmp/ccoFuW87.s:988    .text.HAL_ETH_TransmitFrame:0000000000000000 HAL_ETH_TransmitFrame
     /tmp/ccoFuW87.s:1207   .text.HAL_ETH_TransmitFrame:000000000000011c $d
     /tmp/ccoFuW87.s:1213   .text.HAL_ETH_GetReceivedFrame:0000000000000000 $t
     /tmp/ccoFuW87.s:1220   .text.HAL_ETH_GetReceivedFrame:0000000000000000 HAL_ETH_GetReceivedFrame
     /tmp/ccoFuW87.s:1334   .text.HAL_ETH_GetReceivedFrame_IT:0000000000000000 $t
     /tmp/ccoFuW87.s:1341   .text.HAL_ETH_GetReceivedFrame_IT:0000000000000000 HAL_ETH_GetReceivedFrame_IT
     /tmp/ccoFuW87.s:1463   .text.HAL_ETH_TxCpltCallback:0000000000000000 $t
     /tmp/ccoFuW87.s:1470   .text.HAL_ETH_TxCpltCallback:0000000000000000 HAL_ETH_TxCpltCallback
     /tmp/ccoFuW87.s:1483   .text.HAL_ETH_RxCpltCallback:0000000000000000 $t
     /tmp/ccoFuW87.s:1490   .text.HAL_ETH_RxCpltCallback:0000000000000000 HAL_ETH_RxCpltCallback
     /tmp/ccoFuW87.s:1503   .text.HAL_ETH_ErrorCallback:0000000000000000 $t
     /tmp/ccoFuW87.s:1510   .text.HAL_ETH_ErrorCallback:0000000000000000 HAL_ETH_ErrorCallback
     /tmp/ccoFuW87.s:1523   .text.HAL_ETH_IRQHandler:0000000000000000 $t
     /tmp/ccoFuW87.s:1530   .text.HAL_ETH_IRQHandler:0000000000000000 HAL_ETH_IRQHandler
     /tmp/ccoFuW87.s:1624   .text.HAL_ETH_ReadPHYRegister:0000000000000000 $t
     /tmp/ccoFuW87.s:1631   .text.HAL_ETH_ReadPHYRegister:0000000000000000 HAL_ETH_ReadPHYRegister
     /tmp/ccoFuW87.s:1739   .text.HAL_ETH_WritePHYRegister:0000000000000000 $t
     /tmp/ccoFuW87.s:1746   .text.HAL_ETH_WritePHYRegister:0000000000000000 HAL_ETH_WritePHYRegister
     /tmp/ccoFuW87.s:1848   .text.HAL_ETH_Init:0000000000000000 $t
     /tmp/ccoFuW87.s:1855   .text.HAL_ETH_Init:0000000000000000 HAL_ETH_Init
ARM GAS  /tmp/ccoFuW87.s 			page 101


     /tmp/ccoFuW87.s:2242   .text.HAL_ETH_Init:000000000000022c $d
     /tmp/ccoFuW87.s:2256   .text.HAL_ETH_Start:0000000000000000 $t
     /tmp/ccoFuW87.s:2263   .text.HAL_ETH_Start:0000000000000000 HAL_ETH_Start
     /tmp/ccoFuW87.s:2324   .text.HAL_ETH_Stop:0000000000000000 $t
     /tmp/ccoFuW87.s:2331   .text.HAL_ETH_Stop:0000000000000000 HAL_ETH_Stop
     /tmp/ccoFuW87.s:2392   .text.HAL_ETH_ConfigMAC:0000000000000000 $t
     /tmp/ccoFuW87.s:2399   .text.HAL_ETH_ConfigMAC:0000000000000000 HAL_ETH_ConfigMAC
     /tmp/ccoFuW87.s:2682   .text.HAL_ETH_ConfigMAC:000000000000012c $d
     /tmp/ccoFuW87.s:2687   .text.HAL_ETH_ConfigDMA:0000000000000000 $t
     /tmp/ccoFuW87.s:2694   .text.HAL_ETH_ConfigDMA:0000000000000000 HAL_ETH_ConfigDMA
     /tmp/ccoFuW87.s:2845   .text.HAL_ETH_ConfigDMA:00000000000000b0 $d
     /tmp/ccoFuW87.s:2850   .text.HAL_ETH_GetState:0000000000000000 $t
     /tmp/ccoFuW87.s:2857   .text.HAL_ETH_GetState:0000000000000000 HAL_ETH_GetState
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_Delay
HAL_GetTick
HAL_RCC_GetHCLKFreq
