ARM GAS  /tmp/ccgR0vEp.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"netif.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.netif_do_set_netmask,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	netif_do_set_netmask:
  24              	.LFB165:
  25              		.file 1 "Middlewares/Third_Party/LwIP/src/core/netif.c"
   1:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
   2:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @file
   3:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * lwIP network interface abstraction
   4:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
   5:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @defgroup netif Network interface (NETIF)
   6:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup callbackstyle_api
   7:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
   8:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @defgroup netif_ip4 IPv4 address handling
   9:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
  10:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
  11:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @defgroup netif_ip6 IPv6 address handling
  12:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
  13:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
  14:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @defgroup netif_cd Client data handling
  15:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Store data (void*) on a netif for application usage.
  16:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @see @ref LWIP_NUM_NETIF_CLIENT_DATA
  17:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
  18:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
  19:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
  20:Middlewares/Third_Party/LwIP/src/core/netif.c **** /*
  21:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  22:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * All rights reserved.
  23:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
  24:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Redistribution and use in source and binary forms, with or without modification,
  25:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * are permitted provided that the following conditions are met:
  26:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
  27:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  28:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *    this list of conditions and the following disclaimer.
  29:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  30:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *    this list of conditions and the following disclaimer in the documentation
  31:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *    and/or other materials provided with the distribution.
  32:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * 3. The name of the author may not be used to endorse or promote products
  33:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *    derived from this software without specific prior written permission.
ARM GAS  /tmp/ccgR0vEp.s 			page 2


  34:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
  35:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  36:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  37:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  38:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  39:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  40:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  41:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  42:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  43:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  44:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * OF SUCH DAMAGE.
  45:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
  46:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * This file is part of the lwIP TCP/IP stack.
  47:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
  48:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Author: Adam Dunkels <adam@sics.se>
  49:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
  50:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
  51:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/opt.h"
  52:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
  53:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include <string.h> /* memset */
  54:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include <stdlib.h> /* atoi */
  55:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
  56:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/def.h"
  57:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/ip_addr.h"
  58:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/ip6_addr.h"
  59:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/netif.h"
  60:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/priv/tcp_priv.h"
  61:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/udp.h"
  62:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/priv/raw_priv.h"
  63:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/snmp.h"
  64:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/igmp.h"
  65:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/etharp.h"
  66:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/stats.h"
  67:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/sys.h"
  68:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/ip.h"
  69:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if ENABLE_LOOPBACK
  70:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
  71:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/tcpip.h"
  72:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
  73:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* ENABLE_LOOPBACK */
  74:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
  75:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "netif/ethernet.h"
  76:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
  77:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_AUTOIP
  78:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/autoip.h"
  79:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_AUTOIP */
  80:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_DHCP
  81:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/dhcp.h"
  82:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_DHCP */
  83:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_DHCP6
  84:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/dhcp6.h"
  85:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_DHCP6 */
  86:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_MLD
  87:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/mld6.h"
  88:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_MLD */
  89:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
  90:Middlewares/Third_Party/LwIP/src/core/netif.c **** #include "lwip/nd6.h"
ARM GAS  /tmp/ccgR0vEp.s 			page 3


  91:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
  92:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
  93:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
  94:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define NETIF_STATUS_CALLBACK(n) do{ if (n->status_callback) { (n->status_callback)(n); }}while(0)
  95:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else
  96:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define NETIF_STATUS_CALLBACK(n)
  97:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
  98:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
  99:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
 100:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define NETIF_LINK_CALLBACK(n) do{ if (n->link_callback) { (n->link_callback)(n); }}while(0)
 101:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else
 102:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define NETIF_LINK_CALLBACK(n)
 103:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
 104:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 105:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 106:Middlewares/Third_Party/LwIP/src/core/netif.c **** static netif_ext_callback_t *ext_callback;
 107:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 108:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 109:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if !LWIP_SINGLE_NETIF
 110:Middlewares/Third_Party/LwIP/src/core/netif.c **** struct netif *netif_list;
 111:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* !LWIP_SINGLE_NETIF */
 112:Middlewares/Third_Party/LwIP/src/core/netif.c **** struct netif *netif_default;
 113:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 114:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define netif_index_to_num(index)   ((index) - 1)
 115:Middlewares/Third_Party/LwIP/src/core/netif.c **** static u8_t netif_num;
 116:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 117:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 0
 118:Middlewares/Third_Party/LwIP/src/core/netif.c **** static u8_t netif_client_id;
 119:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 120:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 121:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define NETIF_REPORT_TYPE_IPV4  0x01
 122:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define NETIF_REPORT_TYPE_IPV6  0x02
 123:Middlewares/Third_Party/LwIP/src/core/netif.c **** static void netif_issue_reports(struct netif *netif, u8_t report_type);
 124:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 125:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 126:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t netif_null_output_ip6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr);
 127:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 128:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 129:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t netif_null_output_ip4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr);
 130:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 131:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 132:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
 133:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 134:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t netif_loop_output_ipv4(struct netif *netif, struct pbuf *p, const ip4_addr_t *addr);
 135:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 136:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 137:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t netif_loop_output_ipv6(struct netif *netif, struct pbuf *p, const ip6_addr_t *addr);
 138:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 139:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 140:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 141:Middlewares/Third_Party/LwIP/src/core/netif.c **** static struct netif loop_netif;
 142:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 143:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 144:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Initialize a lwip network interface structure for a loopback interface
 145:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 146:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the lwip network interface structure for this loopif
 147:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @return ERR_OK if the loopif is initialized
ARM GAS  /tmp/ccgR0vEp.s 			page 4


 148:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *         ERR_MEM if private data couldn't be allocated
 149:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 150:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t
 151:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_loopif_init(struct netif *netif)
 152:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 153:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_loopif_init: invalid netif", netif != NULL);
 154:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 155:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* initialize the snmp variables and counters inside the struct netif
 156:Middlewares/Third_Party/LwIP/src/core/netif.c ****    * ifSpeed: no assumption can be made!
 157:Middlewares/Third_Party/LwIP/src/core/netif.c ****    */
 158:Middlewares/Third_Party/LwIP/src/core/netif.c ****   MIB2_INIT_NETIF(netif, snmp_ifType_softwareLoopback, 0);
 159:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 160:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->name[0] = 'l';
 161:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->name[1] = 'o';
 162:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 163:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->output = netif_loop_output_ipv4;
 164:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 165:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 166:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->output_ip6 = netif_loop_output_ipv6;
 167:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 168:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_LOOPIF_MULTICAST
 169:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_set_flags(netif, NETIF_FLAG_IGMP);
 170:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 171:Middlewares/Third_Party/LwIP/src/core/netif.c ****   NETIF_SET_CHECKSUM_CTRL(netif, NETIF_CHECKSUM_DISABLE_ALL);
 172:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return ERR_OK;
 173:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 174:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
 175:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 176:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 177:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_init(void)
 178:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 179:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
 180:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 181:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define LOOPIF_ADDRINIT &loop_ipaddr, &loop_netmask, &loop_gw,
 182:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip4_addr_t loop_ipaddr, loop_netmask, loop_gw;
 183:Middlewares/Third_Party/LwIP/src/core/netif.c ****   IP4_ADDR(&loop_gw, 127, 0, 0, 1);
 184:Middlewares/Third_Party/LwIP/src/core/netif.c ****   IP4_ADDR(&loop_ipaddr, 127, 0, 0, 1);
 185:Middlewares/Third_Party/LwIP/src/core/netif.c ****   IP4_ADDR(&loop_netmask, 255, 0, 0, 0);
 186:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else /* LWIP_IPV4 */
 187:Middlewares/Third_Party/LwIP/src/core/netif.c **** #define LOOPIF_ADDRINIT
 188:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 189:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 190:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if NO_SYS
 191:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_add(&loop_netif, LOOPIF_ADDRINIT NULL, netif_loopif_init, ip_input);
 192:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else  /* NO_SYS */
 193:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_add(&loop_netif, LOOPIF_ADDRINIT NULL, netif_loopif_init, tcpip_input);
 194:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* NO_SYS */
 195:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 196:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 197:Middlewares/Third_Party/LwIP/src/core/netif.c ****   IP_ADDR6_HOST(loop_netif.ip6_addr, 0, 0, 0, 0x00000001UL);
 198:Middlewares/Third_Party/LwIP/src/core/netif.c ****   loop_netif.ip6_addr_state[0] = IP6_ADDR_VALID;
 199:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 200:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 201:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_set_link_up(&loop_netif);
 202:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_set_up(&loop_netif);
 203:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 204:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
ARM GAS  /tmp/ccgR0vEp.s 			page 5


 205:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 206:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 207:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 208:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup lwip_nosys
 209:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Forwards a received packet for input processing with
 210:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * ethernet_input() or ip_input() depending on netif flags.
 211:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Don't call directly, pass to netif_add() and call
 212:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * netif->input().
 213:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Only works if the netif driver correctly sets
 214:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * NETIF_FLAG_ETHARP and/or NETIF_FLAG_ETHERNET flag!
 215:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 216:Middlewares/Third_Party/LwIP/src/core/netif.c **** err_t
 217:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_input(struct pbuf *p, struct netif *inp)
 218:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 219:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 220:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 221:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid pbuf", p != NULL);
 222:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 223:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 224:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_ETHERNET
 225:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (inp->flags & (NETIF_FLAG_ETHARP | NETIF_FLAG_ETHERNET)) {
 226:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return ethernet_input(p, inp);
 227:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else
 228:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_ETHERNET */
 229:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return ip_input(p, inp);
 230:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 231:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 232:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 233:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 234:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Add a network interface to the list of lwIP netifs.
 235:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 236:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Same as @ref netif_add but without IPv4 addresses
 237:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 238:Middlewares/Third_Party/LwIP/src/core/netif.c **** struct netif *
 239:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_add_noaddr(struct netif *netif, void *state, netif_init_fn init, netif_input_fn input)
 240:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 241:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return netif_add(netif,
 242:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 243:Middlewares/Third_Party/LwIP/src/core/netif.c ****                    NULL, NULL, NULL,
 244:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 245:Middlewares/Third_Party/LwIP/src/core/netif.c ****                    state, init, input);
 246:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 247:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 248:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 249:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 250:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Add a network interface to the list of lwIP netifs.
 251:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 252:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif a pre-allocated netif structure
 253:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param ipaddr IP address for the new netif
 254:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netmask network mask for the new netif
 255:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param gw default gateway IP address for the new netif
 256:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param state opaque data passed to the new netif
 257:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param init callback function that initializes the interface
 258:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param input callback function that is called to pass
 259:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * ingress packets up in the protocol layer stack.\n
 260:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * It is recommended to use a function that passes the input directly
 261:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * to the stack (netif_input(), NO_SYS=1 mode) or via sending a
ARM GAS  /tmp/ccgR0vEp.s 			page 6


 262:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * message to TCPIP thread (tcpip_input(), NO_SYS=0 mode).\n
 263:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * These functions use netif flags NETIF_FLAG_ETHARP and NETIF_FLAG_ETHERNET
 264:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * to decide whether to forward to ethernet_input() or ip_input().
 265:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * In other words, the functions only work when the netif
 266:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * driver is implemented correctly!\n
 267:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Most members of struct netif should be be initialized by the
 268:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * netif init function = netif driver (init parameter of this function).\n
 269:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * IPv6: Don't forget to call netif_create_ip6_linklocal_address() after
 270:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * setting the MAC address in struct netif.hwaddr
 271:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * (IPv6 requires a link-local address).
 272:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 273:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @return netif, or NULL if failed.
 274:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 275:Middlewares/Third_Party/LwIP/src/core/netif.c **** struct netif *
 276:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_add(struct netif *netif,
 277:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 278:Middlewares/Third_Party/LwIP/src/core/netif.c ****           const ip4_addr_t *ipaddr, const ip4_addr_t *netmask, const ip4_addr_t *gw,
 279:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 280:Middlewares/Third_Party/LwIP/src/core/netif.c ****           void *state, netif_init_fn init, netif_input_fn input)
 281:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 282:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 283:Middlewares/Third_Party/LwIP/src/core/netif.c ****   s8_t i;
 284:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 285:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 286:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 287:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 288:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_SINGLE_NETIF
 289:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_default != NULL) {
 290:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 291:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return NULL;
 292:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 293:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 294:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 295:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: invalid netif", netif != NULL, return NULL);
 296:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 297:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 298:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 299:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (ipaddr == NULL) {
 300:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ipaddr = ip_2_ip4(IP4_ADDR_ANY);
 301:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 302:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netmask == NULL) {
 303:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netmask = ip_2_ip4(IP4_ADDR_ANY);
 304:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 305:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (gw == NULL) {
 306:Middlewares/Third_Party/LwIP/src/core/netif.c ****     gw = ip_2_ip4(IP4_ADDR_ANY);
 307:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 308:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 309:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* reset new interface configuration state */
 310:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->ip_addr);
 311:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->netmask);
 312:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->gw);
 313:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->output = netif_null_output_ip4;
 314:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 315:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 316:Middlewares/Third_Party/LwIP/src/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
 317:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_addr_set_zero_ip6(&netif->ip6_addr[i]);
 318:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->ip6_addr_state[i] = IP6_ADDR_INVALID;
ARM GAS  /tmp/ccgR0vEp.s 			page 7


 319:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_ADDRESS_LIFETIMES
 320:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->ip6_addr_valid_life[i] = IP6_ADDR_LIFE_STATIC;
 321:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->ip6_addr_pref_life[i] = IP6_ADDR_LIFE_STATIC;
 322:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_ADDRESS_LIFETIMES */
 323:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 324:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->output_ip6 = netif_null_output_ip6;
 325:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 326:Middlewares/Third_Party/LwIP/src/core/netif.c ****   NETIF_SET_CHECKSUM_CTRL(netif, NETIF_CHECKSUM_ENABLE_ALL);
 327:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->mtu = 0;
 328:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->flags = 0;
 329:Middlewares/Third_Party/LwIP/src/core/netif.c **** #ifdef netif_get_client_data
 330:Middlewares/Third_Party/LwIP/src/core/netif.c ****   memset(netif->client_data, 0, sizeof(netif->client_data));
 331:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NUM_NETIF_CLIENT_DATA */
 332:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 333:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_AUTOCONFIG
 334:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* IPv6 address autoconfiguration not enabled by default */
 335:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->ip6_autoconfig_enabled = 0;
 336:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_AUTOCONFIG */
 337:Middlewares/Third_Party/LwIP/src/core/netif.c ****   nd6_restart_netif(netif);
 338:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 339:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
 340:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->status_callback = NULL;
 341:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
 342:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
 343:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->link_callback = NULL;
 344:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
 345:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IGMP
 346:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->igmp_mac_filter = NULL;
 347:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IGMP */
 348:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6 && LWIP_IPV6_MLD
 349:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->mld_mac_filter = NULL;
 350:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 && LWIP_IPV6_MLD */
 351:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if ENABLE_LOOPBACK
 352:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->loop_first = NULL;
 353:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->loop_last = NULL;
 354:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* ENABLE_LOOPBACK */
 355:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 356:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* remember netif specific state information data */
 357:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->state = state;
 358:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->num = netif_num;
 359:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->input = input;
 360:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 361:Middlewares/Third_Party/LwIP/src/core/netif.c ****   NETIF_RESET_HINTS(netif);
 362:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS
 363:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->loop_cnt_current = 0;
 364:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS */
 365:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 366:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 367:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_set_addr(netif, ipaddr, netmask, gw);
 368:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 369:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 370:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* call user specified initialization function for netif */
 371:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (init(netif) != ERR_OK) {
 372:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return NULL;
 373:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 374:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES
 375:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Initialize the MTU for IPv6 to the one set by the netif driver.
ARM GAS  /tmp/ccgR0vEp.s 			page 8


 376:Middlewares/Third_Party/LwIP/src/core/netif.c ****      This can be updated later by RA. */
 377:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->mtu6 = netif->mtu;
 378:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES */
 379:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 380:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if !LWIP_SINGLE_NETIF
 381:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Assign a unique netif number in the range [0..254], so that (num+1) can
 382:Middlewares/Third_Party/LwIP/src/core/netif.c ****      serve as an interface index that fits in a u8_t.
 383:Middlewares/Third_Party/LwIP/src/core/netif.c ****      We assume that the new netif has not yet been added to the list here.
 384:Middlewares/Third_Party/LwIP/src/core/netif.c ****      This algorithm is O(n^2), but that should be OK for lwIP.
 385:Middlewares/Third_Party/LwIP/src/core/netif.c ****      */
 386:Middlewares/Third_Party/LwIP/src/core/netif.c ****   {
 387:Middlewares/Third_Party/LwIP/src/core/netif.c ****     struct netif *netif2;
 388:Middlewares/Third_Party/LwIP/src/core/netif.c ****     int num_netifs;
 389:Middlewares/Third_Party/LwIP/src/core/netif.c ****     do {
 390:Middlewares/Third_Party/LwIP/src/core/netif.c ****       if (netif->num == 255) {
 391:Middlewares/Third_Party/LwIP/src/core/netif.c ****         netif->num = 0;
 392:Middlewares/Third_Party/LwIP/src/core/netif.c ****       }
 393:Middlewares/Third_Party/LwIP/src/core/netif.c ****       num_netifs = 0;
 394:Middlewares/Third_Party/LwIP/src/core/netif.c ****       for (netif2 = netif_list; netif2 != NULL; netif2 = netif2->next) {
 395:Middlewares/Third_Party/LwIP/src/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 396:Middlewares/Third_Party/LwIP/src/core/netif.c ****         num_netifs++;
 397:Middlewares/Third_Party/LwIP/src/core/netif.c ****         LWIP_ASSERT("too many netifs, max. supported number is 255", num_netifs <= 255);
 398:Middlewares/Third_Party/LwIP/src/core/netif.c ****         if (netif2->num == netif->num) {
 399:Middlewares/Third_Party/LwIP/src/core/netif.c ****           netif->num++;
 400:Middlewares/Third_Party/LwIP/src/core/netif.c ****           break;
 401:Middlewares/Third_Party/LwIP/src/core/netif.c ****         }
 402:Middlewares/Third_Party/LwIP/src/core/netif.c ****       }
 403:Middlewares/Third_Party/LwIP/src/core/netif.c ****     } while (netif2 != NULL);
 404:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 405:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif->num == 254) {
 406:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_num = 0;
 407:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else {
 408:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_num = (u8_t)(netif->num + 1);
 409:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 410:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 411:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* add this netif to the list */
 412:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->next = netif_list;
 413:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_list = netif;
 414:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* "LWIP_SINGLE_NETIF */
 415:Middlewares/Third_Party/LwIP/src/core/netif.c ****   mib2_netif_added(netif);
 416:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 417:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IGMP
 418:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* start IGMP processing */
 419:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_IGMP) {
 420:Middlewares/Third_Party/LwIP/src/core/netif.c ****     igmp_start(netif);
 421:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 422:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IGMP */
 423:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 424:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: added interface %c%c IP",
 425:Middlewares/Third_Party/LwIP/src/core/netif.c ****                             netif->name[0], netif->name[1]));
 426:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 427:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" addr "));
 428:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, ipaddr);
 429:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" netmask "));
 430:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, netmask);
 431:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" gw "));
 432:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, gw);
ARM GAS  /tmp/ccgR0vEp.s 			page 9


 433:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 434:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("\n"));
 435:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 436:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_invoke_ext_callback(netif, LWIP_NSC_NETIF_ADDED, NULL);
 437:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 438:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return netif;
 439:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 440:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 441:Middlewares/Third_Party/LwIP/src/core/netif.c **** static void
 442:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_do_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)
 443:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 444:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_TCP
 445:Middlewares/Third_Party/LwIP/src/core/netif.c ****   tcp_netif_ip_addr_changed(old_addr, new_addr);
 446:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 447:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_UDP
 448:Middlewares/Third_Party/LwIP/src/core/netif.c ****   udp_netif_ip_addr_changed(old_addr, new_addr);
 449:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 450:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_RAW
 451:Middlewares/Third_Party/LwIP/src/core/netif.c ****   raw_netif_ip_addr_changed(old_addr, new_addr);
 452:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_RAW */
 453:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 454:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 455:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 456:Middlewares/Third_Party/LwIP/src/core/netif.c **** static int
 457:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_do_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr, ip_addr_t *old_addr)
 458:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 459:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", ipaddr != NULL);
 460:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 461:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 462:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* address is actually being changed? */
 463:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (ip4_addr_cmp(ipaddr, netif_ip4_addr(netif)) == 0) {
 464:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_addr_t new_addr;
 465:Middlewares/Third_Party/LwIP/src/core/netif.c ****     *ip_2_ip4(&new_addr) = *ipaddr;
 466:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 467:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 468:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_addr_copy(*old_addr, *netif_ip_addr4(netif));
 469:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 470:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_set_ipaddr: netif address being changed\n"));
 471:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_do_ip_addr_changed(old_addr, &new_addr);
 472:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 473:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mib2_remove_ip4(netif);
 474:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 475:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* set new IP address to netif */
 476:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->ip_addr), ipaddr);
 477:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 478:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mib2_add_ip4(netif);
 479:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 480:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 481:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4);
 482:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 483:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 484:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return 1; /* address changed */
 485:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 486:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return 0; /* address unchanged */
 487:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 488:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 489:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
ARM GAS  /tmp/ccgR0vEp.s 			page 10


 490:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_ip4
 491:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Change the IP address of a network interface
 492:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 493:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the network interface to change
 494:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param ipaddr the new IP address
 495:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 496:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change netmask and
 497:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * default gateway
 498:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 499:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 500:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr)
 501:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 502:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t old_addr;
 503:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 504:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_ipaddr: invalid netif", netif != NULL, return);
 505:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 506:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 507:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (ipaddr == NULL) {
 508:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 509:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 510:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 511:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 512:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 513:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
 514:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 515:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_ext_callback_args_t args;
 516:Middlewares/Third_Party/LwIP/src/core/netif.c ****     args.ipv4_changed.old_address = &old_addr;
 517:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_ADDRESS_CHANGED, &args);
 518:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 519:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 520:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 521:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 522:Middlewares/Third_Party/LwIP/src/core/netif.c **** static int
 523:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_do_set_netmask(struct netif *netif, const ip4_addr_t *netmask, ip_addr_t *old_nm)
 524:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
  26              		.loc 1 524 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 525:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* address is actually being changed? */
 526:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (ip4_addr_cmp(netmask, netif_ip4_netmask(netif)) == 0) {
  32              		.loc 1 526 0
  33 0000 0B68     		ldr	r3, [r1]
  34 0002 8268     		ldr	r2, [r0, #8]
  35              	.LVL1:
  36 0004 9342     		cmp	r3, r2
  37 0006 05D0     		beq	.L4
 527:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 528:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_ASSERT("invalid pointer", old_nm != NULL);
 529:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_addr_copy(*old_nm, *netif_ip_netmask4(netif));
 530:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else
 531:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_UNUSED_ARG(old_nm);
 532:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 533:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 534:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* set new netmask to netif */
ARM GAS  /tmp/ccgR0vEp.s 			page 11


 535:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->netmask), netmask);
  38              		.loc 1 535 0
  39 0008 11B1     		cbz	r1, .L6
  40              	.L3:
  41              		.loc 1 535 0 is_stmt 0 discriminator 4
  42 000a 8360     		str	r3, [r0, #8]
 536:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->netmask, IPADDR_TYPE_V4);
 537:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mib2_add_route_ip4(0, netif);
 538:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: netmask of interface %c%c s
 539:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 netif->name[0], netif->name[1],
 540:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ip4_addr1_16(netif_ip4_netmask(netif)),
 541:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ip4_addr2_16(netif_ip4_netmask(netif)),
 542:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ip4_addr3_16(netif_ip4_netmask(netif)),
 543:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ip4_addr4_16(netif_ip4_netmask(netif))));
 544:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return 1; /* netmask changed */
  43              		.loc 1 544 0 is_stmt 1 discriminator 4
  44 000c 0120     		movs	r0, #1
  45              	.LVL2:
  46 000e 7047     		bx	lr
  47              	.LVL3:
  48              	.L6:
 535:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->netmask, IPADDR_TYPE_V4);
  49              		.loc 1 535 0
  50 0010 0023     		movs	r3, #0
  51 0012 FAE7     		b	.L3
  52              	.L4:
 545:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 546:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return 0; /* netmask unchanged */
  53              		.loc 1 546 0
  54 0014 0020     		movs	r0, #0
  55              	.LVL4:
 547:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
  56              		.loc 1 547 0
  57 0016 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE165:
  61              		.section	.text.netif_do_set_gw,"ax",%progbits
  62              		.align	1
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv5-d16
  68              	netif_do_set_gw:
  69              	.LFB167:
 548:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 549:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 550:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_ip4
 551:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Change the netmask of a network interface
 552:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 553:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the network interface to change
 554:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netmask the new netmask
 555:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 556:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change ip address and
 557:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * default gateway
 558:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 559:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 560:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_netmask(struct netif *netif, const ip4_addr_t *netmask)
ARM GAS  /tmp/ccgR0vEp.s 			page 12


 561:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 562:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 563:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t old_nm_val;
 564:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t *old_nm = &old_nm_val;
 565:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else
 566:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t *old_nm = NULL;
 567:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 568:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 569:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 570:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_netmask: invalid netif", netif != NULL, return);
 571:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 572:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 573:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netmask == NULL) {
 574:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 575:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 576:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 577:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_do_set_netmask(netif, netmask, old_nm)) {
 578:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 579:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_ext_callback_args_t args;
 580:Middlewares/Third_Party/LwIP/src/core/netif.c ****     args.ipv4_changed.old_netmask = old_nm;
 581:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_NETMASK_CHANGED, &args);
 582:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 583:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 584:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 585:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 586:Middlewares/Third_Party/LwIP/src/core/netif.c **** static int
 587:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_do_set_gw(struct netif *netif, const ip4_addr_t *gw, ip_addr_t *old_gw)
 588:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
  70              		.loc 1 588 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.LVL5:
 589:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* address is actually being changed? */
 590:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (ip4_addr_cmp(gw, netif_ip4_gw(netif)) == 0) {
  76              		.loc 1 590 0
  77 0000 0B68     		ldr	r3, [r1]
  78 0002 C268     		ldr	r2, [r0, #12]
  79              	.LVL6:
  80 0004 9342     		cmp	r3, r2
  81 0006 05D0     		beq	.L10
 591:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 592:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_ASSERT("invalid pointer", old_gw != NULL);
 593:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_addr_copy(*old_gw, *netif_ip_gw4(netif));
 594:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else
 595:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_UNUSED_ARG(old_gw);
 596:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 597:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 598:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->gw), gw);
  82              		.loc 1 598 0
  83 0008 11B1     		cbz	r1, .L12
  84              	.L9:
  85              		.loc 1 598 0 is_stmt 0 discriminator 4
  86 000a C360     		str	r3, [r0, #12]
 599:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->gw, IPADDR_TYPE_V4);
 600:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: GW address of interface %c%
ARM GAS  /tmp/ccgR0vEp.s 			page 13


 601:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 netif->name[0], netif->name[1],
 602:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ip4_addr1_16(netif_ip4_gw(netif)),
 603:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ip4_addr2_16(netif_ip4_gw(netif)),
 604:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ip4_addr3_16(netif_ip4_gw(netif)),
 605:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ip4_addr4_16(netif_ip4_gw(netif))));
 606:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return 1; /* gateway changed */
  87              		.loc 1 606 0 is_stmt 1 discriminator 4
  88 000c 0120     		movs	r0, #1
  89              	.LVL7:
  90 000e 7047     		bx	lr
  91              	.LVL8:
  92              	.L12:
 598:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->gw, IPADDR_TYPE_V4);
  93              		.loc 1 598 0
  94 0010 0023     		movs	r3, #0
  95 0012 FAE7     		b	.L9
  96              	.L10:
 607:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 608:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return 0; /* gateway unchanged */
  97              		.loc 1 608 0
  98 0014 0020     		movs	r0, #0
  99              	.LVL9:
 609:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 100              		.loc 1 609 0
 101 0016 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE167:
 105              		.section	.text.netif_null_output_ip4,"ax",%progbits
 106              		.align	1
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv5-d16
 112              	netif_null_output_ip4:
 113              	.LFB178:
 610:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 611:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 612:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_ip4
 613:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Change the default gateway for a network interface
 614:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 615:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the network interface to change
 616:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param gw the new default gateway
 617:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 618:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change ip address and netmask
 619:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 620:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 621:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_gw(struct netif *netif, const ip4_addr_t *gw)
 622:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 623:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 624:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t old_gw_val;
 625:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t *old_gw = &old_gw_val;
 626:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else
 627:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t *old_gw = NULL;
 628:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 629:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 630:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 631:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_gw: invalid netif", netif != NULL, return);
ARM GAS  /tmp/ccgR0vEp.s 			page 14


 632:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 633:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 634:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (gw == NULL) {
 635:Middlewares/Third_Party/LwIP/src/core/netif.c ****     gw = IP4_ADDR_ANY4;
 636:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 637:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 638:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_do_set_gw(netif, gw, old_gw)) {
 639:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 640:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_ext_callback_args_t args;
 641:Middlewares/Third_Party/LwIP/src/core/netif.c ****     args.ipv4_changed.old_gw = old_gw;
 642:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_GATEWAY_CHANGED, &args);
 643:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 644:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 645:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 646:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 647:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 648:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_ip4
 649:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Change IP address configuration for a network interface (including netmask
 650:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * and default gateway).
 651:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 652:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the network interface to change
 653:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param ipaddr the new IP address
 654:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netmask the new netmask
 655:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param gw the new default gateway
 656:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 657:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 658:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_addr(struct netif *netif, const ip4_addr_t *ipaddr, const ip4_addr_t *netmask,
 659:Middlewares/Third_Party/LwIP/src/core/netif.c ****                const ip4_addr_t *gw)
 660:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 661:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 662:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_nsc_reason_t change_reason = LWIP_NSC_NONE;
 663:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_ext_callback_args_t cb_args;
 664:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t old_nm_val;
 665:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t old_gw_val;
 666:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t *old_nm = &old_nm_val;
 667:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t *old_gw = &old_gw_val;
 668:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else
 669:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t *old_nm = NULL;
 670:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t *old_gw = NULL;
 671:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 672:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t old_addr;
 673:Middlewares/Third_Party/LwIP/src/core/netif.c ****   int remove;
 674:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 675:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 676:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 677:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 678:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (ipaddr == NULL) {
 679:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 680:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 681:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netmask == NULL) {
 682:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 683:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 684:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (gw == NULL) {
 685:Middlewares/Third_Party/LwIP/src/core/netif.c ****     gw = IP4_ADDR_ANY4;
 686:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 687:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 688:Middlewares/Third_Party/LwIP/src/core/netif.c ****   remove = ip4_addr_isany(ipaddr);
ARM GAS  /tmp/ccgR0vEp.s 			page 15


 689:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (remove) {
 690:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* when removing an address, we have to remove it *before* changing netmask/gw
 691:Middlewares/Third_Party/LwIP/src/core/netif.c ****        to ensure that tcp RST segment can be sent correctly */
 692:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
 693:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 694:Middlewares/Third_Party/LwIP/src/core/netif.c ****       change_reason |= LWIP_NSC_IPV4_ADDRESS_CHANGED;
 695:Middlewares/Third_Party/LwIP/src/core/netif.c ****       cb_args.ipv4_changed.old_address = &old_addr;
 696:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 697:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 698:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 699:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_do_set_netmask(netif, netmask, old_nm)) {
 700:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 701:Middlewares/Third_Party/LwIP/src/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_NETMASK_CHANGED;
 702:Middlewares/Third_Party/LwIP/src/core/netif.c ****     cb_args.ipv4_changed.old_netmask = old_nm;
 703:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 704:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 705:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_do_set_gw(netif, gw, old_gw)) {
 706:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 707:Middlewares/Third_Party/LwIP/src/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_GATEWAY_CHANGED;
 708:Middlewares/Third_Party/LwIP/src/core/netif.c ****     cb_args.ipv4_changed.old_gw = old_gw;
 709:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 710:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 711:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (!remove) {
 712:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* set ipaddr last to ensure netmask/gw have been set when status callback is called */
 713:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
 714:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 715:Middlewares/Third_Party/LwIP/src/core/netif.c ****       change_reason |= LWIP_NSC_IPV4_ADDRESS_CHANGED;
 716:Middlewares/Third_Party/LwIP/src/core/netif.c ****       cb_args.ipv4_changed.old_address = &old_addr;
 717:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 718:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 719:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 720:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 721:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 722:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (change_reason != LWIP_NSC_NONE) {
 723:Middlewares/Third_Party/LwIP/src/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_SETTINGS_CHANGED;
 724:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_invoke_ext_callback(netif, change_reason, &cb_args);
 725:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 726:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 727:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 728:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 729:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 730:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 731:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 732:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Remove a network interface from the list of lwIP netifs.
 733:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 734:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the network interface to remove
 735:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 736:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 737:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_remove(struct netif *netif)
 738:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 739:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 740:Middlewares/Third_Party/LwIP/src/core/netif.c ****   int i;
 741:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 742:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 743:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 744:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 745:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif == NULL) {
ARM GAS  /tmp/ccgR0vEp.s 			page 16


 746:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return;
 747:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 748:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 749:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_invoke_ext_callback(netif, LWIP_NSC_NETIF_REMOVED, NULL);
 750:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 751:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 752:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (!ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 753:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_do_ip_addr_changed(netif_ip_addr4(netif), NULL);
 754:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 755:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 756:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IGMP
 757:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* stop IGMP processing */
 758:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_IGMP) {
 759:Middlewares/Third_Party/LwIP/src/core/netif.c ****     igmp_stop(netif);
 760:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 761:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IGMP */
 762:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 763:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 764:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 765:Middlewares/Third_Party/LwIP/src/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
 766:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, i))) {
 767:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, i), NULL);
 768:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 769:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 770:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_MLD
 771:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* stop MLD processing */
 772:Middlewares/Third_Party/LwIP/src/core/netif.c ****   mld6_stop(netif);
 773:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_MLD */
 774:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 775:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_is_up(netif)) {
 776:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 777:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_set_down(netif);
 778:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 779:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 780:Middlewares/Third_Party/LwIP/src/core/netif.c ****   mib2_remove_ip4(netif);
 781:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 782:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* this netif is default? */
 783:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_default == netif) {
 784:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* reset default netif */
 785:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_set_default(NULL);
 786:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 787:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if !LWIP_SINGLE_NETIF
 788:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /*  is it the first netif? */
 789:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif_list == netif) {
 790:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_list = netif->next;
 791:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else {
 792:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /*  look for netif further down the list */
 793:Middlewares/Third_Party/LwIP/src/core/netif.c ****     struct netif *tmp_netif;
 794:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_FOREACH(tmp_netif) {
 795:Middlewares/Third_Party/LwIP/src/core/netif.c ****       if (tmp_netif->next == netif) {
 796:Middlewares/Third_Party/LwIP/src/core/netif.c ****         tmp_netif->next = netif->next;
 797:Middlewares/Third_Party/LwIP/src/core/netif.c ****         break;
 798:Middlewares/Third_Party/LwIP/src/core/netif.c ****       }
 799:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 800:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (tmp_netif == NULL) {
 801:Middlewares/Third_Party/LwIP/src/core/netif.c ****       return; /* netif is not on the list */
 802:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
ARM GAS  /tmp/ccgR0vEp.s 			page 17


 803:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 804:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* !LWIP_SINGLE_NETIF */
 805:Middlewares/Third_Party/LwIP/src/core/netif.c ****   mib2_netif_removed(netif);
 806:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 807:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif->remove_callback) {
 808:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->remove_callback(netif);
 809:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 810:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_REMOVE_CALLBACK */
 811:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF( NETIF_DEBUG, ("netif_remove: removed netif\n") );
 812:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 813:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 814:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 815:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 816:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Set a network interface as the default network interface
 817:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * (used to output all packets for which no specific route is found)
 818:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
 819:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the default network interface
 820:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 821:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 822:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_default(struct netif *netif)
 823:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 824:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 825:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 826:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif == NULL) {
 827:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* remove default route */
 828:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mib2_remove_route_ip4(1, netif);
 829:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else {
 830:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* install default route */
 831:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mib2_add_route_ip4(1, netif);
 832:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 833:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_default = netif;
 834:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 835:Middlewares/Third_Party/LwIP/src/core/netif.c ****                             netif ? netif->name[0] : '\'', netif ? netif->name[1] : '\''));
 836:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 837:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 838:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 839:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 840:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Bring an interface up, available for processing
 841:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * traffic.
 842:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 843:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 844:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_up(struct netif *netif)
 845:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 846:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 847:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 848:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_up: invalid netif", netif != NULL, return);
 849:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 850:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_UP)) {
 851:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_UP);
 852:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 853:Middlewares/Third_Party/LwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 854:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 855:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 856:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 857:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 858:Middlewares/Third_Party/LwIP/src/core/netif.c ****     {
 859:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
ARM GAS  /tmp/ccgR0vEp.s 			page 18


 860:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.status_changed.state = 1;
 861:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_STATUS_CHANGED, &args);
 862:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 863:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 864:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 865:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
 866:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 867:Middlewares/Third_Party/LwIP/src/core/netif.c ****     nd6_restart_netif(netif);
 868:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 869:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 870:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 871:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 872:Middlewares/Third_Party/LwIP/src/core/netif.c **** /** Send ARP/IGMP/MLD/RS events, e.g. on link-up/netif-up or addr-change
 873:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 874:Middlewares/Third_Party/LwIP/src/core/netif.c **** static void
 875:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_issue_reports(struct netif *netif, u8_t report_type)
 876:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 877:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_issue_reports: invalid netif", netif != NULL);
 878:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 879:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Only send reports when both link and admin states are up */
 880:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_LINK_UP) ||
 881:Middlewares/Third_Party/LwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 882:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return;
 883:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 884:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 885:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 886:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if ((report_type & NETIF_REPORT_TYPE_IPV4) &&
 887:Middlewares/Third_Party/LwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 888:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_ARP
 889:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* For Ethernet network interfaces, we would like to send a "gratuitous ARP" */
 890:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (netif->flags & (NETIF_FLAG_ETHARP)) {
 891:Middlewares/Third_Party/LwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 892:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 893:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_ARP */
 894:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 895:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IGMP
 896:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* resend IGMP memberships */
 897:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_IGMP) {
 898:Middlewares/Third_Party/LwIP/src/core/netif.c ****       igmp_report_groups(netif);
 899:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 900:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IGMP */
 901:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 902:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 903:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 904:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 905:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (report_type & NETIF_REPORT_TYPE_IPV6) {
 906:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_MLD
 907:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* send mld memberships */
 908:Middlewares/Third_Party/LwIP/src/core/netif.c ****     mld6_report_groups(netif);
 909:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_MLD */
 910:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 911:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 912:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 913:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 914:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 915:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 916:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Bring an interface down, disabling any traffic processing.
ARM GAS  /tmp/ccgR0vEp.s 			page 19


 917:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 918:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 919:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_down(struct netif *netif)
 920:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 921:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 922:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 923:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_down: invalid netif", netif != NULL, return);
 924:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 925:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_UP) {
 926:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 927:Middlewares/Third_Party/LwIP/src/core/netif.c ****     {
 928:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
 929:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.status_changed.state = 0;
 930:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_STATUS_CHANGED, &args);
 931:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 932:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
 933:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 934:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_UP);
 935:Middlewares/Third_Party/LwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 936:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 937:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4 && LWIP_ARP
 938:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_ETHARP) {
 939:Middlewares/Third_Party/LwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 940:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 941:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 && LWIP_ARP */
 942:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 943:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 944:Middlewares/Third_Party/LwIP/src/core/netif.c ****     nd6_cleanup_netif(netif);
 945:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
 946:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 947:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 948:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 949:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 950:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 951:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
 952:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 953:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 954:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Set callback to be called when interface is brought up/down or address is changed while up
 955:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 956:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 957:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_status_callback(struct netif *netif, netif_status_callback_fn status_callback)
 958:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 959:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 960:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 961:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif) {
 962:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->status_callback = status_callback;
 963:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 964:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 965:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
 966:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 967:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 968:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 969:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 970:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Set callback to be called when the interface has been removed
 971:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 972:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 973:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_remove_callback(struct netif *netif, netif_status_callback_fn remove_callback)
ARM GAS  /tmp/ccgR0vEp.s 			page 20


 974:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 975:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 976:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 977:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif) {
 978:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->remove_callback = remove_callback;
 979:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 980:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 981:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_REMOVE_CALLBACK */
 982:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 983:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
 984:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
 985:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Called by a driver when its link goes up
 986:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
 987:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
 988:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_link_up(struct netif *netif)
 989:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 990:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 991:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 992:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_link_up: invalid netif", netif != NULL, return);
 993:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 994:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_LINK_UP)) {
 995:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_LINK_UP);
 996:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 997:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_DHCP
 998:Middlewares/Third_Party/LwIP/src/core/netif.c ****     dhcp_network_changed(netif);
 999:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_DHCP */
1000:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1001:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_AUTOIP
1002:Middlewares/Third_Party/LwIP/src/core/netif.c ****     autoip_network_changed(netif);
1003:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_AUTOIP */
1004:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1005:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
1006:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
1007:Middlewares/Third_Party/LwIP/src/core/netif.c ****     nd6_restart_netif(netif);
1008:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
1009:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1010:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
1011:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1012:Middlewares/Third_Party/LwIP/src/core/netif.c ****     {
1013:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
1014:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.link_changed.state = 1;
1015:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_LINK_CHANGED, &args);
1016:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1017:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
1018:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1019:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1020:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1021:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1022:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
1023:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Called by a driver when its link goes down
1024:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1025:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
1026:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_link_down(struct netif *netif)
1027:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1028:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1029:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1030:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_set_link_down: invalid netif", netif != NULL, return);
ARM GAS  /tmp/ccgR0vEp.s 			page 21


1031:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1032:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_LINK_UP) {
1033:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_LINK_UP);
1034:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
1035:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1036:Middlewares/Third_Party/LwIP/src/core/netif.c ****     {
1037:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
1038:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.link_changed.state = 0;
1039:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_LINK_CHANGED, &args);
1040:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1041:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
1042:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1043:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1044:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1045:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
1046:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1047:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
1048:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Set callback to be called when link is brought up/down
1049:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1050:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
1051:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_set_link_callback(struct netif *netif, netif_status_callback_fn link_callback)
1052:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1053:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1054:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1055:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif) {
1056:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->link_callback = link_callback;
1057:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1058:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1059:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
1060:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1061:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if ENABLE_LOOPBACK
1062:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1063:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
1064:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Send an IP packet to be received on the same netif (loopif-like).
1065:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * The pbuf is simply copied and handed back to netif->input.
1066:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * In multithreaded mode, this is done directly since netif->input must put
1067:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * the packet on a queue.
1068:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * In callback mode, the packet is put on an internal queue and is fed to
1069:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * netif->input by netif_poll().
1070:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1071:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the lwip network interface structure
1072:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param p the (IP) packet to 'send'
1073:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @return ERR_OK if the packet has been sent
1074:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *         ERR_MEM if the pbuf used to copy the packet couldn't be allocated
1075:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1076:Middlewares/Third_Party/LwIP/src/core/netif.c **** err_t
1077:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_loop_output(struct netif *netif, struct pbuf *p)
1078:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1079:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct pbuf *r;
1080:Middlewares/Third_Party/LwIP/src/core/netif.c ****   err_t err;
1081:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct pbuf *last;
1082:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1083:Middlewares/Third_Party/LwIP/src/core/netif.c ****   u16_t clen = 0;
1084:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1085:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* If we have a loopif, SNMP counters are adjusted for it,
1086:Middlewares/Third_Party/LwIP/src/core/netif.c ****    * if not they are adjusted for 'netif'. */
1087:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if MIB2_STATS
ARM GAS  /tmp/ccgR0vEp.s 			page 22


1088:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
1089:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *stats_if = &loop_netif;
1090:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else /* LWIP_HAVE_LOOPIF */
1091:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *stats_if = netif;
1092:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1093:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* MIB2_STATS */
1094:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1095:Middlewares/Third_Party/LwIP/src/core/netif.c ****   u8_t schedule_poll = 0;
1096:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1097:Middlewares/Third_Party/LwIP/src/core/netif.c ****   SYS_ARCH_DECL_PROTECT(lev);
1098:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1099:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_loop_output: invalid netif", netif != NULL);
1100:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_loop_output: invalid pbuf", p != NULL);
1101:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1102:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Allocate a new pbuf */
1103:Middlewares/Third_Party/LwIP/src/core/netif.c ****   r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);
1104:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (r == NULL) {
1105:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LINK_STATS_INC(link.memerr);
1106:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LINK_STATS_INC(link.drop);
1107:Middlewares/Third_Party/LwIP/src/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1108:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return ERR_MEM;
1109:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1110:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1111:Middlewares/Third_Party/LwIP/src/core/netif.c ****   clen = pbuf_clen(r);
1112:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* check for overflow or too many pbuf on queue */
1113:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (((netif->loop_cnt_current + clen) < netif->loop_cnt_current) ||
1114:Middlewares/Third_Party/LwIP/src/core/netif.c ****       ((netif->loop_cnt_current + clen) > LWIP_MIN(LWIP_LOOPBACK_MAX_PBUFS, 0xFFFF))) {
1115:Middlewares/Third_Party/LwIP/src/core/netif.c ****     pbuf_free(r);
1116:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LINK_STATS_INC(link.memerr);
1117:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LINK_STATS_INC(link.drop);
1118:Middlewares/Third_Party/LwIP/src/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1119:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return ERR_MEM;
1120:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1121:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->loop_cnt_current = (u16_t)(netif->loop_cnt_current + clen);
1122:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1123:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1124:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Copy the whole pbuf queue p into the single pbuf r */
1125:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if ((err = pbuf_copy(r, p)) != ERR_OK) {
1126:Middlewares/Third_Party/LwIP/src/core/netif.c ****     pbuf_free(r);
1127:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LINK_STATS_INC(link.memerr);
1128:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LINK_STATS_INC(link.drop);
1129:Middlewares/Third_Party/LwIP/src/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1130:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return err;
1131:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1132:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1133:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Put the packet on a linked list which gets emptied through calling
1134:Middlewares/Third_Party/LwIP/src/core/netif.c ****      netif_poll(). */
1135:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1136:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* let last point to the last pbuf in chain r */
1137:Middlewares/Third_Party/LwIP/src/core/netif.c ****   for (last = r; last->next != NULL; last = last->next) {
1138:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* nothing to do here, just get to the last pbuf */
1139:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1140:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1141:Middlewares/Third_Party/LwIP/src/core/netif.c ****   SYS_ARCH_PROTECT(lev);
1142:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif->loop_first != NULL) {
1143:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_ASSERT("if first != NULL, last must also be != NULL", netif->loop_last != NULL);
1144:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->loop_last->next = r;
ARM GAS  /tmp/ccgR0vEp.s 			page 23


1145:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->loop_last = last;
1146:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else {
1147:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->loop_first = r;
1148:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->loop_last = last;
1149:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1150:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* No existing packets queued, schedule poll */
1151:Middlewares/Third_Party/LwIP/src/core/netif.c ****     schedule_poll = 1;
1152:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1153:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1154:Middlewares/Third_Party/LwIP/src/core/netif.c ****   SYS_ARCH_UNPROTECT(lev);
1155:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1156:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LINK_STATS_INC(link.xmit);
1157:Middlewares/Third_Party/LwIP/src/core/netif.c ****   MIB2_STATS_NETIF_ADD(stats_if, ifoutoctets, p->tot_len);
1158:Middlewares/Third_Party/LwIP/src/core/netif.c ****   MIB2_STATS_NETIF_INC(stats_if, ifoutucastpkts);
1159:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1160:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1161:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* For multithreading environment, schedule a call to netif_poll */
1162:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (schedule_poll) {
1163:Middlewares/Third_Party/LwIP/src/core/netif.c ****     tcpip_try_callback((tcpip_callback_fn)netif_poll, netif);
1164:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1165:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1166:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1167:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return ERR_OK;
1168:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1169:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1170:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
1171:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
1172:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t
1173:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_loop_output_ipv4(struct netif *netif, struct pbuf *p, const ip4_addr_t *addr)
1174:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1175:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(addr);
1176:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return netif_loop_output(netif, p);
1177:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1178:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
1179:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1180:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
1181:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t
1182:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_loop_output_ipv6(struct netif *netif, struct pbuf *p, const ip6_addr_t *addr)
1183:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1184:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(addr);
1185:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return netif_loop_output(netif, p);
1186:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1187:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
1188:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1189:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1190:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1191:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1192:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Call netif_poll() in the main loop of your application. This is to prevent
1193:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * reentering non-reentrant functions like tcp_input(). Packets passed to
1194:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * netif_loop_output() are put on a list that is passed to netif->input() by
1195:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * netif_poll().
1196:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1197:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
1198:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_poll(struct netif *netif)
1199:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1200:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* If we have a loopif, SNMP counters are adjusted for it,
1201:Middlewares/Third_Party/LwIP/src/core/netif.c ****    * if not they are adjusted for 'netif'. */
ARM GAS  /tmp/ccgR0vEp.s 			page 24


1202:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if MIB2_STATS
1203:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
1204:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *stats_if = &loop_netif;
1205:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else /* LWIP_HAVE_LOOPIF */
1206:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *stats_if = netif;
1207:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1208:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* MIB2_STATS */
1209:Middlewares/Third_Party/LwIP/src/core/netif.c ****   SYS_ARCH_DECL_PROTECT(lev);
1210:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1211:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_poll: invalid netif", netif != NULL);
1212:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1213:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Get a packet from the list. With SYS_LIGHTWEIGHT_PROT=1, this is protected */
1214:Middlewares/Third_Party/LwIP/src/core/netif.c ****   SYS_ARCH_PROTECT(lev);
1215:Middlewares/Third_Party/LwIP/src/core/netif.c ****   while (netif->loop_first != NULL) {
1216:Middlewares/Third_Party/LwIP/src/core/netif.c ****     struct pbuf *in, *in_end;
1217:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1218:Middlewares/Third_Party/LwIP/src/core/netif.c ****     u8_t clen = 1;
1219:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1220:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1221:Middlewares/Third_Party/LwIP/src/core/netif.c ****     in = in_end = netif->loop_first;
1222:Middlewares/Third_Party/LwIP/src/core/netif.c ****     while (in_end->len != in_end->tot_len) {
1223:Middlewares/Third_Party/LwIP/src/core/netif.c ****       LWIP_ASSERT("bogus pbuf: len != tot_len but next == NULL!", in_end->next != NULL);
1224:Middlewares/Third_Party/LwIP/src/core/netif.c ****       in_end = in_end->next;
1225:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1226:Middlewares/Third_Party/LwIP/src/core/netif.c ****       clen++;
1227:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1228:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1229:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1230:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* adjust the number of pbufs on queue */
1231:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_ASSERT("netif->loop_cnt_current underflow",
1232:Middlewares/Third_Party/LwIP/src/core/netif.c ****                 ((netif->loop_cnt_current - clen) < netif->loop_cnt_current));
1233:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->loop_cnt_current = (u16_t)(netif->loop_cnt_current - clen);
1234:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1235:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1236:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* 'in_end' now points to the last pbuf from 'in' */
1237:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (in_end == netif->loop_last) {
1238:Middlewares/Third_Party/LwIP/src/core/netif.c ****       /* this was the last pbuf in the list */
1239:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif->loop_first = netif->loop_last = NULL;
1240:Middlewares/Third_Party/LwIP/src/core/netif.c ****     } else {
1241:Middlewares/Third_Party/LwIP/src/core/netif.c ****       /* pop the pbuf off the list */
1242:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif->loop_first = in_end->next;
1243:Middlewares/Third_Party/LwIP/src/core/netif.c ****       LWIP_ASSERT("should not be null since first != last!", netif->loop_first != NULL);
1244:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1245:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* De-queue the pbuf from its successors on the 'loop_' list. */
1246:Middlewares/Third_Party/LwIP/src/core/netif.c ****     in_end->next = NULL;
1247:Middlewares/Third_Party/LwIP/src/core/netif.c ****     SYS_ARCH_UNPROTECT(lev);
1248:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1249:Middlewares/Third_Party/LwIP/src/core/netif.c ****     in->if_idx = netif_get_index(netif);
1250:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1251:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LINK_STATS_INC(link.recv);
1252:Middlewares/Third_Party/LwIP/src/core/netif.c ****     MIB2_STATS_NETIF_ADD(stats_if, ifinoctets, in->tot_len);
1253:Middlewares/Third_Party/LwIP/src/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifinucastpkts);
1254:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* loopback packets are always IP packets! */
1255:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (ip_input(in, netif) != ERR_OK) {
1256:Middlewares/Third_Party/LwIP/src/core/netif.c ****       pbuf_free(in);
1257:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1258:Middlewares/Third_Party/LwIP/src/core/netif.c ****     SYS_ARCH_PROTECT(lev);
ARM GAS  /tmp/ccgR0vEp.s 			page 25


1259:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1260:Middlewares/Third_Party/LwIP/src/core/netif.c ****   SYS_ARCH_UNPROTECT(lev);
1261:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1262:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1263:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if !LWIP_NETIF_LOOPBACK_MULTITHREADING
1264:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1265:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Calls netif_poll() for every netif on the netif_list.
1266:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1267:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
1268:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_poll_all(void)
1269:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1270:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *netif;
1271:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* loop through netifs */
1272:Middlewares/Third_Party/LwIP/src/core/netif.c ****   NETIF_FOREACH(netif) {
1273:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_poll(netif);
1274:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1275:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1276:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* !LWIP_NETIF_LOOPBACK_MULTITHREADING */
1277:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* ENABLE_LOOPBACK */
1278:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1279:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 0
1280:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1281:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_cd
1282:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Allocate an index to store data in client_data member of struct netif.
1283:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Returned value is an index in mentioned array.
1284:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @see LWIP_NUM_NETIF_CLIENT_DATA
1285:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1286:Middlewares/Third_Party/LwIP/src/core/netif.c **** u8_t
1287:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_alloc_client_data_id(void)
1288:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1289:Middlewares/Third_Party/LwIP/src/core/netif.c ****   u8_t result = netif_client_id;
1290:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_client_id++;
1291:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1292:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1293:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1294:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 256
1295:Middlewares/Third_Party/LwIP/src/core/netif.c **** #error LWIP_NUM_NETIF_CLIENT_DATA must be <= 256
1296:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
1297:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("Increase LWIP_NUM_NETIF_CLIENT_DATA in lwipopts.h", result < LWIP_NUM_NETIF_CLIENT_D
1298:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return (u8_t)(result + LWIP_NETIF_CLIENT_DATA_INDEX_MAX);
1299:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1300:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
1301:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1302:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
1303:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1304:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_ip6
1305:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Change an IPv6 address of a network interface
1306:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1307:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the network interface to change
1308:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param addr_idx index of the IPv6 address
1309:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param addr6 the new IPv6 address
1310:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1311:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @note call netif_ip6_addr_set_state() to set the address valid/temptative
1312:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1313:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
1314:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_ip6_addr_set(struct netif *netif, s8_t addr_idx, const ip6_addr_t *addr6)
1315:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
ARM GAS  /tmp/ccgR0vEp.s 			page 26


1316:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1317:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1318:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_ip6_addr_set: invalid netif", netif != NULL);
1319:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_ip6_addr_set: invalid addr6", addr6 != NULL);
1320:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1321:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_ip6_addr_set_parts(netif, addr_idx, addr6->addr[0], addr6->addr[1],
1322:Middlewares/Third_Party/LwIP/src/core/netif.c ****                            addr6->addr[2], addr6->addr[3]);
1323:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1324:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1325:Middlewares/Third_Party/LwIP/src/core/netif.c **** /*
1326:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Change an IPv6 address of a network interface (internal version taking 4 * u32_t)
1327:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1328:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the network interface to change
1329:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param addr_idx index of the IPv6 address
1330:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param i0 word0 of the new IPv6 address
1331:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param i1 word1 of the new IPv6 address
1332:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param i2 word2 of the new IPv6 address
1333:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param i3 word3 of the new IPv6 address
1334:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1335:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
1336:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_ip6_addr_set_parts(struct netif *netif, s8_t addr_idx, u32_t i0, u32_t i1, u32_t i2, u32_t i3
1337:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1338:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t old_addr;
1339:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t new_ipaddr;
1340:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1341:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif != NULL", netif != NULL);
1342:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("invalid index", addr_idx < LWIP_IPV6_NUM_ADDRESSES);
1343:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1344:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip6_addr_copy(*ip_2_ip6(&old_addr), *netif_ip6_addr(netif, addr_idx));
1345:Middlewares/Third_Party/LwIP/src/core/netif.c ****   IP_SET_TYPE_VAL(old_addr, IPADDR_TYPE_V6);
1346:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1347:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* address is actually being changed? */
1348:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if ((ip_2_ip6(&old_addr)->addr[0] != i0) || (ip_2_ip6(&old_addr)->addr[1] != i1) ||
1349:Middlewares/Third_Party/LwIP/src/core/netif.c ****       (ip_2_ip6(&old_addr)->addr[2] != i2) || (ip_2_ip6(&old_addr)->addr[3] != i3)) {
1350:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_ip6_addr_set: netif address being changed\n")
1351:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1352:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_ADDR6(&new_ipaddr, i0, i1, i2, i3);
1353:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip6_addr_assign_zone(ip_2_ip6(&new_ipaddr), IP6_UNICAST, netif);
1354:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1355:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, addr_idx))) {
1356:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, addr_idx), &new_ipaddr);
1357:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1358:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* @todo: remove/readd mib2 ip6 entries? */
1359:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1360:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_addr_copy(netif->ip6_addr[addr_idx], new_ipaddr);
1361:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1362:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, addr_idx))) {
1363:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV6);
1364:Middlewares/Third_Party/LwIP/src/core/netif.c ****       NETIF_STATUS_CALLBACK(netif);
1365:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1366:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1367:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1368:Middlewares/Third_Party/LwIP/src/core/netif.c ****     {
1369:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
1370:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.ipv6_set.addr_index  = addr_idx;
1371:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.ipv6_set.old_address = &old_addr;
1372:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_IPV6_SET, &args);
ARM GAS  /tmp/ccgR0vEp.s 			page 27


1373:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1374:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
1375:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1376:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1377:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: IPv6 address %d of interface 
1378:Middlewares/Third_Party/LwIP/src/core/netif.c ****               addr_idx, netif->name[0], netif->name[1], ip6addr_ntoa(netif_ip6_addr(netif, addr_idx
1379:Middlewares/Third_Party/LwIP/src/core/netif.c ****               netif_ip6_addr_state(netif, addr_idx)));
1380:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1381:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1382:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1383:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_ip6
1384:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Change the state of an IPv6 address of a network interface
1385:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * (INVALID, TEMPTATIVE, PREFERRED, DEPRECATED, where TEMPTATIVE
1386:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * includes the number of checks done, see ip6_addr.h)
1387:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1388:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the network interface to change
1389:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param addr_idx index of the IPv6 address
1390:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param state the new IPv6 address state
1391:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1392:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
1393:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_ip6_addr_set_state(struct netif *netif, s8_t addr_idx, u8_t state)
1394:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1395:Middlewares/Third_Party/LwIP/src/core/netif.c ****   u8_t old_state;
1396:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1397:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif != NULL", netif != NULL);
1398:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("invalid index", addr_idx < LWIP_IPV6_NUM_ADDRESSES);
1399:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1400:Middlewares/Third_Party/LwIP/src/core/netif.c ****   old_state = netif_ip6_addr_state(netif, addr_idx);
1401:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* state is actually being changed? */
1402:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (old_state != state) {
1403:Middlewares/Third_Party/LwIP/src/core/netif.c ****     u8_t old_valid = old_state & IP6_ADDR_VALID;
1404:Middlewares/Third_Party/LwIP/src/core/netif.c ****     u8_t new_valid = state & IP6_ADDR_VALID;
1405:Middlewares/Third_Party/LwIP/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_ip6_addr_set_state: netif address state being
1406:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1407:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_MLD
1408:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* Reevaluate solicited-node multicast group membership. */
1409:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_MLD6) {
1410:Middlewares/Third_Party/LwIP/src/core/netif.c ****       nd6_adjust_mld_membership(netif, addr_idx, state);
1411:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1412:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_MLD */
1413:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1414:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (old_valid && !new_valid) {
1415:Middlewares/Third_Party/LwIP/src/core/netif.c ****       /* address about to be removed by setting invalid */
1416:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, addr_idx), NULL);
1417:Middlewares/Third_Party/LwIP/src/core/netif.c ****       /* @todo: remove mib2 ip6 entries? */
1418:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1419:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->ip6_addr_state[addr_idx] = state;
1420:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1421:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (!old_valid && new_valid) {
1422:Middlewares/Third_Party/LwIP/src/core/netif.c ****       /* address added by setting valid */
1423:Middlewares/Third_Party/LwIP/src/core/netif.c ****       /* This is a good moment to check that the address is properly zoned. */
1424:Middlewares/Third_Party/LwIP/src/core/netif.c ****       IP6_ADDR_ZONECHECK_NETIF(netif_ip6_addr(netif, addr_idx), netif);
1425:Middlewares/Third_Party/LwIP/src/core/netif.c ****       /* @todo: add mib2 ip6 entries? */
1426:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV6);
1427:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1428:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if ((old_state & ~IP6_ADDR_TENTATIVE_COUNT_MASK) !=
1429:Middlewares/Third_Party/LwIP/src/core/netif.c ****         (state     & ~IP6_ADDR_TENTATIVE_COUNT_MASK)) {
ARM GAS  /tmp/ccgR0vEp.s 			page 28


1430:Middlewares/Third_Party/LwIP/src/core/netif.c ****       /* address state has changed -> call the callback function */
1431:Middlewares/Third_Party/LwIP/src/core/netif.c ****       NETIF_STATUS_CALLBACK(netif);
1432:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1433:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1434:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1435:Middlewares/Third_Party/LwIP/src/core/netif.c ****     {
1436:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_ext_callback_args_t args;
1437:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.ipv6_addr_state_changed.addr_index = addr_idx;
1438:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.ipv6_addr_state_changed.old_state  = old_state;
1439:Middlewares/Third_Party/LwIP/src/core/netif.c ****       args.ipv6_addr_state_changed.address    = netif_ip_addr6(netif, addr_idx);
1440:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_IPV6_ADDR_STATE_CHANGED, &args);
1441:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1442:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif
1443:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1444:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: IPv6 address %d of interface 
1445:Middlewares/Third_Party/LwIP/src/core/netif.c ****               addr_idx, netif->name[0], netif->name[1], ip6addr_ntoa(netif_ip6_addr(netif, addr_idx
1446:Middlewares/Third_Party/LwIP/src/core/netif.c ****               netif_ip6_addr_state(netif, addr_idx)));
1447:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1448:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1449:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1450:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Checks if a specific local address is present on the netif and returns its
1451:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * index. Depending on its state, it may or may not be assigned to the
1452:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * interface (as per RFC terminology).
1453:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1454:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * The given address may or may not be zoned (i.e., have a zone index other
1455:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * than IP6_NO_ZONE). If the address is zoned, it must have the correct zone
1456:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * for the given netif, or no match will be found.
1457:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1458:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the netif to check
1459:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param ip6addr the IPv6 address to find
1460:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @return >= 0: address found, this is its index
1461:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *         -1: address not found on this netif
1462:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1463:Middlewares/Third_Party/LwIP/src/core/netif.c **** s8_t
1464:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_get_ip6_addr_match(struct netif *netif, const ip6_addr_t *ip6addr)
1465:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1466:Middlewares/Third_Party/LwIP/src/core/netif.c ****   s8_t i;
1467:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1468:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1469:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1470:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_get_ip6_addr_match: invalid netif", netif != NULL);
1471:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_get_ip6_addr_match: invalid ip6addr", ip6addr != NULL);
1472:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1473:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_SCOPES
1474:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (ip6_addr_has_zone(ip6addr) && !ip6_addr_test_zone(ip6addr, netif)) {
1475:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return -1; /* wrong zone, no match */
1476:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1477:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_SCOPES */
1478:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1479:Middlewares/Third_Party/LwIP/src/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
1480:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (!ip6_addr_isinvalid(netif_ip6_addr_state(netif, i)) &&
1481:Middlewares/Third_Party/LwIP/src/core/netif.c ****         ip6_addr_cmp_zoneless(netif_ip6_addr(netif, i), ip6addr)) {
1482:Middlewares/Third_Party/LwIP/src/core/netif.c ****       return i;
1483:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1484:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1485:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return -1;
1486:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
ARM GAS  /tmp/ccgR0vEp.s 			page 29


1487:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1488:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1489:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_ip6
1490:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Create a link-local IPv6 address on a netif (stored in slot 0)
1491:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1492:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif the netif to create the address on
1493:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param from_mac_48bit if != 0, assume hwadr is a 48-bit MAC address (std conversion)
1494:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *                       if == 0, use hwaddr directly as interface ID
1495:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1496:Middlewares/Third_Party/LwIP/src/core/netif.c **** void
1497:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_create_ip6_linklocal_address(struct netif *netif, u8_t from_mac_48bit)
1498:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1499:Middlewares/Third_Party/LwIP/src/core/netif.c ****   u8_t i, addr_index;
1500:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1501:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1502:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1503:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_create_ip6_linklocal_address: invalid netif", netif != NULL);
1504:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1505:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Link-local prefix. */
1506:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_2_ip6(&netif->ip6_addr[0])->addr[0] = PP_HTONL(0xfe800000ul);
1507:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_2_ip6(&netif->ip6_addr[0])->addr[1] = 0;
1508:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1509:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Generate interface ID. */
1510:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (from_mac_48bit) {
1511:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* Assume hwaddr is a 48-bit IEEE 802 MAC. Convert to EUI-64 address. Complement Group bit. */
1512:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[2] = lwip_htonl((((u32_t)(netif->hwaddr[0] ^ 0x02)) << 24) 
1513:Middlewares/Third_Party/LwIP/src/core/netif.c ****         ((u32_t)(netif->hwaddr[1]) << 16) |
1514:Middlewares/Third_Party/LwIP/src/core/netif.c ****         ((u32_t)(netif->hwaddr[2]) << 8) |
1515:Middlewares/Third_Party/LwIP/src/core/netif.c ****         (0xff));
1516:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[3] = lwip_htonl((u32_t)(0xfeul << 24) |
1517:Middlewares/Third_Party/LwIP/src/core/netif.c ****         ((u32_t)(netif->hwaddr[3]) << 16) |
1518:Middlewares/Third_Party/LwIP/src/core/netif.c ****         ((u32_t)(netif->hwaddr[4]) << 8) |
1519:Middlewares/Third_Party/LwIP/src/core/netif.c ****         (netif->hwaddr[5]));
1520:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else {
1521:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* Use hwaddr directly as interface ID. */
1522:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[2] = 0;
1523:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[3] = 0;
1524:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1525:Middlewares/Third_Party/LwIP/src/core/netif.c ****     addr_index = 3;
1526:Middlewares/Third_Party/LwIP/src/core/netif.c ****     for (i = 0; (i < 8) && (i < netif->hwaddr_len); i++) {
1527:Middlewares/Third_Party/LwIP/src/core/netif.c ****       if (i == 4) {
1528:Middlewares/Third_Party/LwIP/src/core/netif.c ****         addr_index--;
1529:Middlewares/Third_Party/LwIP/src/core/netif.c ****       }
1530:Middlewares/Third_Party/LwIP/src/core/netif.c ****       ip_2_ip6(&netif->ip6_addr[0])->addr[addr_index] |= lwip_htonl(((u32_t)(netif->hwaddr[netif->h
1531:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1532:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1533:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1534:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Set a link-local zone. Even though the zone is implied by the owning
1535:Middlewares/Third_Party/LwIP/src/core/netif.c ****    * netif, setting the zone anyway has two important conceptual advantages:
1536:Middlewares/Third_Party/LwIP/src/core/netif.c ****    * 1) it avoids the need for a ton of exceptions in internal code, allowing
1537:Middlewares/Third_Party/LwIP/src/core/netif.c ****    *    e.g. ip6_addr_cmp() to be used on local addresses;
1538:Middlewares/Third_Party/LwIP/src/core/netif.c ****    * 2) the properly zoned address is visible externally, e.g. when any outside
1539:Middlewares/Third_Party/LwIP/src/core/netif.c ****    *    code enumerates available addresses or uses one to bind a socket.
1540:Middlewares/Third_Party/LwIP/src/core/netif.c ****    * Any external code unaware of address scoping is likely to just ignore the
1541:Middlewares/Third_Party/LwIP/src/core/netif.c ****    * zone field, so this should not create any compatibility problems. */
1542:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip6_addr_assign_zone(ip_2_ip6(&netif->ip6_addr[0]), IP6_UNICAST, netif);
1543:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
ARM GAS  /tmp/ccgR0vEp.s 			page 30


1544:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Set address state. */
1545:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6_DUP_DETECT_ATTEMPTS
1546:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Will perform duplicate address detection (DAD). */
1547:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_ip6_addr_set_state(netif, 0, IP6_ADDR_TENTATIVE);
1548:Middlewares/Third_Party/LwIP/src/core/netif.c **** #else
1549:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Consider address valid. */
1550:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_ip6_addr_set_state(netif, 0, IP6_ADDR_PREFERRED);
1551:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6_AUTOCONFIG */
1552:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1553:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1554:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1555:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif_ip6
1556:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * This function allows for the easy addition of a new IPv6 address to an interface.
1557:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * It takes care of finding an empty slot and then sets the address tentative
1558:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * (to make sure that all the subsequent processing happens).
1559:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1560:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param netif netif to add the address on
1561:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param ip6addr address to add
1562:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param chosen_idx if != NULL, the chosen IPv6 address index will be stored here
1563:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1564:Middlewares/Third_Party/LwIP/src/core/netif.c **** err_t
1565:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_add_ip6_address(struct netif *netif, const ip6_addr_t *ip6addr, s8_t *chosen_idx)
1566:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1567:Middlewares/Third_Party/LwIP/src/core/netif.c ****   s8_t i;
1568:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1569:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1570:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1571:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_add_ip6_address: invalid netif", netif != NULL);
1572:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_add_ip6_address: invalid ip6addr", ip6addr != NULL);
1573:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1574:Middlewares/Third_Party/LwIP/src/core/netif.c ****   i = netif_get_ip6_addr_match(netif, ip6addr);
1575:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (i >= 0) {
1576:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* Address already added */
1577:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (chosen_idx != NULL) {
1578:Middlewares/Third_Party/LwIP/src/core/netif.c ****       *chosen_idx = i;
1579:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1580:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return ERR_OK;
1581:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1582:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1583:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* Find a free slot. The first one is reserved for link-local addresses. */
1584:Middlewares/Third_Party/LwIP/src/core/netif.c ****   for (i = ip6_addr_islinklocal(ip6addr) ? 0 : 1; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
1585:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (ip6_addr_isinvalid(netif_ip6_addr_state(netif, i))) {
1586:Middlewares/Third_Party/LwIP/src/core/netif.c ****       ip_addr_copy_from_ip6(netif->ip6_addr[i], *ip6addr);
1587:Middlewares/Third_Party/LwIP/src/core/netif.c ****       ip6_addr_assign_zone(ip_2_ip6(&netif->ip6_addr[i]), IP6_UNICAST, netif);
1588:Middlewares/Third_Party/LwIP/src/core/netif.c ****       netif_ip6_addr_set_state(netif, i, IP6_ADDR_TENTATIVE);
1589:Middlewares/Third_Party/LwIP/src/core/netif.c ****       if (chosen_idx != NULL) {
1590:Middlewares/Third_Party/LwIP/src/core/netif.c ****         *chosen_idx = i;
1591:Middlewares/Third_Party/LwIP/src/core/netif.c ****       }
1592:Middlewares/Third_Party/LwIP/src/core/netif.c ****       return ERR_OK;
1593:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1594:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1595:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1596:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (chosen_idx != NULL) {
1597:Middlewares/Third_Party/LwIP/src/core/netif.c ****     *chosen_idx = -1;
1598:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1599:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return ERR_VAL;
1600:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
ARM GAS  /tmp/ccgR0vEp.s 			page 31


1601:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1602:Middlewares/Third_Party/LwIP/src/core/netif.c **** /** Dummy IPv6 output function for netifs not supporting IPv6
1603:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1604:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t
1605:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_null_output_ip6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr)
1606:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1607:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(netif);
1608:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(p);
1609:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(ipaddr);
1610:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1611:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return ERR_IF;
1612:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1613:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV6 */
1614:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1615:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
1616:Middlewares/Third_Party/LwIP/src/core/netif.c **** /** Dummy IPv4 output function for netifs not supporting IPv4
1617:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1618:Middlewares/Third_Party/LwIP/src/core/netif.c **** static err_t
1619:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_null_output_ip4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr)
1620:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 114              		.loc 1 1620 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119              	.LVL10:
1621:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(netif);
1622:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(p);
1623:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_UNUSED_ARG(ipaddr);
1624:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1625:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return ERR_IF;
1626:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 120              		.loc 1 1626 0
 121 0000 6FF00B00 		mvn	r0, #11
 122              	.LVL11:
 123 0004 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE178:
 127              		.section	.text.netif_do_ip_addr_changed,"ax",%progbits
 128              		.align	1
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv5-d16
 134              	netif_do_ip_addr_changed:
 135              	.LFB162:
 443:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_TCP
 136              		.loc 1 443 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              	.LVL12:
 141 0000 38B5     		push	{r3, r4, r5, lr}
 142              	.LCFI0:
 143              		.cfi_def_cfa_offset 16
 144              		.cfi_offset 3, -16
 145              		.cfi_offset 4, -12
ARM GAS  /tmp/ccgR0vEp.s 			page 32


 146              		.cfi_offset 5, -8
 147              		.cfi_offset 14, -4
 148 0002 0446     		mov	r4, r0
 149 0004 0D46     		mov	r5, r1
 445:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_TCP */
 150              		.loc 1 445 0
 151 0006 FFF7FEFF 		bl	tcp_netif_ip_addr_changed
 152              	.LVL13:
 448:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_UDP */
 153              		.loc 1 448 0
 154 000a 2946     		mov	r1, r5
 155 000c 2046     		mov	r0, r4
 156 000e FFF7FEFF 		bl	udp_netif_ip_addr_changed
 157              	.LVL14:
 158 0012 38BD     		pop	{r3, r4, r5, pc}
 159              		.cfi_endproc
 160              	.LFE162:
 162              		.section	.text.netif_issue_reports,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv5-d16
 169              	netif_issue_reports:
 170              	.LFB173:
 876:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_issue_reports: invalid netif", netif != NULL);
 171              		.loc 1 876 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              	.LVL15:
 176 0000 38B5     		push	{r3, r4, r5, lr}
 177              	.LCFI1:
 178              		.cfi_def_cfa_offset 16
 179              		.cfi_offset 3, -16
 180              		.cfi_offset 4, -12
 181              		.cfi_offset 5, -8
 182              		.cfi_offset 14, -4
 183 0002 0D46     		mov	r5, r1
 877:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 184              		.loc 1 877 0
 185 0004 0446     		mov	r4, r0
 186 0006 30B1     		cbz	r0, .L20
 187              	.LVL16:
 188              	.L17:
 880:Middlewares/Third_Party/LwIP/src/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 189              		.loc 1 880 0
 190 0008 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
 191 000c 03F00502 		and	r2, r3, #5
 192 0010 052A     		cmp	r2, #5
 193 0012 08D0     		beq	.L21
 194              	.L16:
 195 0014 38BD     		pop	{r3, r4, r5, pc}
 196              	.LVL17:
 197              	.L20:
 877:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 198              		.loc 1 877 0 discriminator 1
ARM GAS  /tmp/ccgR0vEp.s 			page 33


 199 0016 0B4B     		ldr	r3, .L22
 200 0018 40F26D32 		movw	r2, #877
 201 001c 0A49     		ldr	r1, .L22+4
 202              	.LVL18:
 203 001e 0B48     		ldr	r0, .L22+8
 204              	.LVL19:
 205 0020 FFF7FEFF 		bl	printf
 206              	.LVL20:
 207 0024 F0E7     		b	.L17
 208              	.L21:
 886:Middlewares/Third_Party/LwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 209              		.loc 1 886 0
 210 0026 15F0010F 		tst	r5, #1
 211 002a F3D0     		beq	.L16
 887:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_ARP
 212              		.loc 1 887 0 discriminator 1
 213 002c 6268     		ldr	r2, [r4, #4]
 886:Middlewares/Third_Party/LwIP/src/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 214              		.loc 1 886 0 discriminator 1
 215 002e 002A     		cmp	r2, #0
 216 0030 F0D0     		beq	.L16
 890:Middlewares/Third_Party/LwIP/src/core/netif.c ****       etharp_gratuitous(netif);
 217              		.loc 1 890 0
 218 0032 13F0080F 		tst	r3, #8
 219 0036 EDD0     		beq	.L16
 891:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 220              		.loc 1 891 0
 221 0038 211D     		adds	r1, r4, #4
 222 003a 2046     		mov	r0, r4
 223 003c FFF7FEFF 		bl	etharp_request
 224              	.LVL21:
 225 0040 E8E7     		b	.L16
 226              	.L23:
 227 0042 00BF     		.align	2
 228              	.L22:
 229 0044 00000000 		.word	.LC0
 230 0048 30000000 		.word	.LC1
 231 004c 54000000 		.word	.LC2
 232              		.cfi_endproc
 233              	.LFE173:
 235              		.section	.text.netif_do_set_ipaddr,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	netif_do_set_ipaddr:
 243              	.LFB163:
 458:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", ipaddr != NULL);
 244              		.loc 1 458 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL22:
 249 0000 70B5     		push	{r4, r5, r6, lr}
 250              	.LCFI2:
 251              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccgR0vEp.s 			page 34


 252              		.cfi_offset 4, -16
 253              		.cfi_offset 5, -12
 254              		.cfi_offset 6, -8
 255              		.cfi_offset 14, -4
 256 0002 82B0     		sub	sp, sp, #8
 257              	.LCFI3:
 258              		.cfi_def_cfa_offset 24
 259 0004 0546     		mov	r5, r0
 260 0006 1646     		mov	r6, r2
 459:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 261              		.loc 1 459 0
 262 0008 0C46     		mov	r4, r1
 263 000a A9B1     		cbz	r1, .L32
 264              	.LVL23:
 265              	.L25:
 460:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 266              		.loc 1 460 0
 267 000c E6B1     		cbz	r6, .L33
 268              	.L26:
 463:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ip_addr_t new_addr;
 269              		.loc 1 463 0
 270 000e 2268     		ldr	r2, [r4]
 271 0010 6B68     		ldr	r3, [r5, #4]
 272 0012 9A42     		cmp	r2, r3
 273 0014 22D0     		beq	.L29
 274              	.LBB2:
 465:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 275              		.loc 1 465 0
 276 0016 02A9     		add	r1, sp, #8
 277 0018 41F8042D 		str	r2, [r1, #-4]!
 468:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 278              		.loc 1 468 0
 279 001c 3360     		str	r3, [r6]
 471:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 280              		.loc 1 471 0
 281 001e 3046     		mov	r0, r6
 282 0020 FFF7FEFF 		bl	netif_do_ip_addr_changed
 283              	.LVL24:
 476:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 284              		.loc 1 476 0
 285 0024 C4B1     		cbz	r4, .L30
 476:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 286              		.loc 1 476 0 is_stmt 0 discriminator 1
 287 0026 2368     		ldr	r3, [r4]
 288              	.L28:
 476:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 289              		.loc 1 476 0 discriminator 4
 290 0028 6B60     		str	r3, [r5, #4]
 481:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 291              		.loc 1 481 0 is_stmt 1 discriminator 4
 292 002a 0121     		movs	r1, #1
 293 002c 2846     		mov	r0, r5
 294 002e FFF7FEFF 		bl	netif_issue_reports
 295              	.LVL25:
 484:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 296              		.loc 1 484 0 discriminator 4
 297 0032 0120     		movs	r0, #1
ARM GAS  /tmp/ccgR0vEp.s 			page 35


 298              	.L24:
 299              	.LBE2:
 487:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 300              		.loc 1 487 0
 301 0034 02B0     		add	sp, sp, #8
 302              	.LCFI4:
 303              		.cfi_remember_state
 304              		.cfi_def_cfa_offset 16
 305              		@ sp needed
 306 0036 70BD     		pop	{r4, r5, r6, pc}
 307              	.LVL26:
 308              	.L32:
 309              	.LCFI5:
 310              		.cfi_restore_state
 459:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 311              		.loc 1 459 0 discriminator 1
 312 0038 094B     		ldr	r3, .L34
 313 003a 40F2CB12 		movw	r2, #459
 314              	.LVL27:
 315 003e 0949     		ldr	r1, .L34+4
 316              	.LVL28:
 317 0040 0948     		ldr	r0, .L34+8
 318              	.LVL29:
 319 0042 FFF7FEFF 		bl	printf
 320              	.LVL30:
 321 0046 E1E7     		b	.L25
 322              	.L33:
 460:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 323              		.loc 1 460 0 discriminator 1
 324 0048 054B     		ldr	r3, .L34
 325 004a 4FF4E672 		mov	r2, #460
 326 004e 0549     		ldr	r1, .L34+4
 327 0050 0548     		ldr	r0, .L34+8
 328 0052 FFF7FEFF 		bl	printf
 329              	.LVL31:
 330 0056 DAE7     		b	.L26
 331              	.L30:
 332              	.LBB3:
 476:Middlewares/Third_Party/LwIP/src/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 333              		.loc 1 476 0
 334 0058 0023     		movs	r3, #0
 335 005a E5E7     		b	.L28
 336              	.L29:
 337              	.LBE3:
 486:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 338              		.loc 1 486 0
 339 005c 0020     		movs	r0, #0
 340 005e E9E7     		b	.L24
 341              	.L35:
 342              		.align	2
 343              	.L34:
 344 0060 00000000 		.word	.LC0
 345 0064 00000000 		.word	.LC3
 346 0068 54000000 		.word	.LC2
 347              		.cfi_endproc
 348              	.LFE163:
 350              		.section	.text.netif_init,"ax",%progbits
ARM GAS  /tmp/ccgR0vEp.s 			page 36


 351              		.align	1
 352              		.global	netif_init
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv5-d16
 358              	netif_init:
 359              	.LFB158:
 178:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
 360              		.loc 1 178 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365 0000 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE158:
 369              		.section	.text.netif_input,"ax",%progbits
 370              		.align	1
 371              		.global	netif_input
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv5-d16
 377              	netif_input:
 378              	.LFB159:
 218:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 379              		.loc 1 218 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL32:
 218:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 384              		.loc 1 218 0
 385 0000 38B5     		push	{r3, r4, r5, lr}
 386              	.LCFI6:
 387              		.cfi_def_cfa_offset 16
 388              		.cfi_offset 3, -16
 389              		.cfi_offset 4, -12
 390              		.cfi_offset 5, -8
 391              		.cfi_offset 14, -4
 392 0002 0C46     		mov	r4, r1
 221:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 393              		.loc 1 221 0
 394 0004 0546     		mov	r5, r0
 395 0006 50B1     		cbz	r0, .L43
 396              	.LVL33:
 397              	.L38:
 222:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 398              		.loc 1 222 0
 399 0008 84B1     		cbz	r4, .L44
 400              	.L39:
 225:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return ethernet_input(p, inp);
 401              		.loc 1 225 0
 402 000a 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
 403 000e 13F0180F 		tst	r3, #24
 404 0012 12D1     		bne	.L45
ARM GAS  /tmp/ccgR0vEp.s 			page 37


 229:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 405              		.loc 1 229 0
 406 0014 2146     		mov	r1, r4
 407 0016 2846     		mov	r0, r5
 408 0018 FFF7FEFF 		bl	ip4_input
 409              	.LVL34:
 230:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 410              		.loc 1 230 0
 411 001c 38BD     		pop	{r3, r4, r5, pc}
 412              	.LVL35:
 413              	.L43:
 221:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 414              		.loc 1 221 0 discriminator 1
 415 001e 094B     		ldr	r3, .L46
 416 0020 DD22     		movs	r2, #221
 417 0022 0949     		ldr	r1, .L46+4
 418              	.LVL36:
 419 0024 0948     		ldr	r0, .L46+8
 420              	.LVL37:
 421 0026 FFF7FEFF 		bl	printf
 422              	.LVL38:
 423 002a EDE7     		b	.L38
 424              	.L44:
 222:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 425              		.loc 1 222 0 discriminator 1
 426 002c 054B     		ldr	r3, .L46
 427 002e DE22     		movs	r2, #222
 428 0030 0749     		ldr	r1, .L46+12
 429 0032 0648     		ldr	r0, .L46+8
 430 0034 FFF7FEFF 		bl	printf
 431              	.LVL39:
 432 0038 E7E7     		b	.L39
 433              	.L45:
 226:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else
 434              		.loc 1 226 0
 435 003a 2146     		mov	r1, r4
 436 003c 2846     		mov	r0, r5
 437 003e FFF7FEFF 		bl	ethernet_input
 438              	.LVL40:
 439 0042 38BD     		pop	{r3, r4, r5, pc}
 440              	.LVL41:
 441              	.L47:
 442              		.align	2
 443              	.L46:
 444 0044 00000000 		.word	.LC0
 445 0048 00000000 		.word	.LC4
 446 004c 54000000 		.word	.LC2
 447 0050 1C000000 		.word	.LC5
 448              		.cfi_endproc
 449              	.LFE159:
 451              		.section	.text.netif_set_ipaddr,"ax",%progbits
 452              		.align	1
 453              		.global	netif_set_ipaddr
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu fpv5-d16
ARM GAS  /tmp/ccgR0vEp.s 			page 38


 459              	netif_set_ipaddr:
 460              	.LFB164:
 501:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_t old_addr;
 461              		.loc 1 501 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              	.LVL42:
 466 0000 00B5     		push	{lr}
 467              	.LCFI7:
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 14, -4
 470 0002 83B0     		sub	sp, sp, #12
 471              	.LCFI8:
 472              		.cfi_def_cfa_offset 16
 504:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 473              		.loc 1 504 0
 474 0004 40B1     		cbz	r0, .L54
 475 0006 0346     		mov	r3, r0
 507:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 476              		.loc 1 507 0
 477 0008 71B1     		cbz	r1, .L55
 478              	.LVL43:
 479              	.L51:
 513:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 480              		.loc 1 513 0
 481 000a 01AA     		add	r2, sp, #4
 482 000c 1846     		mov	r0, r3
 483              	.LVL44:
 484 000e FFF7FEFF 		bl	netif_do_set_ipaddr
 485              	.LVL45:
 486              	.L48:
 520:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 487              		.loc 1 520 0
 488 0012 03B0     		add	sp, sp, #12
 489              	.LCFI9:
 490              		.cfi_remember_state
 491              		.cfi_def_cfa_offset 4
 492              		@ sp needed
 493 0014 5DF804FB 		ldr	pc, [sp], #4
 494              	.LVL46:
 495              	.L54:
 496              	.LCFI10:
 497              		.cfi_restore_state
 504:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 498              		.loc 1 504 0 discriminator 1
 499 0018 044B     		ldr	r3, .L56
 500 001a 4FF4FC72 		mov	r2, #504
 501 001e 0449     		ldr	r1, .L56+4
 502              	.LVL47:
 503 0020 0448     		ldr	r0, .L56+8
 504              	.LVL48:
 505 0022 FFF7FEFF 		bl	printf
 506              	.LVL49:
 507 0026 F4E7     		b	.L48
 508              	.LVL50:
 509              	.L55:
ARM GAS  /tmp/ccgR0vEp.s 			page 39


 508:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 510              		.loc 1 508 0
 511 0028 0349     		ldr	r1, .L56+12
 512              	.LVL51:
 513 002a EEE7     		b	.L51
 514              	.L57:
 515              		.align	2
 516              	.L56:
 517 002c 00000000 		.word	.LC0
 518 0030 00000000 		.word	.LC6
 519 0034 54000000 		.word	.LC2
 520 0038 00000000 		.word	ip_addr_any
 521              		.cfi_endproc
 522              	.LFE164:
 524              		.section	.text.netif_set_netmask,"ax",%progbits
 525              		.align	1
 526              		.global	netif_set_netmask
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv5-d16
 532              	netif_set_netmask:
 533              	.LFB166:
 561:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 534              		.loc 1 561 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              	.LVL52:
 539 0000 08B5     		push	{r3, lr}
 540              	.LCFI11:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 3, -8
 543              		.cfi_offset 14, -4
 544              	.LVL53:
 570:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 545              		.loc 1 570 0
 546 0002 30B1     		cbz	r0, .L64
 547 0004 0346     		mov	r3, r0
 573:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 548              		.loc 1 573 0
 549 0006 61B1     		cbz	r1, .L65
 550              	.LVL54:
 551              	.L61:
 577:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 552              		.loc 1 577 0
 553 0008 0022     		movs	r2, #0
 554 000a 1846     		mov	r0, r3
 555              	.LVL55:
 556 000c FFF7FEFF 		bl	netif_do_set_netmask
 557              	.LVL56:
 558 0010 08BD     		pop	{r3, pc}
 559              	.LVL57:
 560              	.L64:
 570:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 561              		.loc 1 570 0 discriminator 1
 562 0012 054B     		ldr	r3, .L66
ARM GAS  /tmp/ccgR0vEp.s 			page 40


 563 0014 40F23A22 		movw	r2, #570
 564 0018 0449     		ldr	r1, .L66+4
 565              	.LVL58:
 566 001a 0548     		ldr	r0, .L66+8
 567              	.LVL59:
 568 001c FFF7FEFF 		bl	printf
 569              	.LVL60:
 570 0020 08BD     		pop	{r3, pc}
 571              	.LVL61:
 572              	.L65:
 574:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 573              		.loc 1 574 0
 574 0022 0449     		ldr	r1, .L66+12
 575              	.LVL62:
 576 0024 F0E7     		b	.L61
 577              	.L67:
 578 0026 00BF     		.align	2
 579              	.L66:
 580 0028 00000000 		.word	.LC0
 581 002c 00000000 		.word	.LC7
 582 0030 54000000 		.word	.LC2
 583 0034 00000000 		.word	ip_addr_any
 584              		.cfi_endproc
 585              	.LFE166:
 587              		.section	.text.netif_set_gw,"ax",%progbits
 588              		.align	1
 589              		.global	netif_set_gw
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv5-d16
 595              	netif_set_gw:
 596              	.LFB168:
 622:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 597              		.loc 1 622 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              	.LVL63:
 602 0000 08B5     		push	{r3, lr}
 603              	.LCFI12:
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 3, -8
 606              		.cfi_offset 14, -4
 607              	.LVL64:
 631:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 608              		.loc 1 631 0
 609 0002 30B1     		cbz	r0, .L74
 610 0004 0346     		mov	r3, r0
 634:Middlewares/Third_Party/LwIP/src/core/netif.c ****     gw = IP4_ADDR_ANY4;
 611              		.loc 1 634 0
 612 0006 61B1     		cbz	r1, .L75
 613              	.LVL65:
 614              	.L71:
 638:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 615              		.loc 1 638 0
 616 0008 0022     		movs	r2, #0
ARM GAS  /tmp/ccgR0vEp.s 			page 41


 617 000a 1846     		mov	r0, r3
 618              	.LVL66:
 619 000c FFF7FEFF 		bl	netif_do_set_gw
 620              	.LVL67:
 621 0010 08BD     		pop	{r3, pc}
 622              	.LVL68:
 623              	.L74:
 631:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 624              		.loc 1 631 0 discriminator 1
 625 0012 054B     		ldr	r3, .L76
 626 0014 40F27722 		movw	r2, #631
 627 0018 0449     		ldr	r1, .L76+4
 628              	.LVL69:
 629 001a 0548     		ldr	r0, .L76+8
 630              	.LVL70:
 631 001c FFF7FEFF 		bl	printf
 632              	.LVL71:
 633 0020 08BD     		pop	{r3, pc}
 634              	.LVL72:
 635              	.L75:
 635:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 636              		.loc 1 635 0
 637 0022 0449     		ldr	r1, .L76+12
 638              	.LVL73:
 639 0024 F0E7     		b	.L71
 640              	.L77:
 641 0026 00BF     		.align	2
 642              	.L76:
 643 0028 00000000 		.word	.LC0
 644 002c 00000000 		.word	.LC8
 645 0030 54000000 		.word	.LC2
 646 0034 00000000 		.word	ip_addr_any
 647              		.cfi_endproc
 648              	.LFE168:
 650              		.section	.text.netif_set_addr,"ax",%progbits
 651              		.align	1
 652              		.global	netif_set_addr
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-d16
 658              	netif_set_addr:
 659              	.LFB169:
 660:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 660              		.loc 1 660 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              	.LVL74:
 665 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 666              	.LCFI13:
 667              		.cfi_def_cfa_offset 24
 668              		.cfi_offset 4, -24
 669              		.cfi_offset 5, -20
 670              		.cfi_offset 6, -16
 671              		.cfi_offset 7, -12
 672              		.cfi_offset 8, -8
ARM GAS  /tmp/ccgR0vEp.s 			page 42


 673              		.cfi_offset 14, -4
 674 0004 82B0     		sub	sp, sp, #8
 675              	.LCFI14:
 676              		.cfi_def_cfa_offset 32
 677 0006 8046     		mov	r8, r0
 678 0008 1746     		mov	r7, r2
 679 000a 1E46     		mov	r6, r3
 680              	.LVL75:
 678:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 681              		.loc 1 678 0
 682 000c 0D46     		mov	r5, r1
 683 000e A1B1     		cbz	r1, .L91
 684              	.L79:
 685              	.LVL76:
 681:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 686              		.loc 1 681 0
 687 0010 AFB1     		cbz	r7, .L92
 688              	.L80:
 689              	.LVL77:
 684:Middlewares/Third_Party/LwIP/src/core/netif.c ****     gw = IP4_ADDR_ANY4;
 690              		.loc 1 684 0
 691 0012 B6B1     		cbz	r6, .L93
 692              	.L81:
 693              	.LVL78:
 688:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (remove) {
 694              		.loc 1 688 0
 695 0014 BDB1     		cbz	r5, .L88
 688:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (remove) {
 696              		.loc 1 688 0 is_stmt 0 discriminator 2
 697 0016 2B68     		ldr	r3, [r5]
 698 0018 BBB9     		cbnz	r3, .L89
 688:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (remove) {
 699              		.loc 1 688 0
 700 001a 0124     		movs	r4, #1
 701              	.L82:
 702              	.LVL79:
 689:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* when removing an address, we have to remove it *before* changing netmask/gw
 703              		.loc 1 689 0 is_stmt 1 discriminator 6
 704 001c BCB9     		cbnz	r4, .L94
 705              	.LVL80:
 706              	.L83:
 699:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 707              		.loc 1 699 0
 708 001e 0022     		movs	r2, #0
 709 0020 3946     		mov	r1, r7
 710 0022 4046     		mov	r0, r8
 711 0024 FFF7FEFF 		bl	netif_do_set_netmask
 712              	.LVL81:
 705:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 713              		.loc 1 705 0
 714 0028 0022     		movs	r2, #0
 715 002a 3146     		mov	r1, r6
 716 002c 4046     		mov	r0, r8
 717 002e FFF7FEFF 		bl	netif_do_set_gw
 718              	.LVL82:
 711:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* set ipaddr last to ensure netmask/gw have been set when status callback is called */
 719              		.loc 1 711 0
ARM GAS  /tmp/ccgR0vEp.s 			page 43


 720 0032 94B1     		cbz	r4, .L95
 721              	.L78:
 727:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 722              		.loc 1 727 0
 723 0034 02B0     		add	sp, sp, #8
 724              	.LCFI15:
 725              		.cfi_remember_state
 726              		.cfi_def_cfa_offset 24
 727              		@ sp needed
 728 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 729              	.LVL83:
 730              	.L91:
 731              	.LCFI16:
 732              		.cfi_restore_state
 679:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 733              		.loc 1 679 0
 734 003a 0B4D     		ldr	r5, .L96
 735 003c E8E7     		b	.L79
 736              	.LVL84:
 737              	.L92:
 682:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 738              		.loc 1 682 0
 739 003e 0A4F     		ldr	r7, .L96
 740 0040 E7E7     		b	.L80
 741              	.LVL85:
 742              	.L93:
 685:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 743              		.loc 1 685 0
 744 0042 094E     		ldr	r6, .L96
 745 0044 E6E7     		b	.L81
 746              	.LVL86:
 747              	.L88:
 688:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (remove) {
 748              		.loc 1 688 0
 749 0046 0124     		movs	r4, #1
 750 0048 E8E7     		b	.L82
 751              	.L89:
 752 004a 0024     		movs	r4, #0
 753 004c E6E7     		b	.L82
 754              	.LVL87:
 755              	.L94:
 692:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 756              		.loc 1 692 0
 757 004e 01AA     		add	r2, sp, #4
 758 0050 2946     		mov	r1, r5
 759 0052 4046     		mov	r0, r8
 760              	.LVL88:
 761 0054 FFF7FEFF 		bl	netif_do_set_ipaddr
 762              	.LVL89:
 763 0058 E1E7     		b	.L83
 764              	.L95:
 713:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 765              		.loc 1 713 0
 766 005a 01AA     		add	r2, sp, #4
 767 005c 2946     		mov	r1, r5
 768 005e 4046     		mov	r0, r8
 769 0060 FFF7FEFF 		bl	netif_do_set_ipaddr
ARM GAS  /tmp/ccgR0vEp.s 			page 44


 770              	.LVL90:
 727:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4*/
 771              		.loc 1 727 0
 772 0064 E6E7     		b	.L78
 773              	.L97:
 774 0066 00BF     		.align	2
 775              	.L96:
 776 0068 00000000 		.word	ip_addr_any
 777              		.cfi_endproc
 778              	.LFE169:
 780              		.section	.text.netif_add,"ax",%progbits
 781              		.align	1
 782              		.global	netif_add
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu fpv5-d16
 788              	netif_add:
 789              	.LFB161:
 281:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 790              		.loc 1 281 0
 791              		.cfi_startproc
 792              		@ args = 12, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              	.LVL91:
 795 0000 70B5     		push	{r4, r5, r6, lr}
 796              	.LCFI17:
 797              		.cfi_def_cfa_offset 16
 798              		.cfi_offset 4, -16
 799              		.cfi_offset 5, -12
 800              		.cfi_offset 6, -8
 801              		.cfi_offset 14, -4
 802 0002 059C     		ldr	r4, [sp, #20]
 295:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 803              		.loc 1 295 0
 804 0004 0646     		mov	r6, r0
 805 0006 18B3     		cbz	r0, .L120
 296:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 806              		.loc 1 296 0
 807 0008 002C     		cmp	r4, #0
 808 000a 2AD0     		beq	.L121
 299:Middlewares/Third_Party/LwIP/src/core/netif.c ****     ipaddr = ip_2_ip4(IP4_ADDR_ANY);
 809              		.loc 1 299 0
 810 000c 0029     		cmp	r1, #0
 811 000e 31D0     		beq	.L122
 812              	.LVL92:
 813              	.L102:
 302:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netmask = ip_2_ip4(IP4_ADDR_ANY);
 814              		.loc 1 302 0
 815 0010 002A     		cmp	r2, #0
 816 0012 31D0     		beq	.L123
 817              	.LVL93:
 818              	.L103:
 305:Middlewares/Third_Party/LwIP/src/core/netif.c ****     gw = ip_2_ip4(IP4_ADDR_ANY);
 819              		.loc 1 305 0
 820 0014 002B     		cmp	r3, #0
 821 0016 31D0     		beq	.L124
ARM GAS  /tmp/ccgR0vEp.s 			page 45


 822              	.LVL94:
 823              	.L104:
 310:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->netmask);
 824              		.loc 1 310 0
 825 0018 0020     		movs	r0, #0
 826              	.LVL95:
 827 001a 7060     		str	r0, [r6, #4]
 311:Middlewares/Third_Party/LwIP/src/core/netif.c ****   ip_addr_set_zero_ip4(&netif->gw);
 828              		.loc 1 311 0
 829 001c B060     		str	r0, [r6, #8]
 312:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->output = netif_null_output_ip4;
 830              		.loc 1 312 0
 831 001e F060     		str	r0, [r6, #12]
 313:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 832              		.loc 1 313 0
 833 0020 364D     		ldr	r5, .L130
 834 0022 7561     		str	r5, [r6, #20]
 327:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->flags = 0;
 835              		.loc 1 327 0
 836 0024 3085     		strh	r0, [r6, #40]	@ movhi
 328:Middlewares/Third_Party/LwIP/src/core/netif.c **** #ifdef netif_get_client_data
 837              		.loc 1 328 0
 838 0026 86F83100 		strb	r0, [r6, #49]
 330:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NUM_NETIF_CLIENT_DATA */
 839              		.loc 1 330 0
 840 002a 7062     		str	r0, [r6, #36]	@ unaligned
 343:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
 841              		.loc 1 343 0
 842 002c F061     		str	r0, [r6, #28]
 357:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->num = netif_num;
 843              		.loc 1 357 0
 844 002e 0498     		ldr	r0, [sp, #16]
 845 0030 3062     		str	r0, [r6, #32]
 358:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif->input = input;
 846              		.loc 1 358 0
 847 0032 3348     		ldr	r0, .L130+4
 848 0034 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 849 0036 86F83400 		strb	r0, [r6, #52]
 359:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 850              		.loc 1 359 0
 851 003a 0698     		ldr	r0, [sp, #24]
 852 003c 3061     		str	r0, [r6, #16]
 367:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
 853              		.loc 1 367 0
 854 003e 3046     		mov	r0, r6
 855 0040 FFF7FEFF 		bl	netif_set_addr
 856              	.LVL96:
 371:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return NULL;
 857              		.loc 1 371 0
 858 0044 3046     		mov	r0, r6
 859 0046 A047     		blx	r4
 860              	.LVL97:
 861 0048 0028     		cmp	r0, #0
 862 004a 3ED0     		beq	.L112
 372:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 863              		.loc 1 372 0
 864 004c 0020     		movs	r0, #0
ARM GAS  /tmp/ccgR0vEp.s 			page 46


 439:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 865              		.loc 1 439 0
 866 004e 70BD     		pop	{r4, r5, r6, pc}
 867              	.LVL98:
 868              	.L120:
 295:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 869              		.loc 1 295 0 discriminator 1
 870 0050 2C4B     		ldr	r3, .L130+8
 871              	.LVL99:
 872 0052 40F22712 		movw	r2, #295
 873              	.LVL100:
 874 0056 2C49     		ldr	r1, .L130+12
 875              	.LVL101:
 876 0058 2C48     		ldr	r0, .L130+16
 877              	.LVL102:
 878 005a FFF7FEFF 		bl	printf
 879              	.LVL103:
 880 005e 3046     		mov	r0, r6
 881 0060 70BD     		pop	{r4, r5, r6, pc}
 882              	.LVL104:
 883              	.L121:
 296:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 884              		.loc 1 296 0 discriminator 1
 885 0062 284B     		ldr	r3, .L130+8
 886              	.LVL105:
 887 0064 4FF49472 		mov	r2, #296
 888              	.LVL106:
 889 0068 2949     		ldr	r1, .L130+20
 890              	.LVL107:
 891 006a 2848     		ldr	r0, .L130+16
 892              	.LVL108:
 893 006c FFF7FEFF 		bl	printf
 894              	.LVL109:
 895 0070 0020     		movs	r0, #0
 896 0072 70BD     		pop	{r4, r5, r6, pc}
 897              	.LVL110:
 898              	.L122:
 300:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 899              		.loc 1 300 0
 900 0074 2749     		ldr	r1, .L130+24
 901              	.LVL111:
 902 0076 CBE7     		b	.L102
 903              	.LVL112:
 904              	.L123:
 303:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 905              		.loc 1 303 0
 906 0078 264A     		ldr	r2, .L130+24
 907              	.LVL113:
 908 007a CBE7     		b	.L103
 909              	.LVL114:
 910              	.L124:
 306:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 911              		.loc 1 306 0
 912 007c 254B     		ldr	r3, .L130+24
 913              	.LVL115:
 914 007e CBE7     		b	.L104
 915              	.LVL116:
ARM GAS  /tmp/ccgR0vEp.s 			page 47


 916              	.L128:
 917              	.LBB4:
 391:Middlewares/Third_Party/LwIP/src/core/netif.c ****       }
 918              		.loc 1 391 0
 919 0080 0023     		movs	r3, #0
 920 0082 86F83430 		strb	r3, [r6, #52]
 921 0086 24E0     		b	.L105
 922              	.LVL117:
 923              	.L126:
 395:Middlewares/Third_Party/LwIP/src/core/netif.c ****         num_netifs++;
 924              		.loc 1 395 0 discriminator 1
 925 0088 1E4B     		ldr	r3, .L130+8
 926 008a 40F28B12 		movw	r2, #395
 927 008e 2249     		ldr	r1, .L130+28
 928 0090 1E48     		ldr	r0, .L130+16
 929 0092 FFF7FEFF 		bl	printf
 930              	.LVL118:
 931 0096 09E0     		b	.L107
 932              	.L108:
 398:Middlewares/Third_Party/LwIP/src/core/netif.c ****           netif->num++;
 933              		.loc 1 398 0
 934 0098 94F83420 		ldrb	r2, [r4, #52]	@ zero_extendqisi2
 935 009c 96F83430 		ldrb	r3, [r6, #52]	@ zero_extendqisi2
 936 00a0 9A42     		cmp	r2, r3
 937 00a2 0ED0     		beq	.L125
 394:Middlewares/Third_Party/LwIP/src/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 938              		.loc 1 394 0 discriminator 2
 939 00a4 2468     		ldr	r4, [r4]
 940              	.LVL119:
 941              	.L106:
 394:Middlewares/Third_Party/LwIP/src/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 942              		.loc 1 394 0 is_stmt 0 discriminator 1
 943 00a6 7CB1     		cbz	r4, .L110
 395:Middlewares/Third_Party/LwIP/src/core/netif.c ****         num_netifs++;
 944              		.loc 1 395 0 is_stmt 1
 945 00a8 B442     		cmp	r4, r6
 946 00aa EDD0     		beq	.L126
 947              	.L107:
 396:Middlewares/Third_Party/LwIP/src/core/netif.c ****         LWIP_ASSERT("too many netifs, max. supported number is 255", num_netifs <= 255);
 948              		.loc 1 396 0
 949 00ac 0135     		adds	r5, r5, #1
 950              	.LVL120:
 397:Middlewares/Third_Party/LwIP/src/core/netif.c ****         if (netif2->num == netif->num) {
 951              		.loc 1 397 0
 952 00ae FF2D     		cmp	r5, #255
 953 00b0 F2DD     		ble	.L108
 397:Middlewares/Third_Party/LwIP/src/core/netif.c ****         if (netif2->num == netif->num) {
 954              		.loc 1 397 0 is_stmt 0 discriminator 1
 955 00b2 144B     		ldr	r3, .L130+8
 956 00b4 40F28D12 		movw	r2, #397
 957 00b8 1849     		ldr	r1, .L130+32
 958 00ba 1448     		ldr	r0, .L130+16
 959 00bc FFF7FEFF 		bl	printf
 960              	.LVL121:
 961 00c0 EAE7     		b	.L108
 962              	.L125:
 399:Middlewares/Third_Party/LwIP/src/core/netif.c ****           break;
ARM GAS  /tmp/ccgR0vEp.s 			page 48


 963              		.loc 1 399 0 is_stmt 1
 964 00c2 0133     		adds	r3, r3, #1
 965 00c4 86F83430 		strb	r3, [r6, #52]
 966              	.L110:
 403:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 967              		.loc 1 403 0
 968 00c8 3CB1     		cbz	r4, .L127
 969              	.LVL122:
 970              	.L112:
 390:Middlewares/Third_Party/LwIP/src/core/netif.c ****         netif->num = 0;
 971              		.loc 1 390 0
 972 00ca 96F83430 		ldrb	r3, [r6, #52]	@ zero_extendqisi2
 973 00ce FF2B     		cmp	r3, #255
 974 00d0 D6D0     		beq	.L128
 975              	.L105:
 976              	.LVL123:
 394:Middlewares/Third_Party/LwIP/src/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 977              		.loc 1 394 0
 978 00d2 134B     		ldr	r3, .L130+36
 979 00d4 1C68     		ldr	r4, [r3]
 980              	.LVL124:
 393:Middlewares/Third_Party/LwIP/src/core/netif.c ****       for (netif2 = netif_list; netif2 != NULL; netif2 = netif2->next) {
 981              		.loc 1 393 0
 982 00d6 0025     		movs	r5, #0
 394:Middlewares/Third_Party/LwIP/src/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 983              		.loc 1 394 0
 984 00d8 E5E7     		b	.L106
 985              	.LVL125:
 986              	.L127:
 987              	.LBE4:
 405:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_num = 0;
 988              		.loc 1 405 0
 989 00da 96F83430 		ldrb	r3, [r6, #52]	@ zero_extendqisi2
 990 00de FE2B     		cmp	r3, #254
 991 00e0 08D0     		beq	.L129
 408:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 992              		.loc 1 408 0
 993 00e2 0133     		adds	r3, r3, #1
 994 00e4 064A     		ldr	r2, .L130+4
 995 00e6 1370     		strb	r3, [r2]
 996              	.L114:
 412:Middlewares/Third_Party/LwIP/src/core/netif.c ****   netif_list = netif;
 997              		.loc 1 412 0
 998 00e8 0D4B     		ldr	r3, .L130+36
 999 00ea 1A68     		ldr	r2, [r3]
 1000 00ec 3260     		str	r2, [r6]
 413:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* "LWIP_SINGLE_NETIF */
 1001              		.loc 1 413 0
 1002 00ee 1E60     		str	r6, [r3]
 438:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 1003              		.loc 1 438 0
 1004 00f0 3046     		mov	r0, r6
 1005 00f2 70BD     		pop	{r4, r5, r6, pc}
 1006              	.LVL126:
 1007              	.L129:
 406:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else {
 1008              		.loc 1 406 0
ARM GAS  /tmp/ccgR0vEp.s 			page 49


 1009 00f4 0022     		movs	r2, #0
 1010 00f6 024B     		ldr	r3, .L130+4
 1011 00f8 1A70     		strb	r2, [r3]
 1012 00fa F5E7     		b	.L114
 1013              	.L131:
 1014              		.align	2
 1015              	.L130:
 1016 00fc 00000000 		.word	netif_null_output_ip4
 1017 0100 00000000 		.word	.LANCHOR0
 1018 0104 00000000 		.word	.LC0
 1019 0108 00000000 		.word	.LC9
 1020 010c 54000000 		.word	.LC2
 1021 0110 1C000000 		.word	.LC10
 1022 0114 00000000 		.word	ip_addr_any
 1023 0118 40000000 		.word	.LC11
 1024 011c 54000000 		.word	.LC12
 1025 0120 00000000 		.word	netif_list
 1026              		.cfi_endproc
 1027              	.LFE161:
 1029              		.section	.text.netif_add_noaddr,"ax",%progbits
 1030              		.align	1
 1031              		.global	netif_add_noaddr
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
 1035              		.fpu fpv5-d16
 1037              	netif_add_noaddr:
 1038              	.LFB160:
 240:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return netif_add(netif,
 1039              		.loc 1 240 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              	.LVL127:
 1044 0000 00B5     		push	{lr}
 1045              	.LCFI18:
 1046              		.cfi_def_cfa_offset 4
 1047              		.cfi_offset 14, -4
 1048 0002 85B0     		sub	sp, sp, #20
 1049              	.LCFI19:
 1050              		.cfi_def_cfa_offset 24
 241:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV4
 1051              		.loc 1 241 0
 1052 0004 0293     		str	r3, [sp, #8]
 1053 0006 0192     		str	r2, [sp, #4]
 1054 0008 0091     		str	r1, [sp]
 1055 000a 0023     		movs	r3, #0
 1056              	.LVL128:
 1057 000c 1A46     		mov	r2, r3
 1058              	.LVL129:
 1059 000e 1946     		mov	r1, r3
 1060              	.LVL130:
 1061 0010 FFF7FEFF 		bl	netif_add
 1062              	.LVL131:
 246:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1063              		.loc 1 246 0
 1064 0014 05B0     		add	sp, sp, #20
ARM GAS  /tmp/ccgR0vEp.s 			page 50


 1065              	.LCFI20:
 1066              		.cfi_def_cfa_offset 4
 1067              		@ sp needed
 1068 0016 5DF804FB 		ldr	pc, [sp], #4
 1069              		.cfi_endproc
 1070              	.LFE160:
 1072              		.section	.text.netif_set_default,"ax",%progbits
 1073              		.align	1
 1074              		.global	netif_set_default
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu fpv5-d16
 1080              	netif_set_default:
 1081              	.LFB171:
 823:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1082              		.loc 1 823 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086              		@ link register save eliminated.
 1087              	.LVL132:
 833:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 1088              		.loc 1 833 0
 1089 0000 014B     		ldr	r3, .L135
 1090 0002 1860     		str	r0, [r3]
 1091 0004 7047     		bx	lr
 1092              	.L136:
 1093 0006 00BF     		.align	2
 1094              	.L135:
 1095 0008 00000000 		.word	netif_default
 1096              		.cfi_endproc
 1097              	.LFE171:
 1099              		.section	.text.netif_set_up,"ax",%progbits
 1100              		.align	1
 1101              		.global	netif_set_up
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1105              		.fpu fpv5-d16
 1107              	netif_set_up:
 1108              	.LFB172:
 845:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1109              		.loc 1 845 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113              	.LVL133:
 1114 0000 08B5     		push	{r3, lr}
 1115              	.LCFI21:
 1116              		.cfi_def_cfa_offset 8
 1117              		.cfi_offset 3, -8
 1118              		.cfi_offset 14, -4
 848:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1119              		.loc 1 848 0
 1120 0002 28B1     		cbz	r0, .L141
 850:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_UP);
ARM GAS  /tmp/ccgR0vEp.s 			page 51


 1121              		.loc 1 850 0
 1122 0004 90F83130 		ldrb	r3, [r0, #49]	@ zero_extendqisi2
 1123 0008 13F0010F 		tst	r3, #1
 1124 000c 08D0     		beq	.L142
 1125              	.LVL134:
 1126              	.L137:
 1127 000e 08BD     		pop	{r3, pc}
 1128              	.LVL135:
 1129              	.L141:
 848:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1130              		.loc 1 848 0 discriminator 1
 1131 0010 074B     		ldr	r3, .L143
 1132 0012 4FF45472 		mov	r2, #848
 1133 0016 0749     		ldr	r1, .L143+4
 1134 0018 0748     		ldr	r0, .L143+8
 1135              	.LVL136:
 1136 001a FFF7FEFF 		bl	printf
 1137              	.LVL137:
 1138 001e 08BD     		pop	{r3, pc}
 1139              	.LVL138:
 1140              	.L142:
 851:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1141              		.loc 1 851 0
 1142 0020 43F00103 		orr	r3, r3, #1
 1143 0024 80F83130 		strb	r3, [r0, #49]
 865:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 1144              		.loc 1 865 0
 1145 0028 0321     		movs	r1, #3
 1146 002a FFF7FEFF 		bl	netif_issue_reports
 1147              	.LVL139:
 1148 002e EEE7     		b	.L137
 1149              	.L144:
 1150              		.align	2
 1151              	.L143:
 1152 0030 00000000 		.word	.LC0
 1153 0034 00000000 		.word	.LC13
 1154 0038 54000000 		.word	.LC2
 1155              		.cfi_endproc
 1156              	.LFE172:
 1158              		.section	.text.netif_set_down,"ax",%progbits
 1159              		.align	1
 1160              		.global	netif_set_down
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu fpv5-d16
 1166              	netif_set_down:
 1167              	.LFB174:
 920:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1168              		.loc 1 920 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172              	.LVL140:
 1173 0000 08B5     		push	{r3, lr}
 1174              	.LCFI22:
 1175              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccgR0vEp.s 			page 52


 1176              		.cfi_offset 3, -8
 1177              		.cfi_offset 14, -4
 923:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1178              		.loc 1 923 0
 1179 0002 60B1     		cbz	r0, .L149
 925:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1180              		.loc 1 925 0
 1181 0004 90F83130 		ldrb	r3, [r0, #49]	@ zero_extendqisi2
 1182 0008 13F0010F 		tst	r3, #1
 1183 000c 06D0     		beq	.L145
 934:Middlewares/Third_Party/LwIP/src/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 1184              		.loc 1 934 0
 1185 000e 03F0FE03 		and	r3, r3, #254
 1186 0012 80F83130 		strb	r3, [r0, #49]
 938:Middlewares/Third_Party/LwIP/src/core/netif.c ****       etharp_cleanup_netif(netif);
 1187              		.loc 1 938 0
 1188 0016 13F0080F 		tst	r3, #8
 1189 001a 08D1     		bne	.L150
 1190              	.LVL141:
 1191              	.L145:
 1192 001c 08BD     		pop	{r3, pc}
 1193              	.LVL142:
 1194              	.L149:
 923:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1195              		.loc 1 923 0 discriminator 1
 1196 001e 054B     		ldr	r3, .L151
 1197 0020 40F29B32 		movw	r2, #923
 1198 0024 0449     		ldr	r1, .L151+4
 1199 0026 0548     		ldr	r0, .L151+8
 1200              	.LVL143:
 1201 0028 FFF7FEFF 		bl	printf
 1202              	.LVL144:
 1203 002c 08BD     		pop	{r3, pc}
 1204              	.LVL145:
 1205              	.L150:
 939:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
 1206              		.loc 1 939 0
 1207 002e FFF7FEFF 		bl	etharp_cleanup_netif
 1208              	.LVL146:
 1209 0032 F3E7     		b	.L145
 1210              	.L152:
 1211              		.align	2
 1212              	.L151:
 1213 0034 00000000 		.word	.LC0
 1214 0038 00000000 		.word	.LC14
 1215 003c 54000000 		.word	.LC2
 1216              		.cfi_endproc
 1217              	.LFE174:
 1219              		.section	.text.netif_remove,"ax",%progbits
 1220              		.align	1
 1221              		.global	netif_remove
 1222              		.syntax unified
 1223              		.thumb
 1224              		.thumb_func
 1225              		.fpu fpv5-d16
 1227              	netif_remove:
 1228              	.LFB170:
ARM GAS  /tmp/ccgR0vEp.s 			page 53


 738:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 1229              		.loc 1 738 0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              	.LVL147:
 745:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return;
 1234              		.loc 1 745 0
 1235 0000 58B3     		cbz	r0, .L162
 738:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 1236              		.loc 1 738 0
 1237 0002 10B5     		push	{r4, lr}
 1238              	.LCFI23:
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 4, -8
 1241              		.cfi_offset 14, -4
 1242 0004 0446     		mov	r4, r0
 752:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_do_ip_addr_changed(netif_ip_addr4(netif), NULL);
 1243              		.loc 1 752 0
 1244 0006 4368     		ldr	r3, [r0, #4]
 1245 0008 93B9     		cbnz	r3, .L165
 1246              	.LVL148:
 1247              	.L155:
 775:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 1248              		.loc 1 775 0
 1249 000a 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
 1250 000e 13F0010F 		tst	r3, #1
 1251 0012 12D1     		bne	.L166
 1252              	.L156:
 783:Middlewares/Third_Party/LwIP/src/core/netif.c ****     /* reset default netif */
 1253              		.loc 1 783 0
 1254 0014 114B     		ldr	r3, .L171
 1255 0016 1B68     		ldr	r3, [r3]
 1256 0018 9C42     		cmp	r4, r3
 1257 001a 12D0     		beq	.L167
 1258              	.L157:
 789:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_list = netif->next;
 1259              		.loc 1 789 0
 1260 001c 104B     		ldr	r3, .L171+4
 1261 001e 1B68     		ldr	r3, [r3]
 1262 0020 9C42     		cmp	r4, r3
 1263 0022 12D0     		beq	.L168
 1264              	.L158:
 1265              	.LVL149:
 1266              	.LBB5:
 794:Middlewares/Third_Party/LwIP/src/core/netif.c ****       if (tmp_netif->next == netif) {
 1267              		.loc 1 794 0 discriminator 1
 1268 0024 C3B1     		cbz	r3, .L169
 795:Middlewares/Third_Party/LwIP/src/core/netif.c ****         tmp_netif->next = netif->next;
 1269              		.loc 1 795 0
 1270 0026 1A68     		ldr	r2, [r3]
 1271 0028 9442     		cmp	r4, r2
 1272 002a 12D0     		beq	.L170
 794:Middlewares/Third_Party/LwIP/src/core/netif.c ****       if (tmp_netif->next == netif) {
 1273              		.loc 1 794 0
 1274 002c 1346     		mov	r3, r2
 1275              	.LVL150:
ARM GAS  /tmp/ccgR0vEp.s 			page 54


 1276 002e F9E7     		b	.L158
 1277              	.LVL151:
 1278              	.L165:
 1279              	.LBE5:
 753:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 1280              		.loc 1 753 0
 1281 0030 0021     		movs	r1, #0
 1282 0032 0430     		adds	r0, r0, #4
 1283              	.LVL152:
 1284 0034 FFF7FEFF 		bl	netif_do_ip_addr_changed
 1285              	.LVL153:
 1286 0038 E7E7     		b	.L155
 1287              	.L166:
 777:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 1288              		.loc 1 777 0
 1289 003a 2046     		mov	r0, r4
 1290 003c FFF7FEFF 		bl	netif_set_down
 1291              	.LVL154:
 1292 0040 E8E7     		b	.L156
 1293              	.L167:
 785:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 1294              		.loc 1 785 0
 1295 0042 0020     		movs	r0, #0
 1296 0044 FFF7FEFF 		bl	netif_set_default
 1297              	.LVL155:
 1298 0048 E8E7     		b	.L157
 1299              	.L168:
 790:Middlewares/Third_Party/LwIP/src/core/netif.c ****   } else {
 1300              		.loc 1 790 0
 1301 004a 2268     		ldr	r2, [r4]
 1302 004c 044B     		ldr	r3, .L171+4
 1303 004e 1A60     		str	r2, [r3]
 1304 0050 10BD     		pop	{r4, pc}
 1305              	.LVL156:
 1306              	.L170:
 1307              	.LBB6:
 796:Middlewares/Third_Party/LwIP/src/core/netif.c ****         break;
 1308              		.loc 1 796 0
 1309 0052 2268     		ldr	r2, [r4]
 1310 0054 1A60     		str	r2, [r3]
 797:Middlewares/Third_Party/LwIP/src/core/netif.c ****       }
 1311              		.loc 1 797 0
 1312 0056 10BD     		pop	{r4, pc}
 1313              	.LVL157:
 1314              	.L169:
 1315 0058 10BD     		pop	{r4, pc}
 1316              	.LVL158:
 1317              	.L162:
 1318              	.LCFI24:
 1319              		.cfi_def_cfa_offset 0
 1320              		.cfi_restore 4
 1321              		.cfi_restore 14
 1322 005a 7047     		bx	lr
 1323              	.L172:
 1324              		.align	2
 1325              	.L171:
 1326 005c 00000000 		.word	netif_default
ARM GAS  /tmp/ccgR0vEp.s 			page 55


 1327 0060 00000000 		.word	netif_list
 1328              	.LBE6:
 1329              		.cfi_endproc
 1330              	.LFE170:
 1332              		.section	.text.netif_set_link_up,"ax",%progbits
 1333              		.align	1
 1334              		.global	netif_set_link_up
 1335              		.syntax unified
 1336              		.thumb
 1337              		.thumb_func
 1338              		.fpu fpv5-d16
 1340              	netif_set_link_up:
 1341              	.LFB175:
 989:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1342              		.loc 1 989 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346              	.LVL159:
 1347 0000 10B5     		push	{r4, lr}
 1348              	.LCFI25:
 1349              		.cfi_def_cfa_offset 8
 1350              		.cfi_offset 4, -8
 1351              		.cfi_offset 14, -4
 992:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1352              		.loc 1 992 0
 1353 0002 30B1     		cbz	r0, .L177
 1354 0004 0446     		mov	r4, r0
 994:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_LINK_UP);
 1355              		.loc 1 994 0
 1356 0006 90F83130 		ldrb	r3, [r0, #49]	@ zero_extendqisi2
 1357 000a 13F0040F 		tst	r3, #4
 1358 000e 08D0     		beq	.L178
 1359              	.LVL160:
 1360              	.L173:
 1361 0010 10BD     		pop	{r4, pc}
 1362              	.LVL161:
 1363              	.L177:
 992:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1364              		.loc 1 992 0 discriminator 1
 1365 0012 0C4B     		ldr	r3, .L179
 1366 0014 4FF47872 		mov	r2, #992
 1367 0018 0B49     		ldr	r1, .L179+4
 1368 001a 0C48     		ldr	r0, .L179+8
 1369              	.LVL162:
 1370 001c FFF7FEFF 		bl	printf
 1371              	.LVL163:
 1372 0020 10BD     		pop	{r4, pc}
 1373              	.LVL164:
 1374              	.L178:
 995:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1375              		.loc 1 995 0
 1376 0022 43F00403 		orr	r3, r3, #4
 1377 0026 80F83130 		strb	r3, [r0, #49]
 998:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_DHCP */
 1378              		.loc 1 998 0
 1379 002a FFF7FEFF 		bl	dhcp_network_changed
ARM GAS  /tmp/ccgR0vEp.s 			page 56


 1380              	.LVL165:
1005:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_IPV6
 1381              		.loc 1 1005 0
 1382 002e 0321     		movs	r1, #3
 1383 0030 2046     		mov	r0, r4
 1384 0032 FFF7FEFF 		bl	netif_issue_reports
 1385              	.LVL166:
1010:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1386              		.loc 1 1010 0
 1387 0036 E369     		ldr	r3, [r4, #28]
 1388 0038 002B     		cmp	r3, #0
 1389 003a E9D0     		beq	.L173
1010:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1390              		.loc 1 1010 0 is_stmt 0 discriminator 1
 1391 003c 2046     		mov	r0, r4
 1392 003e 9847     		blx	r3
 1393              	.LVL167:
 1394 0040 E6E7     		b	.L173
 1395              	.L180:
 1396 0042 00BF     		.align	2
 1397              	.L179:
 1398 0044 00000000 		.word	.LC0
 1399 0048 00000000 		.word	.LC15
 1400 004c 54000000 		.word	.LC2
 1401              		.cfi_endproc
 1402              	.LFE175:
 1404              		.section	.text.netif_set_link_down,"ax",%progbits
 1405              		.align	1
 1406              		.global	netif_set_link_down
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1410              		.fpu fpv5-d16
 1412              	netif_set_link_down:
 1413              	.LFB176:
1027:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1414              		.loc 1 1027 0 is_stmt 1
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 0
 1417              		@ frame_needed = 0, uses_anonymous_args = 0
 1418              	.LVL168:
 1419 0000 08B5     		push	{r3, lr}
 1420              	.LCFI26:
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 3, -8
 1423              		.cfi_offset 14, -4
1030:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1424              		.loc 1 1030 0
 1425 0002 60B1     		cbz	r0, .L185
1032:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_LINK_UP);
 1426              		.loc 1 1032 0
 1427 0004 90F83130 		ldrb	r3, [r0, #49]	@ zero_extendqisi2
 1428 0008 13F0040F 		tst	r3, #4
 1429 000c 06D0     		beq	.L181
1033:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
 1430              		.loc 1 1033 0
 1431 000e 03F0FB03 		and	r3, r3, #251
ARM GAS  /tmp/ccgR0vEp.s 			page 57


 1432 0012 80F83130 		strb	r3, [r0, #49]
1034:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1433              		.loc 1 1034 0
 1434 0016 C369     		ldr	r3, [r0, #28]
 1435 0018 03B1     		cbz	r3, .L181
1034:Middlewares/Third_Party/LwIP/src/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 1436              		.loc 1 1034 0 is_stmt 0 discriminator 1
 1437 001a 9847     		blx	r3
 1438              	.LVL169:
 1439              	.L181:
 1440 001c 08BD     		pop	{r3, pc}
 1441              	.LVL170:
 1442              	.L185:
1030:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1443              		.loc 1 1030 0 is_stmt 1 discriminator 1
 1444 001e 044B     		ldr	r3, .L186
 1445 0020 40F20642 		movw	r2, #1030
 1446 0024 0349     		ldr	r1, .L186+4
 1447 0026 0448     		ldr	r0, .L186+8
 1448              	.LVL171:
 1449 0028 FFF7FEFF 		bl	printf
 1450              	.LVL172:
 1451 002c 08BD     		pop	{r3, pc}
 1452              	.L187:
 1453 002e 00BF     		.align	2
 1454              	.L186:
 1455 0030 00000000 		.word	.LC0
 1456 0034 00000000 		.word	.LC16
 1457 0038 54000000 		.word	.LC2
 1458              		.cfi_endproc
 1459              	.LFE176:
 1461              		.section	.text.netif_set_link_callback,"ax",%progbits
 1462              		.align	1
 1463              		.global	netif_set_link_callback
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu fpv5-d16
 1469              	netif_set_link_callback:
 1470              	.LFB177:
1052:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 1471              		.loc 1 1052 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 1476              	.LVL173:
1055:Middlewares/Third_Party/LwIP/src/core/netif.c ****     netif->link_callback = link_callback;
 1477              		.loc 1 1055 0
 1478 0000 00B1     		cbz	r0, .L188
1056:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 1479              		.loc 1 1056 0
 1480 0002 C161     		str	r1, [r0, #28]
 1481              	.L188:
 1482 0004 7047     		bx	lr
 1483              		.cfi_endproc
 1484              	.LFE177:
ARM GAS  /tmp/ccgR0vEp.s 			page 58


 1486              		.section	.text.netif_get_by_index,"ax",%progbits
 1487              		.align	1
 1488              		.global	netif_get_by_index
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv5-d16
 1494              	netif_get_by_index:
 1495              	.LFB181:
1627:Middlewares/Third_Party/LwIP/src/core/netif.c **** #endif /* LWIP_IPV4 */
1628:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1629:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1630:Middlewares/Third_Party/LwIP/src/core/netif.c **** * @ingroup netif
1631:Middlewares/Third_Party/LwIP/src/core/netif.c **** * Return the interface index for the netif with name
1632:Middlewares/Third_Party/LwIP/src/core/netif.c **** * or NETIF_NO_INDEX if not found/on error
1633:Middlewares/Third_Party/LwIP/src/core/netif.c **** *
1634:Middlewares/Third_Party/LwIP/src/core/netif.c **** * @param name the name of the netif
1635:Middlewares/Third_Party/LwIP/src/core/netif.c **** */
1636:Middlewares/Third_Party/LwIP/src/core/netif.c **** u8_t
1637:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_name_to_index(const char *name)
1638:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1639:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *netif = netif_find(name);
1640:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif != NULL) {
1641:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return netif_get_index(netif);
1642:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1643:Middlewares/Third_Party/LwIP/src/core/netif.c ****   /* No name found, return invalid index */
1644:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return NETIF_NO_INDEX;
1645:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1646:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1647:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1648:Middlewares/Third_Party/LwIP/src/core/netif.c **** * @ingroup netif
1649:Middlewares/Third_Party/LwIP/src/core/netif.c **** * Return the interface name for the netif matching index
1650:Middlewares/Third_Party/LwIP/src/core/netif.c **** * or NULL if not found/on error
1651:Middlewares/Third_Party/LwIP/src/core/netif.c **** *
1652:Middlewares/Third_Party/LwIP/src/core/netif.c **** * @param idx the interface index of the netif
1653:Middlewares/Third_Party/LwIP/src/core/netif.c **** * @param name char buffer of at least NETIF_NAMESIZE bytes
1654:Middlewares/Third_Party/LwIP/src/core/netif.c **** */
1655:Middlewares/Third_Party/LwIP/src/core/netif.c **** char *
1656:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_index_to_name(u8_t idx, char *name)
1657:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
1658:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *netif = netif_get_by_index(idx);
1659:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1660:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif != NULL) {
1661:Middlewares/Third_Party/LwIP/src/core/netif.c ****     name[0] = netif->name[0];
1662:Middlewares/Third_Party/LwIP/src/core/netif.c ****     name[1] = netif->name[1];
1663:Middlewares/Third_Party/LwIP/src/core/netif.c ****     lwip_itoa(&name[2], NETIF_NAMESIZE - 2, netif_index_to_num(idx));
1664:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return name;
1665:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1666:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return NULL;
1667:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
1668:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1669:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1670:Middlewares/Third_Party/LwIP/src/core/netif.c **** * @ingroup netif
1671:Middlewares/Third_Party/LwIP/src/core/netif.c **** * Return the interface for the netif index
1672:Middlewares/Third_Party/LwIP/src/core/netif.c **** *
1673:Middlewares/Third_Party/LwIP/src/core/netif.c **** * @param idx index of netif to find
1674:Middlewares/Third_Party/LwIP/src/core/netif.c **** */
ARM GAS  /tmp/ccgR0vEp.s 			page 59


1675:Middlewares/Third_Party/LwIP/src/core/netif.c **** struct netif *
1676:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_get_by_index(u8_t idx)
1677:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 1496              		.loc 1 1677 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 0
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 1500              		@ link register save eliminated.
 1501              	.LVL174:
1678:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *netif;
1679:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1680:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1681:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1682:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (idx != NETIF_NO_INDEX) {
 1502              		.loc 1 1682 0
 1503 0000 0246     		mov	r2, r0
 1504 0002 58B1     		cbz	r0, .L194
1683:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_FOREACH(netif) {
 1505              		.loc 1 1683 0
 1506 0004 064B     		ldr	r3, .L196
 1507 0006 1868     		ldr	r0, [r3]
 1508              	.LVL175:
 1509              	.L192:
 1510              		.loc 1 1683 0 is_stmt 0 discriminator 1
 1511 0008 38B1     		cbz	r0, .L195
1684:Middlewares/Third_Party/LwIP/src/core/netif.c ****       if (idx == netif_get_index(netif)) {
 1512              		.loc 1 1684 0 is_stmt 1
 1513 000a 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1514 000e 0133     		adds	r3, r3, #1
 1515 0010 DBB2     		uxtb	r3, r3
 1516 0012 9A42     		cmp	r2, r3
 1517 0014 03D0     		beq	.L190
1683:Middlewares/Third_Party/LwIP/src/core/netif.c ****     NETIF_FOREACH(netif) {
 1518              		.loc 1 1683 0 discriminator 2
 1519 0016 0068     		ldr	r0, [r0]
 1520              	.LVL176:
 1521 0018 F6E7     		b	.L192
 1522              	.L195:
 1523 001a 7047     		bx	lr
 1524              	.LVL177:
 1525              	.L194:
1685:Middlewares/Third_Party/LwIP/src/core/netif.c ****         return netif; /* found! */
1686:Middlewares/Third_Party/LwIP/src/core/netif.c ****       }
1687:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1688:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1689:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1690:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return NULL;
 1526              		.loc 1 1690 0
 1527 001c 0020     		movs	r0, #0
 1528              	.LVL178:
 1529              	.L190:
1691:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 1530              		.loc 1 1691 0
 1531 001e 7047     		bx	lr
 1532              	.L197:
 1533              		.align	2
 1534              	.L196:
ARM GAS  /tmp/ccgR0vEp.s 			page 60


 1535 0020 00000000 		.word	netif_list
 1536              		.cfi_endproc
 1537              	.LFE181:
 1539              		.section	.text.netif_index_to_name,"ax",%progbits
 1540              		.align	1
 1541              		.global	netif_index_to_name
 1542              		.syntax unified
 1543              		.thumb
 1544              		.thumb_func
 1545              		.fpu fpv5-d16
 1547              	netif_index_to_name:
 1548              	.LFB180:
1657:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *netif = netif_get_by_index(idx);
 1549              		.loc 1 1657 0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 0
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
 1553              	.LVL179:
 1554 0000 38B5     		push	{r3, r4, r5, lr}
 1555              	.LCFI27:
 1556              		.cfi_def_cfa_offset 16
 1557              		.cfi_offset 3, -16
 1558              		.cfi_offset 4, -12
 1559              		.cfi_offset 5, -8
 1560              		.cfi_offset 14, -4
 1561 0002 0546     		mov	r5, r0
 1562 0004 0C46     		mov	r4, r1
1658:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1563              		.loc 1 1658 0
 1564 0006 FFF7FEFF 		bl	netif_get_by_index
 1565              	.LVL180:
1660:Middlewares/Third_Party/LwIP/src/core/netif.c ****     name[0] = netif->name[0];
 1566              		.loc 1 1660 0
 1567 000a 60B1     		cbz	r0, .L200
1661:Middlewares/Third_Party/LwIP/src/core/netif.c ****     name[1] = netif->name[1];
 1568              		.loc 1 1661 0
 1569 000c 90F83220 		ldrb	r2, [r0, #50]	@ zero_extendqisi2
 1570 0010 2270     		strb	r2, [r4]
1662:Middlewares/Third_Party/LwIP/src/core/netif.c ****     lwip_itoa(&name[2], NETIF_NAMESIZE - 2, netif_index_to_num(idx));
 1571              		.loc 1 1662 0
 1572 0012 90F83330 		ldrb	r3, [r0, #51]	@ zero_extendqisi2
 1573 0016 6370     		strb	r3, [r4, #1]
1663:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return name;
 1574              		.loc 1 1663 0
 1575 0018 6A1E     		subs	r2, r5, #1
 1576 001a 0421     		movs	r1, #4
 1577 001c A01C     		adds	r0, r4, #2
 1578              	.LVL181:
 1579 001e FFF7FEFF 		bl	lwip_itoa
 1580              	.LVL182:
1664:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 1581              		.loc 1 1664 0
 1582 0022 2046     		mov	r0, r4
 1583 0024 38BD     		pop	{r3, r4, r5, pc}
 1584              	.LVL183:
 1585              	.L200:
1666:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
ARM GAS  /tmp/ccgR0vEp.s 			page 61


 1586              		.loc 1 1666 0
 1587 0026 0020     		movs	r0, #0
 1588              	.LVL184:
1667:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1589              		.loc 1 1667 0
 1590 0028 38BD     		pop	{r3, r4, r5, pc}
 1591              		.cfi_endproc
 1592              	.LFE180:
 1594              		.section	.text.netif_find,"ax",%progbits
 1595              		.align	1
 1596              		.global	netif_find
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1600              		.fpu fpv5-d16
 1602              	netif_find:
 1603              	.LFB182:
1692:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1693:Middlewares/Third_Party/LwIP/src/core/netif.c **** /**
1694:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @ingroup netif
1695:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * Find a network interface by searching for its name
1696:Middlewares/Third_Party/LwIP/src/core/netif.c ****  *
1697:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * @param name the name of the netif (like netif->name) plus concatenated number
1698:Middlewares/Third_Party/LwIP/src/core/netif.c ****  * in ascii representation (e.g. 'en0')
1699:Middlewares/Third_Party/LwIP/src/core/netif.c ****  */
1700:Middlewares/Third_Party/LwIP/src/core/netif.c **** struct netif *
1701:Middlewares/Third_Party/LwIP/src/core/netif.c **** netif_find(const char *name)
1702:Middlewares/Third_Party/LwIP/src/core/netif.c **** {
 1604              		.loc 1 1702 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              	.LVL185:
1703:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *netif;
1704:Middlewares/Third_Party/LwIP/src/core/netif.c ****   u8_t num;
1705:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1706:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1707:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1708:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (name == NULL) {
 1609              		.loc 1 1708 0
 1610 0000 D0B1     		cbz	r0, .L207
1702:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *netif;
 1611              		.loc 1 1702 0
 1612 0002 10B5     		push	{r4, lr}
 1613              	.LCFI28:
 1614              		.cfi_def_cfa_offset 8
 1615              		.cfi_offset 4, -8
 1616              		.cfi_offset 14, -4
 1617 0004 0446     		mov	r4, r0
1709:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return NULL;
1710:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1711:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1712:Middlewares/Third_Party/LwIP/src/core/netif.c ****   num = (u8_t)atoi(&name[2]);
 1618              		.loc 1 1712 0
 1619 0006 0230     		adds	r0, r0, #2
 1620              	.LVL186:
 1621 0008 FFF7FEFF 		bl	atoi
ARM GAS  /tmp/ccgR0vEp.s 			page 62


 1622              	.LVL187:
 1623 000c C2B2     		uxtb	r2, r0
 1624              	.LVL188:
1713:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
1714:Middlewares/Third_Party/LwIP/src/core/netif.c ****   NETIF_FOREACH(netif) {
 1625              		.loc 1 1714 0
 1626 000e 0B4B     		ldr	r3, .L213
 1627 0010 1868     		ldr	r0, [r3]
 1628              	.LVL189:
 1629 0012 00E0     		b	.L204
 1630              	.L205:
 1631              		.loc 1 1714 0 is_stmt 0 discriminator 2
 1632 0014 0068     		ldr	r0, [r0]
 1633              	.LVL190:
 1634              	.L204:
 1635              		.loc 1 1714 0 discriminator 1
 1636 0016 70B1     		cbz	r0, .L212
1715:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (num == netif->num &&
 1637              		.loc 1 1715 0 is_stmt 1
 1638 0018 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1639 001c 9A42     		cmp	r2, r3
 1640 001e F9D1     		bne	.L205
1716:Middlewares/Third_Party/LwIP/src/core/netif.c ****         name[0] == netif->name[0] &&
 1641              		.loc 1 1716 0 discriminator 1
 1642 0020 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1643 0022 90F83230 		ldrb	r3, [r0, #50]	@ zero_extendqisi2
1715:Middlewares/Third_Party/LwIP/src/core/netif.c ****     if (num == netif->num &&
 1644              		.loc 1 1715 0 discriminator 1
 1645 0026 9942     		cmp	r1, r3
 1646 0028 F4D1     		bne	.L205
1717:Middlewares/Third_Party/LwIP/src/core/netif.c ****         name[1] == netif->name[1]) {
 1647              		.loc 1 1717 0
 1648 002a 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 1649 002c 90F83330 		ldrb	r3, [r0, #51]	@ zero_extendqisi2
1716:Middlewares/Third_Party/LwIP/src/core/netif.c ****         name[0] == netif->name[0] &&
 1650              		.loc 1 1716 0
 1651 0030 9942     		cmp	r1, r3
 1652 0032 EFD1     		bne	.L205
1718:Middlewares/Third_Party/LwIP/src/core/netif.c ****       LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: found %c%c\n", name[0], name[1]));
1719:Middlewares/Third_Party/LwIP/src/core/netif.c ****       return netif;
1720:Middlewares/Third_Party/LwIP/src/core/netif.c ****     }
1721:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
1722:Middlewares/Third_Party/LwIP/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: didn't find %c%c\n", name[0], name[1]));
1723:Middlewares/Third_Party/LwIP/src/core/netif.c ****   return NULL;
1724:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 1653              		.loc 1 1724 0
 1654 0034 10BD     		pop	{r4, pc}
 1655              	.LVL191:
 1656              	.L212:
 1657 0036 10BD     		pop	{r4, pc}
 1658              	.LVL192:
 1659              	.L207:
 1660              	.LCFI29:
 1661              		.cfi_def_cfa_offset 0
 1662              		.cfi_restore 4
 1663              		.cfi_restore 14
1709:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
ARM GAS  /tmp/ccgR0vEp.s 			page 63


 1664              		.loc 1 1709 0
 1665 0038 0020     		movs	r0, #0
 1666              	.LVL193:
 1667 003a 7047     		bx	lr
 1668              	.L214:
 1669              		.align	2
 1670              	.L213:
 1671 003c 00000000 		.word	netif_list
 1672              		.cfi_endproc
 1673              	.LFE182:
 1675              		.section	.text.netif_name_to_index,"ax",%progbits
 1676              		.align	1
 1677              		.global	netif_name_to_index
 1678              		.syntax unified
 1679              		.thumb
 1680              		.thumb_func
 1681              		.fpu fpv5-d16
 1683              	netif_name_to_index:
 1684              	.LFB179:
1638:Middlewares/Third_Party/LwIP/src/core/netif.c ****   struct netif *netif = netif_find(name);
 1685              		.loc 1 1638 0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 0
 1688              		@ frame_needed = 0, uses_anonymous_args = 0
 1689              	.LVL194:
 1690 0000 08B5     		push	{r3, lr}
 1691              	.LCFI30:
 1692              		.cfi_def_cfa_offset 8
 1693              		.cfi_offset 3, -8
 1694              		.cfi_offset 14, -4
1639:Middlewares/Third_Party/LwIP/src/core/netif.c ****   if (netif != NULL) {
 1695              		.loc 1 1639 0
 1696 0002 FFF7FEFF 		bl	netif_find
 1697              	.LVL195:
1640:Middlewares/Third_Party/LwIP/src/core/netif.c ****     return netif_get_index(netif);
 1698              		.loc 1 1640 0
 1699 0006 20B1     		cbz	r0, .L217
1641:Middlewares/Third_Party/LwIP/src/core/netif.c ****   }
 1700              		.loc 1 1641 0
 1701 0008 90F83400 		ldrb	r0, [r0, #52]	@ zero_extendqisi2
 1702              	.LVL196:
 1703 000c 0130     		adds	r0, r0, #1
 1704 000e C0B2     		uxtb	r0, r0
 1705 0010 08BD     		pop	{r3, pc}
 1706              	.LVL197:
 1707              	.L217:
1644:Middlewares/Third_Party/LwIP/src/core/netif.c **** }
 1708              		.loc 1 1644 0
 1709 0012 0020     		movs	r0, #0
 1710              	.LVL198:
1645:Middlewares/Third_Party/LwIP/src/core/netif.c **** 
 1711              		.loc 1 1645 0
 1712 0014 08BD     		pop	{r3, pc}
 1713              		.cfi_endproc
 1714              	.LFE179:
 1716              		.comm	netif_default,4,4
 1717              		.comm	netif_list,4,4
ARM GAS  /tmp/ccgR0vEp.s 			page 64


 1718              		.section	.bss.netif_num,"aw",%nobits
 1719              		.set	.LANCHOR0,. + 0
 1722              	netif_num:
 1723 0000 00       		.space	1
 1724              		.section	.rodata.netif_add.str1.4,"aMS",%progbits,1
 1725              		.align	2
 1726              	.LC9:
 1727 0000 6E657469 		.ascii	"netif_add: invalid netif\000"
 1727      665F6164 
 1727      643A2069 
 1727      6E76616C 
 1727      6964206E 
 1728 0019 000000   		.space	3
 1729              	.LC10:
 1730 001c 6E657469 		.ascii	"netif_add: No init function given\000"
 1730      665F6164 
 1730      643A204E 
 1730      6F20696E 
 1730      69742066 
 1731 003e 0000     		.space	2
 1732              	.LC11:
 1733 0040 6E657469 		.ascii	"netif already added\000"
 1733      6620616C 
 1733      72656164 
 1733      79206164 
 1733      64656400 
 1734              	.LC12:
 1735 0054 746F6F20 		.ascii	"too many netifs, max. supported number is 255\000"
 1735      6D616E79 
 1735      206E6574 
 1735      6966732C 
 1735      206D6178 
 1736              		.section	.rodata.netif_do_set_ipaddr.str1.4,"aMS",%progbits,1
 1737              		.align	2
 1738              	.LC3:
 1739 0000 696E7661 		.ascii	"invalid pointer\000"
 1739      6C696420 
 1739      706F696E 
 1739      74657200 
 1740              		.section	.rodata.netif_input.str1.4,"aMS",%progbits,1
 1741              		.align	2
 1742              	.LC4:
 1743 0000 6E657469 		.ascii	"netif_input: invalid pbuf\000"
 1743      665F696E 
 1743      7075743A 
 1743      20696E76 
 1743      616C6964 
 1744 001a 0000     		.space	2
 1745              	.LC5:
 1746 001c 6E657469 		.ascii	"netif_input: invalid netif\000"
 1746      665F696E 
 1746      7075743A 
 1746      20696E76 
 1746      616C6964 
 1747              		.section	.rodata.netif_issue_reports.str1.4,"aMS",%progbits,1
 1748              		.align	2
 1749              	.LC0:
ARM GAS  /tmp/ccgR0vEp.s 			page 65


 1750 0000 4D696464 		.ascii	"Middlewares/Third_Party/LwIP/src/core/netif.c\000"
 1750      6C657761 
 1750      7265732F 
 1750      54686972 
 1750      645F5061 
 1751 002e 0000     		.space	2
 1752              	.LC1:
 1753 0030 6E657469 		.ascii	"netif_issue_reports: invalid netif\000"
 1753      665F6973 
 1753      7375655F 
 1753      7265706F 
 1753      7274733A 
 1754 0053 00       		.space	1
 1755              	.LC2:
 1756 0054 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 1756      7274696F 
 1756      6E202225 
 1756      73222066 
 1756      61696C65 
 1757              		.section	.rodata.netif_set_down.str1.4,"aMS",%progbits,1
 1758              		.align	2
 1759              	.LC14:
 1760 0000 6E657469 		.ascii	"netif_set_down: invalid netif\000"
 1760      665F7365 
 1760      745F646F 
 1760      776E3A20 
 1760      696E7661 
 1761              		.section	.rodata.netif_set_gw.str1.4,"aMS",%progbits,1
 1762              		.align	2
 1763              	.LC8:
 1764 0000 6E657469 		.ascii	"netif_set_gw: invalid netif\000"
 1764      665F7365 
 1764      745F6777 
 1764      3A20696E 
 1764      76616C69 
 1765              		.section	.rodata.netif_set_ipaddr.str1.4,"aMS",%progbits,1
 1766              		.align	2
 1767              	.LC6:
 1768 0000 6E657469 		.ascii	"netif_set_ipaddr: invalid netif\000"
 1768      665F7365 
 1768      745F6970 
 1768      61646472 
 1768      3A20696E 
 1769              		.section	.rodata.netif_set_link_down.str1.4,"aMS",%progbits,1
 1770              		.align	2
 1771              	.LC16:
 1772 0000 6E657469 		.ascii	"netif_set_link_down: invalid netif\000"
 1772      665F7365 
 1772      745F6C69 
 1772      6E6B5F64 
 1772      6F776E3A 
 1773              		.section	.rodata.netif_set_link_up.str1.4,"aMS",%progbits,1
 1774              		.align	2
 1775              	.LC15:
 1776 0000 6E657469 		.ascii	"netif_set_link_up: invalid netif\000"
 1776      665F7365 
 1776      745F6C69 
ARM GAS  /tmp/ccgR0vEp.s 			page 66


 1776      6E6B5F75 
 1776      703A2069 
 1777              		.section	.rodata.netif_set_netmask.str1.4,"aMS",%progbits,1
 1778              		.align	2
 1779              	.LC7:
 1780 0000 6E657469 		.ascii	"netif_set_netmask: invalid netif\000"
 1780      665F7365 
 1780      745F6E65 
 1780      746D6173 
 1780      6B3A2069 
 1781              		.section	.rodata.netif_set_up.str1.4,"aMS",%progbits,1
 1782              		.align	2
 1783              	.LC13:
 1784 0000 6E657469 		.ascii	"netif_set_up: invalid netif\000"
 1784      665F7365 
 1784      745F7570 
 1784      3A20696E 
 1784      76616C69 
 1785              		.text
 1786              	.Letext0:
 1787              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1788              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1789              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1790              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1791              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1792              		.file 7 "/usr/include/newlib/sys/lock.h"
 1793              		.file 8 "/usr/include/newlib/sys/_types.h"
 1794              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1795              		.file 10 "/usr/include/newlib/sys/reent.h"
 1796              		.file 11 "/usr/include/newlib/stdlib.h"
 1797              		.file 12 "/usr/include/newlib/time.h"
 1798              		.file 13 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1799              		.file 14 "/usr/include/newlib/ctype.h"
 1800              		.file 15 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1801              		.file 16 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1802              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1803              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 1804              		.file 19 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1805              		.file 20 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1806              		.file 21 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1807              		.file 22 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpbase.h"
 1808              		.file 23 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 1809              		.file 24 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 1810              		.file 25 "Middlewares/Third_Party/LwIP/src/include/lwip/tcp.h"
 1811              		.file 26 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/tcp_priv.h"
 1812              		.file 27 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/tcp.h"
 1813              		.file 28 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 1814              		.file 29 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 1815              		.file 30 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 1816              		.file 31 "Middlewares/Third_Party/LwIP/src/include/lwip/def.h"
 1817              		.file 32 "/usr/include/newlib/stdio.h"
 1818              		.file 33 "Middlewares/Third_Party/LwIP/src/include/lwip/dhcp.h"
 1819              		.file 34 "Middlewares/Third_Party/LwIP/src/include/lwip/etharp.h"
 1820              		.file 35 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4.h"
ARM GAS  /tmp/ccgR0vEp.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 netif.c
     /tmp/ccgR0vEp.s:17     .text.netif_do_set_netmask:0000000000000000 $t
     /tmp/ccgR0vEp.s:23     .text.netif_do_set_netmask:0000000000000000 netif_do_set_netmask
     /tmp/ccgR0vEp.s:62     .text.netif_do_set_gw:0000000000000000 $t
     /tmp/ccgR0vEp.s:68     .text.netif_do_set_gw:0000000000000000 netif_do_set_gw
     /tmp/ccgR0vEp.s:106    .text.netif_null_output_ip4:0000000000000000 $t
     /tmp/ccgR0vEp.s:112    .text.netif_null_output_ip4:0000000000000000 netif_null_output_ip4
     /tmp/ccgR0vEp.s:128    .text.netif_do_ip_addr_changed:0000000000000000 $t
     /tmp/ccgR0vEp.s:134    .text.netif_do_ip_addr_changed:0000000000000000 netif_do_ip_addr_changed
     /tmp/ccgR0vEp.s:163    .text.netif_issue_reports:0000000000000000 $t
     /tmp/ccgR0vEp.s:169    .text.netif_issue_reports:0000000000000000 netif_issue_reports
     /tmp/ccgR0vEp.s:229    .text.netif_issue_reports:0000000000000044 $d
     /tmp/ccgR0vEp.s:236    .text.netif_do_set_ipaddr:0000000000000000 $t
     /tmp/ccgR0vEp.s:242    .text.netif_do_set_ipaddr:0000000000000000 netif_do_set_ipaddr
     /tmp/ccgR0vEp.s:344    .text.netif_do_set_ipaddr:0000000000000060 $d
     /tmp/ccgR0vEp.s:351    .text.netif_init:0000000000000000 $t
     /tmp/ccgR0vEp.s:358    .text.netif_init:0000000000000000 netif_init
     /tmp/ccgR0vEp.s:370    .text.netif_input:0000000000000000 $t
     /tmp/ccgR0vEp.s:377    .text.netif_input:0000000000000000 netif_input
     /tmp/ccgR0vEp.s:444    .text.netif_input:0000000000000044 $d
     /tmp/ccgR0vEp.s:452    .text.netif_set_ipaddr:0000000000000000 $t
     /tmp/ccgR0vEp.s:459    .text.netif_set_ipaddr:0000000000000000 netif_set_ipaddr
     /tmp/ccgR0vEp.s:517    .text.netif_set_ipaddr:000000000000002c $d
     /tmp/ccgR0vEp.s:525    .text.netif_set_netmask:0000000000000000 $t
     /tmp/ccgR0vEp.s:532    .text.netif_set_netmask:0000000000000000 netif_set_netmask
     /tmp/ccgR0vEp.s:580    .text.netif_set_netmask:0000000000000028 $d
     /tmp/ccgR0vEp.s:588    .text.netif_set_gw:0000000000000000 $t
     /tmp/ccgR0vEp.s:595    .text.netif_set_gw:0000000000000000 netif_set_gw
     /tmp/ccgR0vEp.s:643    .text.netif_set_gw:0000000000000028 $d
     /tmp/ccgR0vEp.s:651    .text.netif_set_addr:0000000000000000 $t
     /tmp/ccgR0vEp.s:658    .text.netif_set_addr:0000000000000000 netif_set_addr
     /tmp/ccgR0vEp.s:776    .text.netif_set_addr:0000000000000068 $d
     /tmp/ccgR0vEp.s:781    .text.netif_add:0000000000000000 $t
     /tmp/ccgR0vEp.s:788    .text.netif_add:0000000000000000 netif_add
     /tmp/ccgR0vEp.s:1016   .text.netif_add:00000000000000fc $d
                            *COM*:0000000000000004 netif_list
     /tmp/ccgR0vEp.s:1030   .text.netif_add_noaddr:0000000000000000 $t
     /tmp/ccgR0vEp.s:1037   .text.netif_add_noaddr:0000000000000000 netif_add_noaddr
     /tmp/ccgR0vEp.s:1073   .text.netif_set_default:0000000000000000 $t
     /tmp/ccgR0vEp.s:1080   .text.netif_set_default:0000000000000000 netif_set_default
     /tmp/ccgR0vEp.s:1095   .text.netif_set_default:0000000000000008 $d
                            *COM*:0000000000000004 netif_default
     /tmp/ccgR0vEp.s:1100   .text.netif_set_up:0000000000000000 $t
     /tmp/ccgR0vEp.s:1107   .text.netif_set_up:0000000000000000 netif_set_up
     /tmp/ccgR0vEp.s:1152   .text.netif_set_up:0000000000000030 $d
     /tmp/ccgR0vEp.s:1159   .text.netif_set_down:0000000000000000 $t
     /tmp/ccgR0vEp.s:1166   .text.netif_set_down:0000000000000000 netif_set_down
     /tmp/ccgR0vEp.s:1213   .text.netif_set_down:0000000000000034 $d
     /tmp/ccgR0vEp.s:1220   .text.netif_remove:0000000000000000 $t
     /tmp/ccgR0vEp.s:1227   .text.netif_remove:0000000000000000 netif_remove
     /tmp/ccgR0vEp.s:1326   .text.netif_remove:000000000000005c $d
     /tmp/ccgR0vEp.s:1333   .text.netif_set_link_up:0000000000000000 $t
     /tmp/ccgR0vEp.s:1340   .text.netif_set_link_up:0000000000000000 netif_set_link_up
     /tmp/ccgR0vEp.s:1398   .text.netif_set_link_up:0000000000000044 $d
     /tmp/ccgR0vEp.s:1405   .text.netif_set_link_down:0000000000000000 $t
     /tmp/ccgR0vEp.s:1412   .text.netif_set_link_down:0000000000000000 netif_set_link_down
ARM GAS  /tmp/ccgR0vEp.s 			page 68


     /tmp/ccgR0vEp.s:1455   .text.netif_set_link_down:0000000000000030 $d
     /tmp/ccgR0vEp.s:1462   .text.netif_set_link_callback:0000000000000000 $t
     /tmp/ccgR0vEp.s:1469   .text.netif_set_link_callback:0000000000000000 netif_set_link_callback
     /tmp/ccgR0vEp.s:1487   .text.netif_get_by_index:0000000000000000 $t
     /tmp/ccgR0vEp.s:1494   .text.netif_get_by_index:0000000000000000 netif_get_by_index
     /tmp/ccgR0vEp.s:1535   .text.netif_get_by_index:0000000000000020 $d
     /tmp/ccgR0vEp.s:1540   .text.netif_index_to_name:0000000000000000 $t
     /tmp/ccgR0vEp.s:1547   .text.netif_index_to_name:0000000000000000 netif_index_to_name
     /tmp/ccgR0vEp.s:1595   .text.netif_find:0000000000000000 $t
     /tmp/ccgR0vEp.s:1602   .text.netif_find:0000000000000000 netif_find
     /tmp/ccgR0vEp.s:1671   .text.netif_find:000000000000003c $d
     /tmp/ccgR0vEp.s:1676   .text.netif_name_to_index:0000000000000000 $t
     /tmp/ccgR0vEp.s:1683   .text.netif_name_to_index:0000000000000000 netif_name_to_index
     /tmp/ccgR0vEp.s:1722   .bss.netif_num:0000000000000000 netif_num
     /tmp/ccgR0vEp.s:1723   .bss.netif_num:0000000000000000 $d
     /tmp/ccgR0vEp.s:1725   .rodata.netif_add.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1737   .rodata.netif_do_set_ipaddr.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1741   .rodata.netif_input.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1748   .rodata.netif_issue_reports.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1758   .rodata.netif_set_down.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1762   .rodata.netif_set_gw.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1766   .rodata.netif_set_ipaddr.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1770   .rodata.netif_set_link_down.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1774   .rodata.netif_set_link_up.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1778   .rodata.netif_set_netmask.str1.4:0000000000000000 $d
     /tmp/ccgR0vEp.s:1782   .rodata.netif_set_up.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
tcp_netif_ip_addr_changed
udp_netif_ip_addr_changed
printf
etharp_request
ip4_input
ethernet_input
ip_addr_any
etharp_cleanup_netif
dhcp_network_changed
lwip_itoa
atoi
