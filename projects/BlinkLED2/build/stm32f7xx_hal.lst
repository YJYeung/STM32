ARM GAS  /tmp/ccUAr0lh.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_MspInit:
  25              	.LFB143:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccUAr0lh.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.2.9
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x02) /*!< [23:16] sub1 version */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x09) /*!< [15:8]  sub2 version */
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
ARM GAS  /tmp/ccUAr0lh.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCLERATOR_ENABLE != 0)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    __HAL_FLASH_ART_ENABLE();
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCLERATOR_ENABLE */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
ARM GAS  /tmp/ccUAr0lh.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  27              		.loc 1 198 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
ARM GAS  /tmp/ccUAr0lh.s 			page 5


  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE143:
  36              		.section	.text.HAL_MspDeInit,"ax",%progbits
  37              		.align	1
  38              		.weak	HAL_MspDeInit
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu fpv5-d16
  44              	HAL_MspDeInit:
  45              	.LFB144:
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  46              		.loc 1 209 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51 0000 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE144:
  55              		.section	.text.HAL_DeInit,"ax",%progbits
  56              		.align	1
  57              		.global	HAL_DeInit
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv5-d16
  63              	HAL_DeInit:
  64              	.LFB142:
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  65              		.loc 1 169 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  69              		.loc 1 169 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  75              		.loc 1 171 0
  76 0002 094B     		ldr	r3, .L5
  77 0004 4FF0FF32 		mov	r2, #-1
  78 0008 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccUAr0lh.s 			page 6


 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  79              		.loc 1 172 0
  80 000a 0024     		movs	r4, #0
  81 000c 1C62     		str	r4, [r3, #32]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  82              		.loc 1 174 0
  83 000e 5A62     		str	r2, [r3, #36]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84              		.loc 1 175 0
  85 0010 5C62     		str	r4, [r3, #36]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  86              		.loc 1 177 0
  87 0012 1A61     		str	r2, [r3, #16]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88              		.loc 1 178 0
  89 0014 1C61     		str	r4, [r3, #16]
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  90              		.loc 1 180 0
  91 0016 5A61     		str	r2, [r3, #20]
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  92              		.loc 1 181 0
  93 0018 5C61     		str	r4, [r3, #20]
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  94              		.loc 1 183 0
  95 001a 9A61     		str	r2, [r3, #24]
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  96              		.loc 1 184 0
  97 001c 9C61     		str	r4, [r3, #24]
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
  98              		.loc 1 187 0
  99 001e FFF7FEFF 		bl	HAL_MspDeInit
 100              	.LVL0:
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 101              		.loc 1 191 0
 102 0022 2046     		mov	r0, r4
 103 0024 10BD     		pop	{r4, pc}
 104              	.L6:
 105 0026 00BF     		.align	2
 106              	.L5:
 107 0028 00380240 		.word	1073887232
 108              		.cfi_endproc
 109              	.LFE142:
 111              		.section	.text.HAL_InitTick,"ax",%progbits
 112              		.align	1
 113              		.weak	HAL_InitTick
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv5-d16
 119              	HAL_InitTick:
 120              	.LFB145:
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
ARM GAS  /tmp/ccUAr0lh.s 			page 7


 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 121              		.loc 1 232 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL1:
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 132              		.loc 1 234 0
 133 0004 0E4B     		ldr	r3, .L13
 134 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 135              	.LVL2:
 136 0008 4FF47A73 		mov	r3, #1000
 137 000c B3FBF0F3 		udiv	r3, r3, r0
 138 0010 0C4A     		ldr	r2, .L13+4
 139 0012 1068     		ldr	r0, [r2]
 140 0014 B0FBF3F0 		udiv	r0, r0, r3
 141 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL3:
 143 001c 68B9     		cbnz	r0, .L9
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 144              		.loc 1 240 0
 145 001e 0F2C     		cmp	r4, #15
 146 0020 01D9     		bls	.L12
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
ARM GAS  /tmp/ccUAr0lh.s 			page 8


 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 147              		.loc 1 247 0
 148 0022 0120     		movs	r0, #1
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 149              		.loc 1 252 0
 150 0024 10BD     		pop	{r4, pc}
 151              	.LVL4:
 152              	.L12:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 153              		.loc 1 242 0
 154 0026 0022     		movs	r2, #0
 155 0028 2146     		mov	r1, r4
 156 002a 4FF0FF30 		mov	r0, #-1
 157 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 158              	.LVL5:
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 159              		.loc 1 243 0
 160 0032 054B     		ldr	r3, .L13+8
 161 0034 1C60     		str	r4, [r3]
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 162              		.loc 1 251 0
 163 0036 0020     		movs	r0, #0
 164 0038 10BD     		pop	{r4, pc}
 165              	.LVL6:
 166              	.L9:
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 167              		.loc 1 236 0
 168 003a 0120     		movs	r0, #1
 169 003c 10BD     		pop	{r4, pc}
 170              	.LVL7:
 171              	.L14:
 172 003e 00BF     		.align	2
 173              	.L13:
 174 0040 00000000 		.word	.LANCHOR0
 175 0044 00000000 		.word	SystemCoreClock
 176 0048 00000000 		.word	.LANCHOR1
 177              		.cfi_endproc
 178              	.LFE145:
 180              		.section	.text.HAL_Init,"ax",%progbits
 181              		.align	1
 182              		.global	HAL_Init
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv5-d16
 188              	HAL_Init:
 189              	.LFB141:
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 190              		.loc 1 139 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccUAr0lh.s 			page 9


 195              	.LCFI2:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 199              		.loc 1 151 0
 200 0002 0320     		movs	r0, #3
 201 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 202              	.LVL8:
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 203              		.loc 1 154 0
 204 0008 0020     		movs	r0, #0
 205 000a FFF7FEFF 		bl	HAL_InitTick
 206              	.LVL9:
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 207              		.loc 1 157 0
 208 000e FFF7FEFF 		bl	HAL_MspInit
 209              	.LVL10:
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 210              		.loc 1 161 0
 211 0012 0020     		movs	r0, #0
 212 0014 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE141:
 216              		.section	.text.HAL_IncTick,"ax",%progbits
 217              		.align	1
 218              		.weak	HAL_IncTick
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv5-d16
 224              	HAL_IncTick:
 225              	.LFB146:
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/ccUAr0lh.s 			page 10


 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 226              		.loc 1 291 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 231              		.loc 1 292 0
 232 0000 034A     		ldr	r2, .L18
 233 0002 1168     		ldr	r1, [r2]
 234 0004 034B     		ldr	r3, .L18+4
 235 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 236 0008 0B44     		add	r3, r3, r1
 237 000a 1360     		str	r3, [r2]
 238 000c 7047     		bx	lr
 239              	.L19:
 240 000e 00BF     		.align	2
 241              	.L18:
 242 0010 00000000 		.word	uwTick
 243 0014 00000000 		.word	.LANCHOR0
 244              		.cfi_endproc
 245              	.LFE146:
 247              		.section	.text.HAL_GetTick,"ax",%progbits
 248              		.align	1
 249              		.weak	HAL_GetTick
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv5-d16
 255              	HAL_GetTick:
 256              	.LFB147:
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 257              		.loc 1 302 0
 258              		.cfi_startproc
ARM GAS  /tmp/ccUAr0lh.s 			page 11


 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 262              		.loc 1 303 0
 263 0000 014B     		ldr	r3, .L21
 264 0002 1868     		ldr	r0, [r3]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 265              		.loc 1 304 0
 266 0004 7047     		bx	lr
 267              	.L22:
 268 0006 00BF     		.align	2
 269              	.L21:
 270 0008 00000000 		.word	uwTick
 271              		.cfi_endproc
 272              	.LFE147:
 274              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 275              		.align	1
 276              		.global	HAL_GetTickPrio
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv5-d16
 282              	HAL_GetTickPrio:
 283              	.LFB148:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 284              		.loc 1 311 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 289              		.loc 1 313 0
 290 0000 014B     		ldr	r3, .L24
 291 0002 1868     		ldr	r0, [r3]
 292 0004 7047     		bx	lr
 293              	.L25:
 294 0006 00BF     		.align	2
 295              	.L24:
 296 0008 00000000 		.word	.LANCHOR1
 297              		.cfi_endproc
 298              	.LFE148:
 300              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 301              		.align	1
 302              		.global	HAL_SetTickFreq
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv5-d16
 308              	HAL_SetTickFreq:
ARM GAS  /tmp/ccUAr0lh.s 			page 12


 309              	.LFB149:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 310              		.loc 1 320 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              	.LVL11:
 315 0000 10B5     		push	{r4, lr}
 316              	.LCFI3:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
 320              	.LVL12:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 321              		.loc 1 326 0
 322 0002 084B     		ldr	r3, .L30
 323 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 324 0006 8442     		cmp	r4, r0
 325 0008 0AD0     		beq	.L28
 326              	.LVL13:
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Back up uwTickFreq frequency */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     prevTickFreq = uwTickFreq;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 327              		.loc 1 332 0
 328 000a 1870     		strb	r0, [r3]
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 329              		.loc 1 335 0
 330 000c 064B     		ldr	r3, .L30+4
 331 000e 1868     		ldr	r0, [r3]
 332              	.LVL14:
 333 0010 FFF7FEFF 		bl	HAL_InitTick
 334              	.LVL15:
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     if (status != HAL_OK)
 335              		.loc 1 337 0
 336 0014 0346     		mov	r3, r0
 337 0016 08B1     		cbz	r0, .L27
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     {
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       /* Restore previous tick frequency */
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       uwTickFreq = prevTickFreq;
 338              		.loc 1 340 0
ARM GAS  /tmp/ccUAr0lh.s 			page 13


 339 0018 024A     		ldr	r2, .L30
 340 001a 1470     		strb	r4, [r2]
 341              	.LVL16:
 342              	.L27:
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     }
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 343              		.loc 1 345 0
 344 001c 1846     		mov	r0, r3
 345 001e 10BD     		pop	{r4, pc}
 346              	.LVL17:
 347              	.L28:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 348              		.loc 1 321 0
 349 0020 0023     		movs	r3, #0
 350 0022 FBE7     		b	.L27
 351              	.L31:
 352              		.align	2
 353              	.L30:
 354 0024 00000000 		.word	.LANCHOR0
 355 0028 00000000 		.word	.LANCHOR1
 356              		.cfi_endproc
 357              	.LFE149:
 359              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 360              		.align	1
 361              		.global	HAL_GetTickFreq
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv5-d16
 367              	HAL_GetTickFreq:
 368              	.LFB150:
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 369              		.loc 1 352 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 374              		.loc 1 354 0
 375 0000 014B     		ldr	r3, .L33
 376 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 377 0004 7047     		bx	lr
 378              	.L34:
 379 0006 00BF     		.align	2
 380              	.L33:
 381 0008 00000000 		.word	.LANCHOR0
 382              		.cfi_endproc
ARM GAS  /tmp/ccUAr0lh.s 			page 14


 383              	.LFE150:
 385              		.section	.text.HAL_Delay,"ax",%progbits
 386              		.align	1
 387              		.weak	HAL_Delay
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv5-d16
 393              	HAL_Delay:
 394              	.LFB151:
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 395              		.loc 1 368 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              	.LVL18:
 400 0000 38B5     		push	{r3, r4, r5, lr}
 401              	.LCFI4:
 402              		.cfi_def_cfa_offset 16
 403              		.cfi_offset 3, -16
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 5, -8
 406              		.cfi_offset 14, -4
 407 0002 0446     		mov	r4, r0
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 408              		.loc 1 369 0
 409 0004 FFF7FEFF 		bl	HAL_GetTick
 410              	.LVL19:
 411 0008 0546     		mov	r5, r0
 412              	.LVL20:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 413              		.loc 1 373 0
 414 000a B4F1FF3F 		cmp	r4, #-1
 415 000e 02D0     		beq	.L37
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 416              		.loc 1 375 0
 417 0010 044B     		ldr	r3, .L39
 418 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419 0014 1C44     		add	r4, r4, r3
 420              	.LVL21:
ARM GAS  /tmp/ccUAr0lh.s 			page 15


 421              	.L37:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 422              		.loc 1 378 0 discriminator 1
 423 0016 FFF7FEFF 		bl	HAL_GetTick
 424              	.LVL22:
 425 001a 401B     		subs	r0, r0, r5
 426 001c 8442     		cmp	r4, r0
 427 001e FAD8     		bhi	.L37
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 428              		.loc 1 381 0
 429 0020 38BD     		pop	{r3, r4, r5, pc}
 430              	.LVL23:
 431              	.L40:
 432 0022 00BF     		.align	2
 433              	.L39:
 434 0024 00000000 		.word	.LANCHOR0
 435              		.cfi_endproc
 436              	.LFE151:
 438              		.section	.text.HAL_SuspendTick,"ax",%progbits
 439              		.align	1
 440              		.weak	HAL_SuspendTick
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv5-d16
 446              	HAL_SuspendTick:
 447              	.LFB152:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 448              		.loc 1 394 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 453              		.loc 1 396 0
 454 0000 024A     		ldr	r2, .L42
 455 0002 1368     		ldr	r3, [r2]
 456 0004 23F00203 		bic	r3, r3, #2
 457 0008 1360     		str	r3, [r2]
 458 000a 7047     		bx	lr
ARM GAS  /tmp/ccUAr0lh.s 			page 16


 459              	.L43:
 460              		.align	2
 461              	.L42:
 462 000c 10E000E0 		.word	-536813552
 463              		.cfi_endproc
 464              	.LFE152:
 466              		.section	.text.HAL_ResumeTick,"ax",%progbits
 467              		.align	1
 468              		.weak	HAL_ResumeTick
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu fpv5-d16
 474              	HAL_ResumeTick:
 475              	.LFB153:
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 476              		.loc 1 410 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 481              		.loc 1 412 0
 482 0000 024A     		ldr	r2, .L45
 483 0002 1368     		ldr	r3, [r2]
 484 0004 43F00203 		orr	r3, r3, #2
 485 0008 1360     		str	r3, [r2]
 486 000a 7047     		bx	lr
 487              	.L46:
 488              		.align	2
 489              	.L45:
 490 000c 10E000E0 		.word	-536813552
 491              		.cfi_endproc
 492              	.LFE153:
 494              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 495              		.align	1
 496              		.global	HAL_GetHalVersion
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu fpv5-d16
 502              	HAL_GetHalVersion:
 503              	.LFB154:
ARM GAS  /tmp/ccUAr0lh.s 			page 17


 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 504              		.loc 1 420 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  return __STM32F7xx_HAL_VERSION;
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 509              		.loc 1 422 0
 510 0000 0048     		ldr	r0, .L48
 511 0002 7047     		bx	lr
 512              	.L49:
 513              		.align	2
 514              	.L48:
 515 0004 00090201 		.word	16910592
 516              		.cfi_endproc
 517              	.LFE154:
 519              		.section	.text.HAL_GetREVID,"ax",%progbits
 520              		.align	1
 521              		.global	HAL_GetREVID
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv5-d16
 527              	HAL_GetREVID:
 528              	.LFB155:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 529              		.loc 1 429 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 534              		.loc 1 430 0
 535 0000 014B     		ldr	r3, .L51
 536 0002 1868     		ldr	r0, [r3]
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 537              		.loc 1 431 0
 538 0004 000C     		lsrs	r0, r0, #16
 539 0006 7047     		bx	lr
 540              	.L52:
 541              		.align	2
 542              	.L51:
 543 0008 002004E0 		.word	-536600576
ARM GAS  /tmp/ccUAr0lh.s 			page 18


 544              		.cfi_endproc
 545              	.LFE155:
 547              		.section	.text.HAL_GetDEVID,"ax",%progbits
 548              		.align	1
 549              		.global	HAL_GetDEVID
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv5-d16
 555              	HAL_GetDEVID:
 556              	.LFB156:
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 557              		.loc 1 438 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 562              		.loc 1 439 0
 563 0000 024B     		ldr	r3, .L54
 564 0002 1868     		ldr	r0, [r3]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 565              		.loc 1 440 0
 566 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 567 0008 7047     		bx	lr
 568              	.L55:
 569 000a 00BF     		.align	2
 570              	.L54:
 571 000c 002004E0 		.word	-536600576
 572              		.cfi_endproc
 573              	.LFE156:
 575              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 576              		.align	1
 577              		.global	HAL_GetUIDw0
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv5-d16
 583              	HAL_GetUIDw0:
 584              	.LFB157:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 585              		.loc 1 447 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccUAr0lh.s 			page 19


 589              		@ link register save eliminated.
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 590              		.loc 1 449 0
 591 0000 014B     		ldr	r3, .L57
 592 0002 1868     		ldr	r0, [r3]
 593 0004 7047     		bx	lr
 594              	.L58:
 595 0006 00BF     		.align	2
 596              	.L57:
 597 0008 20F4F01F 		.word	535884832
 598              		.cfi_endproc
 599              	.LFE157:
 601              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 602              		.align	1
 603              		.global	HAL_GetUIDw1
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv5-d16
 609              	HAL_GetUIDw1:
 610              	.LFB158:
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 611              		.loc 1 456 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 616              		.loc 1 458 0
 617 0000 014B     		ldr	r3, .L60
 618 0002 1868     		ldr	r0, [r3]
 619 0004 7047     		bx	lr
 620              	.L61:
 621 0006 00BF     		.align	2
 622              	.L60:
 623 0008 24F4F01F 		.word	535884836
 624              		.cfi_endproc
 625              	.LFE158:
 627              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 628              		.align	1
 629              		.global	HAL_GetUIDw2
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv5-d16
 635              	HAL_GetUIDw2:
 636              	.LFB159:
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
ARM GAS  /tmp/ccUAr0lh.s 			page 20


 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 637              		.loc 1 465 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 642              		.loc 1 467 0
 643 0000 014B     		ldr	r3, .L63
 644 0002 1868     		ldr	r0, [r3]
 645 0004 7047     		bx	lr
 646              	.L64:
 647 0006 00BF     		.align	2
 648              	.L63:
 649 0008 28F4F01F 		.word	535884840
 650              		.cfi_endproc
 651              	.LFE159:
 653              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 654              		.align	1
 655              		.global	HAL_DBGMCU_EnableDBGSleepMode
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv5-d16
 661              	HAL_DBGMCU_EnableDBGSleepMode:
 662              	.LFB160:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 663              		.loc 1 474 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 668              		.loc 1 475 0
 669 0000 024A     		ldr	r2, .L66
 670 0002 5368     		ldr	r3, [r2, #4]
 671 0004 43F00103 		orr	r3, r3, #1
 672 0008 5360     		str	r3, [r2, #4]
 673 000a 7047     		bx	lr
 674              	.L67:
 675              		.align	2
 676              	.L66:
 677 000c 002004E0 		.word	-536600576
 678              		.cfi_endproc
 679              	.LFE160:
 681              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
ARM GAS  /tmp/ccUAr0lh.s 			page 21


 682              		.align	1
 683              		.global	HAL_DBGMCU_DisableDBGSleepMode
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv5-d16
 689              	HAL_DBGMCU_DisableDBGSleepMode:
 690              	.LFB161:
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 691              		.loc 1 483 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 696              		.loc 1 484 0
 697 0000 024A     		ldr	r2, .L69
 698 0002 5368     		ldr	r3, [r2, #4]
 699 0004 23F00103 		bic	r3, r3, #1
 700 0008 5360     		str	r3, [r2, #4]
 701 000a 7047     		bx	lr
 702              	.L70:
 703              		.align	2
 704              	.L69:
 705 000c 002004E0 		.word	-536600576
 706              		.cfi_endproc
 707              	.LFE161:
 709              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 710              		.align	1
 711              		.global	HAL_DBGMCU_EnableDBGStopMode
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv5-d16
 717              	HAL_DBGMCU_EnableDBGStopMode:
 718              	.LFB162:
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 719              		.loc 1 492 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
ARM GAS  /tmp/ccUAr0lh.s 			page 22


 724              		.loc 1 493 0
 725 0000 024A     		ldr	r2, .L72
 726 0002 5368     		ldr	r3, [r2, #4]
 727 0004 43F00203 		orr	r3, r3, #2
 728 0008 5360     		str	r3, [r2, #4]
 729 000a 7047     		bx	lr
 730              	.L73:
 731              		.align	2
 732              	.L72:
 733 000c 002004E0 		.word	-536600576
 734              		.cfi_endproc
 735              	.LFE162:
 737              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 738              		.align	1
 739              		.global	HAL_DBGMCU_DisableDBGStopMode
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv5-d16
 745              	HAL_DBGMCU_DisableDBGStopMode:
 746              	.LFB163:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 747              		.loc 1 501 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 752              		.loc 1 502 0
 753 0000 024A     		ldr	r2, .L75
 754 0002 5368     		ldr	r3, [r2, #4]
 755 0004 23F00203 		bic	r3, r3, #2
 756 0008 5360     		str	r3, [r2, #4]
 757 000a 7047     		bx	lr
 758              	.L76:
 759              		.align	2
 760              	.L75:
 761 000c 002004E0 		.word	-536600576
 762              		.cfi_endproc
 763              	.LFE163:
 765              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 766              		.align	1
 767              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv5-d16
 773              	HAL_DBGMCU_EnableDBGStandbyMode:
 774              	.LFB164:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
ARM GAS  /tmp/ccUAr0lh.s 			page 23


 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 775              		.loc 1 510 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 780              		.loc 1 511 0
 781 0000 024A     		ldr	r2, .L78
 782 0002 5368     		ldr	r3, [r2, #4]
 783 0004 43F00403 		orr	r3, r3, #4
 784 0008 5360     		str	r3, [r2, #4]
 785 000a 7047     		bx	lr
 786              	.L79:
 787              		.align	2
 788              	.L78:
 789 000c 002004E0 		.word	-536600576
 790              		.cfi_endproc
 791              	.LFE164:
 793              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 794              		.align	1
 795              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 799              		.fpu fpv5-d16
 801              	HAL_DBGMCU_DisableDBGStandbyMode:
 802              	.LFB165:
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 803              		.loc 1 519 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 808              		.loc 1 520 0
 809 0000 024A     		ldr	r2, .L81
 810 0002 5368     		ldr	r3, [r2, #4]
 811 0004 23F00403 		bic	r3, r3, #4
 812 0008 5360     		str	r3, [r2, #4]
 813 000a 7047     		bx	lr
 814              	.L82:
 815              		.align	2
 816              	.L81:
ARM GAS  /tmp/ccUAr0lh.s 			page 24


 817 000c 002004E0 		.word	-536600576
 818              		.cfi_endproc
 819              	.LFE165:
 821              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 822              		.align	1
 823              		.global	HAL_EnableCompensationCell
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv5-d16
 829              	HAL_EnableCompensationCell:
 830              	.LFB166:
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 831              		.loc 1 530 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
 836              		.loc 1 531 0
 837 0000 024A     		ldr	r2, .L84
 838 0002 136A     		ldr	r3, [r2, #32]
 839 0004 43F00103 		orr	r3, r3, #1
 840 0008 1362     		str	r3, [r2, #32]
 841 000a 7047     		bx	lr
 842              	.L85:
 843              		.align	2
 844              	.L84:
 845 000c 00380140 		.word	1073821696
 846              		.cfi_endproc
 847              	.LFE166:
 849              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 850              		.align	1
 851              		.global	HAL_DisableCompensationCell
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 855              		.fpu fpv5-d16
 857              	HAL_DisableCompensationCell:
 858              	.LFB167:
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
ARM GAS  /tmp/ccUAr0lh.s 			page 25


 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 859              		.loc 1 541 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              		@ link register save eliminated.
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
 864              		.loc 1 542 0
 865 0000 024A     		ldr	r2, .L87
 866 0002 136A     		ldr	r3, [r2, #32]
 867 0004 23F00103 		bic	r3, r3, #1
 868 0008 1362     		str	r3, [r2, #32]
 869 000a 7047     		bx	lr
 870              	.L88:
 871              		.align	2
 872              	.L87:
 873 000c 00380140 		.word	1073821696
 874              		.cfi_endproc
 875              	.LFE167:
 877              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 878              		.align	1
 879              		.global	HAL_EnableFMCMemorySwapping
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu fpv5-d16
 885              	HAL_EnableFMCMemorySwapping:
 886              	.LFB168:
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 887              		.loc 1 554 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
 892              		.loc 1 555 0
 893 0000 024A     		ldr	r2, .L90
 894 0002 1368     		ldr	r3, [r2]
 895 0004 43F48063 		orr	r3, r3, #1024
 896 0008 1360     		str	r3, [r2]
 897 000a 7047     		bx	lr
 898              	.L91:
 899              		.align	2
 900              	.L90:
 901 000c 00380140 		.word	1073821696
ARM GAS  /tmp/ccUAr0lh.s 			page 26


 902              		.cfi_endproc
 903              	.LFE168:
 905              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 906              		.align	1
 907              		.global	HAL_DisableFMCMemorySwapping
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 911              		.fpu fpv5-d16
 913              	HAL_DisableFMCMemorySwapping:
 914              	.LFB169:
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 915              		.loc 1 567 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 920              		.loc 1 569 0
 921 0000 024A     		ldr	r2, .L93
 922 0002 1368     		ldr	r3, [r2]
 923 0004 23F44063 		bic	r3, r3, #3072
 924 0008 1360     		str	r3, [r2]
 925 000a 7047     		bx	lr
 926              	.L94:
 927              		.align	2
 928              	.L93:
 929 000c 00380140 		.word	1073821696
 930              		.cfi_endproc
 931              	.LFE169:
 933              		.section	.text.HAL_EnableMemorySwappingBank,"ax",%progbits
 934              		.align	1
 935              		.global	HAL_EnableMemorySwappingBank
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
 939              		.fpu fpv5-d16
 941              	HAL_EnableMemorySwappingBank:
 942              	.LFB170:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if defined (STM32F765xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Enable the Internal FLASH Bank Swapping.
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
ARM GAS  /tmp/ccUAr0lh.s 			page 27


 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   Flash Bank2 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank1 mapped at 0x08100000 (AXI) (aliased at 0x00300000 (TCM))   
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableMemorySwappingBank(void)
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 943              		.loc 1 584 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 948              		.loc 1 585 0
 949 0000 024A     		ldr	r2, .L96
 950 0002 1368     		ldr	r3, [r2]
 951 0004 43F48073 		orr	r3, r3, #256
 952 0008 1360     		str	r3, [r2]
 953 000a 7047     		bx	lr
 954              	.L97:
 955              		.align	2
 956              	.L96:
 957 000c 00380140 		.word	1073821696
 958              		.cfi_endproc
 959              	.LFE170:
 961              		.section	.text.HAL_DisableMemorySwappingBank,"ax",%progbits
 962              		.align	1
 963              		.global	HAL_DisableMemorySwappingBank
 964              		.syntax unified
 965              		.thumb
 966              		.thumb_func
 967              		.fpu fpv5-d16
 969              	HAL_DisableMemorySwappingBank:
 970              	.LFB171:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Disable the Internal FLASH Bank Swapping.
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   The default state : Flash Bank1 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank2 mapped at 0x08100000 (AXI)( aliased at 0x00300000 (TCM)) 
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *           
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableMemorySwappingBank(void)
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 971              		.loc 1 599 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              		@ link register save eliminated.
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 976              		.loc 1 600 0
ARM GAS  /tmp/ccUAr0lh.s 			page 28


 977 0000 024A     		ldr	r2, .L99
 978 0002 1368     		ldr	r3, [r2]
 979 0004 23F48073 		bic	r3, r3, #256
 980 0008 1360     		str	r3, [r2]
 981 000a 7047     		bx	lr
 982              	.L100:
 983              		.align	2
 984              	.L99:
 985 000c 00380140 		.word	1073821696
 986              		.cfi_endproc
 987              	.LFE171:
 989              		.global	uwTickFreq
 990              		.global	uwTickPrio
 991              		.comm	uwTick,4,4
 992              		.section	.data.uwTickFreq,"aw",%progbits
 993              		.set	.LANCHOR0,. + 0
 996              	uwTickFreq:
 997 0000 01       		.byte	1
 998              		.section	.data.uwTickPrio,"aw",%progbits
 999              		.align	2
 1000              		.set	.LANCHOR1,. + 0
 1003              	uwTickPrio:
 1004 0000 10000000 		.word	16
 1005              		.text
 1006              	.Letext0:
 1007              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1008              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1009              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1010              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1011              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1012              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1013              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1014              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccUAr0lh.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal.c
     /tmp/ccUAr0lh.s:17     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccUAr0lh.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccUAr0lh.s:37     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccUAr0lh.s:44     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccUAr0lh.s:56     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccUAr0lh.s:63     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccUAr0lh.s:107    .text.HAL_DeInit:0000000000000028 $d
     /tmp/ccUAr0lh.s:112    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccUAr0lh.s:119    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccUAr0lh.s:174    .text.HAL_InitTick:0000000000000040 $d
     /tmp/ccUAr0lh.s:181    .text.HAL_Init:0000000000000000 $t
     /tmp/ccUAr0lh.s:188    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccUAr0lh.s:217    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccUAr0lh.s:224    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccUAr0lh.s:242    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccUAr0lh.s:248    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccUAr0lh.s:255    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccUAr0lh.s:270    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccUAr0lh.s:275    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccUAr0lh.s:282    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccUAr0lh.s:296    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccUAr0lh.s:301    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccUAr0lh.s:308    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccUAr0lh.s:354    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccUAr0lh.s:360    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccUAr0lh.s:367    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccUAr0lh.s:381    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccUAr0lh.s:386    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccUAr0lh.s:393    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccUAr0lh.s:434    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccUAr0lh.s:439    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccUAr0lh.s:446    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccUAr0lh.s:462    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccUAr0lh.s:467    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccUAr0lh.s:474    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccUAr0lh.s:490    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccUAr0lh.s:495    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccUAr0lh.s:502    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccUAr0lh.s:515    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccUAr0lh.s:520    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccUAr0lh.s:527    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccUAr0lh.s:543    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccUAr0lh.s:548    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccUAr0lh.s:555    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccUAr0lh.s:571    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccUAr0lh.s:576    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccUAr0lh.s:583    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccUAr0lh.s:597    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccUAr0lh.s:602    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccUAr0lh.s:609    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccUAr0lh.s:623    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccUAr0lh.s:628    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccUAr0lh.s:635    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccUAr0lh.s:649    .text.HAL_GetUIDw2:0000000000000008 $d
ARM GAS  /tmp/ccUAr0lh.s 			page 30


     /tmp/ccUAr0lh.s:654    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccUAr0lh.s:661    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccUAr0lh.s:677    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccUAr0lh.s:682    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccUAr0lh.s:689    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccUAr0lh.s:705    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccUAr0lh.s:710    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccUAr0lh.s:717    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccUAr0lh.s:733    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccUAr0lh.s:738    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccUAr0lh.s:745    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccUAr0lh.s:761    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccUAr0lh.s:766    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccUAr0lh.s:773    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccUAr0lh.s:789    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccUAr0lh.s:794    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccUAr0lh.s:801    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccUAr0lh.s:817    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccUAr0lh.s:822    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccUAr0lh.s:829    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccUAr0lh.s:845    .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/ccUAr0lh.s:850    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccUAr0lh.s:857    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccUAr0lh.s:873    .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/ccUAr0lh.s:878    .text.HAL_EnableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccUAr0lh.s:885    .text.HAL_EnableFMCMemorySwapping:0000000000000000 HAL_EnableFMCMemorySwapping
     /tmp/ccUAr0lh.s:901    .text.HAL_EnableFMCMemorySwapping:000000000000000c $d
     /tmp/ccUAr0lh.s:906    .text.HAL_DisableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccUAr0lh.s:913    .text.HAL_DisableFMCMemorySwapping:0000000000000000 HAL_DisableFMCMemorySwapping
     /tmp/ccUAr0lh.s:929    .text.HAL_DisableFMCMemorySwapping:000000000000000c $d
     /tmp/ccUAr0lh.s:934    .text.HAL_EnableMemorySwappingBank:0000000000000000 $t
     /tmp/ccUAr0lh.s:941    .text.HAL_EnableMemorySwappingBank:0000000000000000 HAL_EnableMemorySwappingBank
     /tmp/ccUAr0lh.s:957    .text.HAL_EnableMemorySwappingBank:000000000000000c $d
     /tmp/ccUAr0lh.s:962    .text.HAL_DisableMemorySwappingBank:0000000000000000 $t
     /tmp/ccUAr0lh.s:969    .text.HAL_DisableMemorySwappingBank:0000000000000000 HAL_DisableMemorySwappingBank
     /tmp/ccUAr0lh.s:985    .text.HAL_DisableMemorySwappingBank:000000000000000c $d
     /tmp/ccUAr0lh.s:996    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccUAr0lh.s:1003   .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccUAr0lh.s:999    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
