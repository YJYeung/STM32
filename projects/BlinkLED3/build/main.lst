ARM GAS  /tmp/cczl4UIe.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.Error_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	Error_Handler
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	Error_Handler:
  25              		.fnstart
  26              	.LFB165:
  27              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.</center></h2>
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.cpp ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.cpp ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.cpp ****   *                             www.st.com/SLA0044
  16:Core/Src/main.cpp ****   *
  17:Core/Src/main.cpp ****   ******************************************************************************
  18:Core/Src/main.cpp ****   */
  19:Core/Src/main.cpp **** /* USER CODE END Header */
  20:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.cpp **** #include "main.h"
  22:Core/Src/main.cpp **** #include "lwip.h"
  23:Core/Src/main.cpp **** #include "usart.h"
  24:Core/Src/main.cpp **** #include "usb_device.h"
  25:Core/Src/main.cpp **** #include "gpio.h"
  26:Core/Src/main.cpp **** 
  27:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.cpp **** 
  30:Core/Src/main.cpp **** /* USER CODE END Includes */
  31:Core/Src/main.cpp **** 
ARM GAS  /tmp/cczl4UIe.s 			page 2


  32:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.cpp **** 
  35:Core/Src/main.cpp **** /* USER CODE END PTD */
  36:Core/Src/main.cpp **** 
  37:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  39:Core/Src/main.cpp **** /* USER CODE END PD */
  40:Core/Src/main.cpp **** 
  41:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  43:Core/Src/main.cpp **** 
  44:Core/Src/main.cpp **** /* USER CODE END PM */
  45:Core/Src/main.cpp **** 
  46:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.cpp **** 
  48:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  49:Core/Src/main.cpp **** 
  50:Core/Src/main.cpp **** /* USER CODE END PV */
  51:Core/Src/main.cpp **** 
  52:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.cpp **** extern "C" void SystemClock_Config(void);
  54:Core/Src/main.cpp **** //void SystemClock_Config(void);
  55:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.cpp **** 
  57:Core/Src/main.cpp **** /* USER CODE END PFP */
  58:Core/Src/main.cpp **** 
  59:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.cpp **** 
  62:Core/Src/main.cpp **** /* USER CODE END 0 */
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** /**
  65:Core/Src/main.cpp ****   * @brief  The application entry point.
  66:Core/Src/main.cpp ****   * @retval int
  67:Core/Src/main.cpp ****   */
  68:Core/Src/main.cpp **** int main(void)
  69:Core/Src/main.cpp **** {
  70:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.cpp **** 
  72:Core/Src/main.cpp ****   /* USER CODE END 1 */
  73:Core/Src/main.cpp **** 
  74:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.cpp **** 
  76:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.cpp ****   HAL_Init();
  78:Core/Src/main.cpp **** 
  79:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.cpp **** 
  81:Core/Src/main.cpp ****   /* USER CODE END Init */
  82:Core/Src/main.cpp **** 
  83:Core/Src/main.cpp ****   /* Configure the system clock */
  84:Core/Src/main.cpp ****   SystemClock_Config();
  85:Core/Src/main.cpp **** 
  86:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.cpp **** 
  88:Core/Src/main.cpp ****   /* USER CODE END SysInit */
ARM GAS  /tmp/cczl4UIe.s 			page 3


  89:Core/Src/main.cpp **** 
  90:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
  91:Core/Src/main.cpp ****   MX_GPIO_Init();
  92:Core/Src/main.cpp ****   MX_USART3_UART_Init();
  93:Core/Src/main.cpp ****   MX_LWIP_Init();
  94:Core/Src/main.cpp ****   MX_USB_DEVICE_Init();
  95:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.cpp **** 
  97:Core/Src/main.cpp ****   /* USER CODE END 2 */
  98:Core/Src/main.cpp **** 
  99:Core/Src/main.cpp ****   /* Infinite loop */
 100:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.cpp ****   while (1)
 102:Core/Src/main.cpp ****   {
 103:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 104:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 105:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, GPIO_PIN_SET);
 106:Core/Src/main.cpp ****   //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 107:Core/Src/main.cpp ****   HAL_Delay(500);
 108:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET);
 109:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, GPIO_PIN_RESET);
 110:Core/Src/main.cpp ****   HAL_Delay(500);
 111:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 112:Core/Src/main.cpp ****   }
 113:Core/Src/main.cpp ****   /* USER CODE END 3 */
 114:Core/Src/main.cpp **** }
 115:Core/Src/main.cpp **** 
 116:Core/Src/main.cpp **** /**
 117:Core/Src/main.cpp ****   * @brief System Clock Configuration
 118:Core/Src/main.cpp ****   * @retval None
 119:Core/Src/main.cpp ****   */
 120:Core/Src/main.cpp **** extern "C"{
 121:Core/Src/main.cpp ****   void SystemClock_Config(void)
 122:Core/Src/main.cpp ****   {
 123:Core/Src/main.cpp ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 124:Core/Src/main.cpp ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125:Core/Src/main.cpp ****     RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 126:Core/Src/main.cpp **** 
 127:Core/Src/main.cpp ****     /** Configure LSE Drive Capability
 128:Core/Src/main.cpp ****     */
 129:Core/Src/main.cpp ****     HAL_PWR_EnableBkUpAccess();
 130:Core/Src/main.cpp ****     /** Configure the main internal regulator output voltage
 131:Core/Src/main.cpp ****     */
 132:Core/Src/main.cpp ****     __HAL_RCC_PWR_CLK_ENABLE();
 133:Core/Src/main.cpp ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 134:Core/Src/main.cpp ****     /** Initializes the RCC Oscillators according to the specified parameters
 135:Core/Src/main.cpp ****     * in the RCC_OscInitTypeDef structure.
 136:Core/Src/main.cpp ****     */
 137:Core/Src/main.cpp ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 138:Core/Src/main.cpp ****     RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 139:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 140:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 141:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLM = 4;
 142:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLN = 96;
 143:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 144:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 145:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLR = 2;
ARM GAS  /tmp/cczl4UIe.s 			page 4


 146:Core/Src/main.cpp ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 147:Core/Src/main.cpp ****     {
 148:Core/Src/main.cpp ****       Error_Handler();
 149:Core/Src/main.cpp ****     }
 150:Core/Src/main.cpp ****     /** Activate the Over-Drive mode
 151:Core/Src/main.cpp ****     */
 152:Core/Src/main.cpp ****     if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 153:Core/Src/main.cpp ****     {
 154:Core/Src/main.cpp ****       Error_Handler();
 155:Core/Src/main.cpp ****     }
 156:Core/Src/main.cpp ****     /** Initializes the CPU, AHB and APB buses clocks
 157:Core/Src/main.cpp ****     */
 158:Core/Src/main.cpp ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 159:Core/Src/main.cpp ****                                 |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 160:Core/Src/main.cpp ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 161:Core/Src/main.cpp ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 162:Core/Src/main.cpp ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 163:Core/Src/main.cpp ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 164:Core/Src/main.cpp **** 
 165:Core/Src/main.cpp ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 166:Core/Src/main.cpp ****     {
 167:Core/Src/main.cpp ****       Error_Handler();
 168:Core/Src/main.cpp ****     }
 169:Core/Src/main.cpp ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_CLK48;
 170:Core/Src/main.cpp ****     PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 171:Core/Src/main.cpp ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 172:Core/Src/main.cpp ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 173:Core/Src/main.cpp ****     {
 174:Core/Src/main.cpp ****       Error_Handler();
 175:Core/Src/main.cpp ****     }
 176:Core/Src/main.cpp ****   }
 177:Core/Src/main.cpp **** }
 178:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 179:Core/Src/main.cpp **** 
 180:Core/Src/main.cpp **** /* USER CODE END 4 */
 181:Core/Src/main.cpp **** 
 182:Core/Src/main.cpp **** /**
 183:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 184:Core/Src/main.cpp ****   * @retval None
 185:Core/Src/main.cpp ****   */
 186:Core/Src/main.cpp **** extern "C"{
 187:Core/Src/main.cpp ****   void Error_Handler(void)
 188:Core/Src/main.cpp ****   {
  28              		.loc 1 188 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LBB4:
  35              	.LBB5:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
ARM GAS  /tmp/cczl4UIe.s 			page 5


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  /tmp/cczl4UIe.s 			page 6


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /tmp/cczl4UIe.s 			page 7


 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  37              		.loc 2 142 0
  38              		.syntax unified
  39              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  40 0000 72B6     		cpsid i
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.L2:
  45 0002 FEE7     		b	.L2
  46              	.LBE5:
  47              	.LBE4:
  48              		.cfi_endproc
  49              	.LFE165:
  50              		.cantunwind
  51              		.fnend
  53              		.section	.text.SystemClock_Config,"ax",%progbits
  54              		.align	1
  55              		.global	SystemClock_Config
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv5-d16
  61              	SystemClock_Config:
  62              		.fnstart
  63              	.LFB164:
 122:Core/Src/main.cpp ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  64              		.loc 1 122 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 224
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68 0000 00B5     		push	{lr}
  69              		.save {lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cczl4UIe.s 			page 8


  72              		.cfi_offset 14, -4
  73              		.pad #228
  74 0002 B9B0     		sub	sp, sp, #228
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 232
 123:Core/Src/main.cpp ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 123 0
  78 0004 3422     		movs	r2, #52
  79 0006 0021     		movs	r1, #0
  80 0008 2BA8     		add	r0, sp, #172
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 124:Core/Src/main.cpp ****     RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  83              		.loc 1 124 0
  84 000e 0021     		movs	r1, #0
  85 0010 2691     		str	r1, [sp, #152]
  86 0012 2791     		str	r1, [sp, #156]
  87 0014 2891     		str	r1, [sp, #160]
  88 0016 2991     		str	r1, [sp, #164]
  89 0018 2A91     		str	r1, [sp, #168]
 125:Core/Src/main.cpp **** 
  90              		.loc 1 125 0
  91 001a 9022     		movs	r2, #144
  92 001c 02A8     		add	r0, sp, #8
  93 001e FFF7FEFF 		bl	memset
  94              	.LVL1:
 129:Core/Src/main.cpp ****     /** Configure the main internal regulator output voltage
  95              		.loc 1 129 0
  96 0022 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
  97              	.LVL2:
  98              	.LBB6:
 132:Core/Src/main.cpp ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  99              		.loc 1 132 0
 100 0026 284B     		ldr	r3, .L13
 101 0028 1A6C     		ldr	r2, [r3, #64]
 102 002a 42F08052 		orr	r2, r2, #268435456
 103 002e 1A64     		str	r2, [r3, #64]
 104 0030 1B6C     		ldr	r3, [r3, #64]
 105 0032 03F08053 		and	r3, r3, #268435456
 106 0036 0093     		str	r3, [sp]
 107 0038 009B     		ldr	r3, [sp]
 108              	.LBE6:
 109              	.LBB7:
 133:Core/Src/main.cpp ****     /** Initializes the RCC Oscillators according to the specified parameters
 110              		.loc 1 133 0
 111 003a 244A     		ldr	r2, .L13+4
 112 003c 1368     		ldr	r3, [r2]
 113 003e 23F44043 		bic	r3, r3, #49152
 114 0042 43F48043 		orr	r3, r3, #16384
 115 0046 1360     		str	r3, [r2]
 116 0048 1368     		ldr	r3, [r2]
 117 004a 03F44043 		and	r3, r3, #49152
 118 004e 0193     		str	r3, [sp, #4]
 119 0050 019B     		ldr	r3, [sp, #4]
 120              	.LBE7:
 137:Core/Src/main.cpp ****     RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 121              		.loc 1 137 0
ARM GAS  /tmp/cczl4UIe.s 			page 9


 122 0052 0123     		movs	r3, #1
 123 0054 2B93     		str	r3, [sp, #172]
 138:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 124              		.loc 1 138 0
 125 0056 4FF4A023 		mov	r3, #327680
 126 005a 2C93     		str	r3, [sp, #176]
 139:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 127              		.loc 1 139 0
 128 005c 0223     		movs	r3, #2
 129 005e 3193     		str	r3, [sp, #196]
 140:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLM = 4;
 130              		.loc 1 140 0
 131 0060 4FF48002 		mov	r2, #4194304
 132 0064 3292     		str	r2, [sp, #200]
 141:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLN = 96;
 133              		.loc 1 141 0
 134 0066 0422     		movs	r2, #4
 135 0068 3392     		str	r2, [sp, #204]
 142:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 136              		.loc 1 142 0
 137 006a 6021     		movs	r1, #96
 138 006c 3491     		str	r1, [sp, #208]
 143:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 139              		.loc 1 143 0
 140 006e 3593     		str	r3, [sp, #212]
 144:Core/Src/main.cpp ****     RCC_OscInitStruct.PLL.PLLR = 2;
 141              		.loc 1 144 0
 142 0070 3692     		str	r2, [sp, #216]
 145:Core/Src/main.cpp ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 143              		.loc 1 145 0
 144 0072 3793     		str	r3, [sp, #220]
 146:Core/Src/main.cpp ****     {
 145              		.loc 1 146 0
 146 0074 2BA8     		add	r0, sp, #172
 147 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 148              	.LVL3:
 149 007a E8B9     		cbnz	r0, .L9
 152:Core/Src/main.cpp ****     {
 150              		.loc 1 152 0
 151 007c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 152              	.LVL4:
 153 0080 E0B9     		cbnz	r0, .L10
 158:Core/Src/main.cpp ****                                 |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154              		.loc 1 158 0
 155 0082 0F23     		movs	r3, #15
 156 0084 2693     		str	r3, [sp, #152]
 160:Core/Src/main.cpp ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 157              		.loc 1 160 0
 158 0086 0223     		movs	r3, #2
 159 0088 2793     		str	r3, [sp, #156]
 161:Core/Src/main.cpp ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 160              		.loc 1 161 0
 161 008a 0023     		movs	r3, #0
 162 008c 2893     		str	r3, [sp, #160]
 162:Core/Src/main.cpp ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 163              		.loc 1 162 0
 164 008e 4FF48052 		mov	r2, #4096
ARM GAS  /tmp/cczl4UIe.s 			page 10


 165 0092 2992     		str	r2, [sp, #164]
 163:Core/Src/main.cpp **** 
 166              		.loc 1 163 0
 167 0094 2A93     		str	r3, [sp, #168]
 165:Core/Src/main.cpp ****     {
 168              		.loc 1 165 0
 169 0096 0321     		movs	r1, #3
 170 0098 26A8     		add	r0, sp, #152
 171 009a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 172              	.LVL5:
 173 009e 78B9     		cbnz	r0, .L11
 169:Core/Src/main.cpp ****     PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 174              		.loc 1 169 0
 175 00a0 0B4B     		ldr	r3, .L13+8
 176 00a2 0293     		str	r3, [sp, #8]
 170:Core/Src/main.cpp ****     PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 177              		.loc 1 170 0
 178 00a4 0023     		movs	r3, #0
 179 00a6 1593     		str	r3, [sp, #84]
 171:Core/Src/main.cpp ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 180              		.loc 1 171 0
 181 00a8 2193     		str	r3, [sp, #132]
 172:Core/Src/main.cpp ****     {
 182              		.loc 1 172 0
 183 00aa 02A8     		add	r0, sp, #8
 184 00ac FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 185              	.LVL6:
 186 00b0 40B9     		cbnz	r0, .L12
 176:Core/Src/main.cpp **** }
 187              		.loc 1 176 0
 188 00b2 39B0     		add	sp, sp, #228
 189              	.LCFI2:
 190              		.cfi_remember_state
 191              		.cfi_def_cfa_offset 4
 192              		@ sp needed
 193 00b4 5DF804FB 		ldr	pc, [sp], #4
 194              	.L9:
 195              	.LCFI3:
 196              		.cfi_restore_state
 148:Core/Src/main.cpp ****     }
 197              		.loc 1 148 0
 198 00b8 FFF7FEFF 		bl	Error_Handler
 199              	.LVL7:
 200              	.L10:
 154:Core/Src/main.cpp ****     }
 201              		.loc 1 154 0
 202 00bc FFF7FEFF 		bl	Error_Handler
 203              	.LVL8:
 204              	.L11:
 167:Core/Src/main.cpp ****     }
 205              		.loc 1 167 0
 206 00c0 FFF7FEFF 		bl	Error_Handler
 207              	.LVL9:
 208              	.L12:
 174:Core/Src/main.cpp ****     }
 209              		.loc 1 174 0
 210 00c4 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/cczl4UIe.s 			page 11


 211              	.LVL10:
 212              	.L14:
 213              		.align	2
 214              	.L13:
 215 00c8 00380240 		.word	1073887232
 216 00cc 00700040 		.word	1073770496
 217 00d0 00012000 		.word	2097408
 218              		.cfi_endproc
 219              	.LFE164:
 220              		.fnend
 222              		.section	.text.main,"ax",%progbits
 223              		.align	1
 224              		.global	main
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv5-d16
 230              	main:
 231              		.fnstart
 232              	.LFB163:
  69:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 233              		.loc 1 69 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 10B5     		push	{r4, lr}
 238              		.save {r4, lr}
 239              	.LCFI4:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
 242              		.cfi_offset 14, -4
  77:Core/Src/main.cpp **** 
 243              		.loc 1 77 0
 244 0002 FFF7FEFF 		bl	HAL_Init
 245              	.LVL11:
  84:Core/Src/main.cpp **** 
 246              		.loc 1 84 0
 247 0006 FFF7FEFF 		bl	SystemClock_Config
 248              	.LVL12:
  91:Core/Src/main.cpp ****   MX_USART3_UART_Init();
 249              		.loc 1 91 0
 250 000a FFF7FEFF 		bl	MX_GPIO_Init
 251              	.LVL13:
  92:Core/Src/main.cpp ****   MX_LWIP_Init();
 252              		.loc 1 92 0
 253 000e FFF7FEFF 		bl	MX_USART3_UART_Init
 254              	.LVL14:
  93:Core/Src/main.cpp ****   MX_USB_DEVICE_Init();
 255              		.loc 1 93 0
 256 0012 FFF7FEFF 		bl	MX_LWIP_Init
 257              	.LVL15:
  94:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 258              		.loc 1 94 0
 259 0016 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 260              	.LVL16:
 261              	.L16:
 104:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, GPIO_PIN_SET);
ARM GAS  /tmp/cczl4UIe.s 			page 12


 262              		.loc 1 104 0 discriminator 1
 263 001a 104C     		ldr	r4, .L18
 264 001c 0122     		movs	r2, #1
 265 001e 4FF48041 		mov	r1, #16384
 266 0022 2046     		mov	r0, r4
 267 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 268              	.LVL17:
 105:Core/Src/main.cpp ****   //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 269              		.loc 1 105 0 discriminator 1
 270 0028 0122     		movs	r2, #1
 271 002a 8021     		movs	r1, #128
 272 002c 2046     		mov	r0, r4
 273 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 274              	.LVL18:
 107:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET);
 275              		.loc 1 107 0 discriminator 1
 276 0032 4FF4FA70 		mov	r0, #500
 277 0036 FFF7FEFF 		bl	HAL_Delay
 278              	.LVL19:
 108:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, GPIO_PIN_RESET);
 279              		.loc 1 108 0 discriminator 1
 280 003a 0022     		movs	r2, #0
 281 003c 4FF48041 		mov	r1, #16384
 282 0040 2046     		mov	r0, r4
 283 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL20:
 109:Core/Src/main.cpp ****   HAL_Delay(500);
 285              		.loc 1 109 0 discriminator 1
 286 0046 0022     		movs	r2, #0
 287 0048 8021     		movs	r1, #128
 288 004a 2046     		mov	r0, r4
 289 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 290              	.LVL21:
 110:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 291              		.loc 1 110 0 discriminator 1
 292 0050 4FF4FA70 		mov	r0, #500
 293 0054 FFF7FEFF 		bl	HAL_Delay
 294              	.LVL22:
 295 0058 DFE7     		b	.L16
 296              	.L19:
 297 005a 00BF     		.align	2
 298              	.L18:
 299 005c 00040240 		.word	1073873920
 300              		.cfi_endproc
 301              	.LFE163:
 302              		.fnend
 304              		.text
 305              	.Letext0:
 306              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 307              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 308              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 309              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 310              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 311              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 312              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 313              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 314              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
ARM GAS  /tmp/cczl4UIe.s 			page 13


 315              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 316              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 317              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 318              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 319              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 320              		.file 17 "/usr/include/newlib/c++/6.3.1/cstdlib"
 321              		.file 18 "/usr/include/newlib/c++/6.3.1/arm-none-eabi/thumb/v7e-m/fpv5/hard/bits/c++config.h"
 322              		.file 19 "/usr/include/newlib/sys/lock.h"
 323              		.file 20 "/usr/include/newlib/sys/_types.h"
 324              		.file 21 "/usr/include/newlib/sys/reent.h"
 325              		.file 22 "/usr/include/newlib/stdlib.h"
 326              		.file 23 "/usr/include/newlib/c++/6.3.1/stdlib.h"
 327              		.file 24 "/usr/include/newlib/time.h"
 328              		.file 25 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 329              		.file 26 "/usr/include/newlib/ctype.h"
 330              		.file 27 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 331              		.file 28 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 332              		.file 29 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 333              		.file 30 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 334              		.file 31 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 335              		.file 32 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 336              		.file 33 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 337              		.file 34 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 338              		.file 35 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 339              		.file 36 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 340              		.file 37 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 341              		.file 38 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 342              		.file 39 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 343              		.file 40 "LWIP/App/lwip.h"
 344              		.file 41 "Core/Inc/usart.h"
 345              		.file 42 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr.h"
 346              		.file 43 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 347              		.file 44 "Core/Inc/gpio.h"
 348              		.file 45 "USB_DEVICE/App/usb_device.h"
 349              		.file 46 "<built-in>"
ARM GAS  /tmp/cczl4UIe.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cczl4UIe.s:17     .text.Error_Handler:0000000000000000 $t
     /tmp/cczl4UIe.s:24     .text.Error_Handler:0000000000000000 Error_Handler
    .ARM.exidx.text.Error_Handler:0000000000000000 $d
     /tmp/cczl4UIe.s:54     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cczl4UIe.s:61     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cczl4UIe.s:215    .text.SystemClock_Config:00000000000000c8 $d
.ARM.exidx.text.SystemClock_Config:0000000000000000 $d
     /tmp/cczl4UIe.s:223    .text.main:0000000000000000 $t
     /tmp/cczl4UIe.s:230    .text.main:0000000000000000 main
     /tmp/cczl4UIe.s:299    .text.main:000000000000005c $d
             .ARM.exidx.text.main:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_unwind_cpp_pr0
HAL_Init
MX_GPIO_Init
MX_USART3_UART_Init
MX_LWIP_Init
MX_USB_DEVICE_Init
HAL_GPIO_WritePin
HAL_Delay
