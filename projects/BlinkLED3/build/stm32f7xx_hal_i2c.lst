ARM GAS  /tmp/ccZ85PAS.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_i2c.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	I2C_Flush_TXDR:
  24              	.LFB204:
  25              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @file    stm32f7xx_hal_i2c.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @verbatim
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the @ref HAL_I2C_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) I2C pins configuration
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccZ85PAS.s 			page 2


  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx stream
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   the DMA Tx or Rx stream
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the @ref HAL_I2C_Init(), configures also the low le
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized @ref HAL_I2C_MspInit(&hi2c) API.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function @ref HAL_I2C_IsDevic
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Tran
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Recei
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Transm
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Receive
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =====================================
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using @ref HAL_I2C_
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using @ref HAL_I2C
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ===================================
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_R
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Tr
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Rec
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==========================================================
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
ARM GAS  /tmp/ccZ85PAS.s 			page 3


  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           when a direction change during transfer
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functional is same as associated interfac
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             several times (like @ref HAL_I2C_Master_Seq_Transmit_IT() then @ref HAL
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             or @ref HAL_I2C_Master_Seq_Transmit_DMA() then @ref HAL_I2C_Master_Seq_
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seq_T
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_AND_NEXT_FRAME then
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_AND_NEXT_FRAME th
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_AND_NEXT_FRAME the
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface.
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_FRAME then I2C_OTHE
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_FRAME then I2C_OT
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_FRAME then I2C_OTH
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Different sequential I2C interfaces are listed below:
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using @ref
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Transmit_DMA()
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_MasterTxCpltCallback() is e
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using @ref 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Receive_DMA()
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_MasterRxCpltCallback() is exec
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using @ref HAL_I2C_Mas
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using @ref HAL_I2C_EnableListen
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) When address slave I2C match, @ref HAL_I2C_AddrCallback() is executed and user can
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At Listen mode end @ref HAL_I2C_ListenCpltCallback() is executed and user can
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ListenCpltCallback()
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using @ref 
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Transmit_DMA()
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_SlaveTxCpltCallback() is ex
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using @ref H
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Receive_DMA()
ARM GAS  /tmp/ccZ85PAS.s 			page 4


 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_SlaveRxCpltCallback() is execu
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user ca
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =======================================
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_IT()
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_IT()
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO operation ***
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==============================
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Transmit_DMA()
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Receive_DMA()
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Transmit_DMA()
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Receive_DMA()
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_DMA()
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_DMA()
ARM GAS  /tmp/ccZ85PAS.s 			page 5


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      ==================================
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE: Enable the I2C peripheral
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE: Disable the I2C peripheral
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** Callback registration ***
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      =============================================
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Use Functions @ref HAL_I2C_RegisterCallback() or @ref HAL_I2C_RegisterAddrCallback()
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      to register an interrupt callback.
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Function @ref HAL_I2C_RegisterCallback() allows to register following callbacks:
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      and a pointer to the user callback function.
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_RegisterAdd
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Use function @ref HAL_I2C_UnRegisterCallback to reset a callback to the default
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      weak function.
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      @ref HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      and the Callback ID.
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      This function allows to reset following callbacks:
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
ARM GAS  /tmp/ccZ85PAS.s 			page 6


 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_UnRegisterAddrCallba
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      By default, after the @ref HAL_I2C_Init() and when the state is @ref HAL_I2C_STATE_RESET
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      examples @ref HAL_I2C_MasterTxCpltCallback(), @ref HAL_I2C_MasterRxCpltCallback().
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      reset to the legacy weak functions in the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit() only when
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit()
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Callbacks can be registered/unregistered in @ref HAL_I2C_STATE_READY state only.
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      in @ref HAL_I2C_STATE_READY or @ref HAL_I2C_STATE_RESET state,
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      using @ref HAL_I2C_RegisterCallback() before calling @ref HAL_I2C_DeInit()
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      or @ref HAL_I2C_Init() function.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @endverbatim
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @attention
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * All rights reserved.</center></h2>
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * the "License"; You may not use this file except in compliance with the
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * License. You may obtain a copy of the License at:
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                        opensource.org/licenses/BSD-3-Clause
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #include "stm32f7xx_hal.h"
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup STM32F7xx_HAL_Driver
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C I2C
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief I2C HAL module driver
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 7


 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | (uint32_
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (uint16_t)(0x0001U)   /* Bit field can be combinated with @ref I2C_
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (uint16_t)(0x0002U)   /* Bit field can be combinated with @ref I2C_
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (uint16_t)(0x8000U)   /* Bit field can be combinated with @ref I2C_
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (uint16_t)(0x0010U)   /* Bit definition to manage addition of globa
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (uint16_t)(0x0020U)   /* Bit definition to manage only STOP eveneme
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (uint16_t)(0x0040U)   /* Bit definition to manage only Reload of NB
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
ARM GAS  /tmp/ccZ85PAS.s 			page 8


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c);
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c);
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint16_t MemAddSize, uint32_t Timeout, uint32_t Tic
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                uint16_t MemAddSize, uint32_t Timeout, uint32_t Tick
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                     uint32_t Timeout, uint32_t Tickstart);
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to treat different error callback */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c);
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to flush TXDR register */
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to handle  start, restart or stop a transfer */
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                uint32_t Request);
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to Convert Specific options */
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
ARM GAS  /tmp/ccZ85PAS.s 			page 9


 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *  @brief    Initialization and Configuration functions
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           the selected configuration:
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Clock Timing
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 1
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Dual Addressing mode
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2 Mask
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) General call mode
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Nostretch mode
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
ARM GAS  /tmp/ccZ85PAS.s 			page 10


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccZ85PAS.s 			page 11


 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccZ85PAS.s 			page 12


 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
ARM GAS  /tmp/ccZ85PAS.s 			page 13


 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                            pI2C_CallbackTypeDef pCallback)
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (pCallback == NULL)
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 14


 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
ARM GAS  /tmp/ccZ85PAS.s 			page 15


 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
ARM GAS  /tmp/ccZ85PAS.s 			page 16


 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
ARM GAS  /tmp/ccZ85PAS.s 			page 17


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (pCallback == NULL)
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 18


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *  @brief   Data transfers functions
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                       ##### IO operation functions #####
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transfers.
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) There are two modes of transfer:
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             after finishing transfer.
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The end of the data processing will be indicated through the
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
ARM GAS  /tmp/ccZ85PAS.s 			page 19


1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             using DMA mode.
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Blocking mode functions are :
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
ARM GAS  /tmp/ccZ85PAS.s 			page 20


1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                           uint32_t Timeout)
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
ARM GAS  /tmp/ccZ85PAS.s 			page 21


1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
ARM GAS  /tmp/ccZ85PAS.s 			page 22


1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                          uint32_t Timeout)
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 23


1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 24


1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
ARM GAS  /tmp/ccZ85PAS.s 			page 25


1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag */
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/ccZ85PAS.s 			page 26


1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
ARM GAS  /tmp/ccZ85PAS.s 			page 27


1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Store Last receive data if any */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Read data from RXDR */
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Increment Buffer pointer */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferCount--;
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/ccZ85PAS.s 			page 28


1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                              uint16_t Size)
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
ARM GAS  /tmp/ccZ85PAS.s 			page 29


1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_WRIT
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccZ85PAS.s 			page 30


1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccZ85PAS.s 			page 31


1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  /tmp/ccZ85PAS.s 			page 32


1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                               uint16_t Size)
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
ARM GAS  /tmp/ccZ85PAS.s 			page 33


1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
ARM GAS  /tmp/ccZ85PAS.s 			page 34


1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address */
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
ARM GAS  /tmp/ccZ85PAS.s 			page 35


1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                              uint16_t Size)
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccZ85PAS.s 			page 36


1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address */
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART *
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
ARM GAS  /tmp/ccZ85PAS.s 			page 37


2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
ARM GAS  /tmp/ccZ85PAS.s 			page 38


2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 39


2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 40


2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
ARM GAS  /tmp/ccZ85PAS.s 			page 41


2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                     uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Ti
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
ARM GAS  /tmp/ccZ85PAS.s 			page 42


2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccZ85PAS.s 			page 43


2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     } while (hi2c->XferCount > 0U);
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccZ85PAS.s 			page 44


2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Tim
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 45


2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     } while (hi2c->XferCount > 0U);
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 46


2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                        uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 47


2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                       uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
ARM GAS  /tmp/ccZ85PAS.s 			page 48


2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 49


2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                         uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 50


2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 51


2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
ARM GAS  /tmp/ccZ85PAS.s 			page 52


2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                        uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
ARM GAS  /tmp/ccZ85PAS.s 			page 53


2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_RE
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
ARM GAS  /tmp/ccZ85PAS.s 			page 54


2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Trials Number of trials
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0UL;
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   FlagStatus tmp1;
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   FlagStatus tmp2;
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccZ85PAS.s 			page 55


3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Generate Start */
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       while ((tmp1 == RESET) && (tmp2 == RESET))
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Update I2C state */
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Update I2C error code */
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Process Unlocked */
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             return HAL_ERROR;
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Device is ready */
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/ccZ85PAS.s 			page 56


3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_Trials == Trials)
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate Stop */
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Trials */
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Trials++;
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     } while (I2C_Trials < Trials);
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update I2C state */
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update I2C error code */
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  /tmp/ccZ85PAS.s 			page 57


3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                  uint16_t Size, uint32_t XferOptions)
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 58


3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                   uint16_t Size, uint32_t XferOptions)
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
ARM GAS  /tmp/ccZ85PAS.s 			page 59


3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/ccZ85PAS.s 			page 60


3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to write */
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
ARM GAS  /tmp/ccZ85PAS.s 			page 61


3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint16_t Size, uint32_t XferOptions)
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
ARM GAS  /tmp/ccZ85PAS.s 			page 62


3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with DMA
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                  uint16_t Size, uint32_t XferOptions)
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
ARM GAS  /tmp/ccZ85PAS.s 			page 63


3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
ARM GAS  /tmp/ccZ85PAS.s 			page 64


3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to read */
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
ARM GAS  /tmp/ccZ85PAS.s 			page 65


3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint32_t XferOptions)
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
ARM GAS  /tmp/ccZ85PAS.s 			page 66


3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
ARM GAS  /tmp/ccZ85PAS.s 			page 67


3739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
3743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
3763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                  uint32_t XferOptions)
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccZ85PAS.s 			page 68


3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Nothing to do */
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
3851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
ARM GAS  /tmp/ccZ85PAS.s 			page 69


3853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
3856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Reset XferSize */
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = 0;
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
ARM GAS  /tmp/ccZ85PAS.s 			page 70


3910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                uint32_t XferOptions)
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
ARM GAS  /tmp/ccZ85PAS.s 			page 71


3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
4017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccZ85PAS.s 			page 72


4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint32_t XferOptions)
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
4044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
ARM GAS  /tmp/ccZ85PAS.s 			page 73


4081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
4084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
4103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
4106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Nothing to do */
4112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
4132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
ARM GAS  /tmp/ccZ85PAS.s 			page 74


4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
4142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Reset XferSize */
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = 0;
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
ARM GAS  /tmp/ccZ85PAS.s 			page 75


4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C
4236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmp;
4242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
4251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 76


4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
4260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
4274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts and Store Previous state */
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
4280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
4283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
4287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
4288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Do nothing */
4292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
4295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
4298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
4299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
4300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
4307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 77


4309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wrong usage of abort function */
4314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
4315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
4336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
4340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
4343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
4357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
4362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear BERR flag */
4364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
4365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccZ85PAS.s 			page 78


4366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ER
4369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
4371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear OVR flag */
4373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
4374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
4380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ARLO flag */
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
4386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
4387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
4389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_
4390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, tmperror);
4392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
4397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
4402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
4408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
4413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
4418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/ccZ85PAS.s 			page 79


4423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
4424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
4428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
4433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
4439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
4444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
4455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
4460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
4463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
4464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
4467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(TransferDirection);
4471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
4472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
4475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Listen Complete callback.
ARM GAS  /tmp/ccZ85PAS.s 			page 80


4480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
4485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
4491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
4496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
4501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
4507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
4512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
4517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
4523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C error callback.
4528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
4533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 81


4537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
4539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C abort callback.
4544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
4549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
4555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
4563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *  @brief   Peripheral State, Mode and Error functions
4564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
4565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
4566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
4567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
4568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
4569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
4570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
4571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     and the data flow.
4572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
4574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
4579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL state
4582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
4584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
4586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->State;
4587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
4591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         the configuration information for I2C module
4593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL mode
ARM GAS  /tmp/ccZ85PAS.s 			page 82


4594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
4598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Return the I2C error code.
4602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
4604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval I2C Error Code
4605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
4607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
4609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
4620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
4625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
4634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
4642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
ARM GAS  /tmp/ccZ85PAS.s 			page 83


4651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
4658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
4664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
4665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR */
4669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
4675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
4676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I
4678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
4680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
4687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, hi2c->XferOptions, I2C_NO_S
4694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
4698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
ARM GAS  /tmp/ccZ85PAS.s 			page 84


4708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
4727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
4752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
4762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
ARM GAS  /tmp/ccZ85PAS.s 			page 85


4765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
4769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
4771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if STOPF is set */
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
4780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, tmpITFlags);
4781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
4786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
4787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0*/
4788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
4789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for Warning[Pa13
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
4793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Listen complete process */
4795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, tmpITFlags);
4796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME)
4798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
4800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Flush TX register */
4803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
4804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
4812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
4818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear NACK Flag */
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
ARM GAS  /tmp/ccZ85PAS.s 			page 86


4822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
4825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, hi2c->ErrorCode);
4828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
4836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
4846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
4847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
4849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITSlaveSeqCplt(hi2c);
4850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && \
4853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
4854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, tmpITFlags);
4856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
4860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
4861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if all Data have already been sent */
4862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
4863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
4866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
4877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
ARM GAS  /tmp/ccZ85PAS.s 			page 87


4879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
4897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
4904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
4906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
4907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
4912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
4914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
4921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
4925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC interrupt */
4930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
4931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
4933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Recover Slave address */
4935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
ARM GAS  /tmp/ccZ85PAS.s 			page 88


4936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
4938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
4942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           xfermode = hi2c->XferOptions;
4949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           xfermode = I2C_AUTOEND_MODE;
4953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
4957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
4958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
4960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
4963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
4970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_I
4989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
ARM GAS  /tmp/ccZ85PAS.s 			page 89


4993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
4998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
5001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
5003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
5004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
5010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
5012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
5015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
5017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
5018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
5032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
5039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
5042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
5043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if STOPF is set */
5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
5049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccZ85PAS.s 			page 90


5050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
5052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
5055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0 */
5059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET) ||
5061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
5062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Split check of hdmarx, for MISRA compliance */
5064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
5065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET)
5067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
5069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             treatdmanack = 1U;
5071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Split check of hdmatx, for MISRA compliance  */
5076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
5077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET)
5079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
5081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             treatdmanack = 1U;
5083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (treatdmanack == 1U)
5088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for Warning[Pa
5090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
5091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Listen complete process */
5093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITListenCplt(hi2c, ITFlags);
5094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAM
5096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear NACK Flag */
5098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Flush TX register */
5101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_Flush_TXDR(hi2c);
5102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Last Byte is Transmitted */
5104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Slave Sequential complete process */
5105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITSlaveSeqCplt(hi2c);
5106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
ARM GAS  /tmp/ccZ85PAS.s 			page 91


5107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
5108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear NACK Flag */
5110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
5114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
5117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
5120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Store current hi2c->State, solve MISRA2012-Rule-13.5 */
5123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmpstate = hi2c->State;
5124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN
5132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           else
5136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Do nothing */
5138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call the corresponding callback to inform upper layer of End of Transfer */
5141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITError(hi2c, hi2c->ErrorCode);
5142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Only Clear NACK Flag, no DMA treatment is pending */
5148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C
5152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
5154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
ARM GAS  /tmp/ccZ85PAS.s 			page 92


5164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
5168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
5179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint16_t MemAddSize, uint32_t Timeout, uint32_t Tic
5180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
5182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
5193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
5205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TCR flag is set */
5212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
5213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
ARM GAS  /tmp/ccZ85PAS.s 			page 93


5221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
5222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
5233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                uint16_t MemAddSize, uint32_t Timeout, uint32_t Tick
5234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
5236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
5247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
5259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TC flag is set */
5266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
5267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
5276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
ARM GAS  /tmp/ccZ85PAS.s 			page 94


5278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
5283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t slaveaddrcode;
5284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd1code;
5285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd2code;
5286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(ITFlags);
5289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
5291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
5292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
5294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
5295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
5296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
5297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
5299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
5300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
5302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
5304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrEventCount++;
5305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
5306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Reset Address Event counter */
5308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
5309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear ADDR flag */
5311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
5314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
5315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call Slave Addr callback */
5317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
5325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
5327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
5329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
5332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
5333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Slave Addr callback */
ARM GAS  /tmp/ccZ85PAS.s 			page 95


5335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
5343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
5346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call Slave Addr callback */
5352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Else clear address flag only */
5360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
5363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
5372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c)
5376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
5381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
5382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
ARM GAS  /tmp/ccZ85PAS.s 			page 96


5392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback(hi2c);
5397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
5399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback(hi2c);
5417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
5419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
5425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
5429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
ARM GAS  /tmp/ccZ85PAS.s 			page 97


5449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
5452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
5454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
5472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
5474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master complete process.
5498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
5505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
ARM GAS  /tmp/ccZ85PAS.s 			page 98


5506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __IO uint32_t tmpreg;
5507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
5509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
5532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET)
5535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
5537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set acknowledge error code */
5540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Fetch Last receive data if any */
5544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) && (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET))
5545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpreg = (uint8_t)hi2c->Instance->RXDR;
5548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     UNUSED(tmpreg);
5549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
5552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
5555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
5556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) || (tmperror != HAL_I2C_ERROR_NONE))
5559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccZ85PAS.s 			page 99


5563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
5564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
5579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
5581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
5593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
5595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
5614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
5616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccZ85PAS.s 			page 100


5620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
5628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
5630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
5641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
5652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
5658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
5663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address Acknowledge */
5671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
5672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
ARM GAS  /tmp/ccZ85PAS.s 			page 101


5677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmatx);
5688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmarx);
5698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
5706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
5707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
5709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
5710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
5720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
5721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
5725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
5726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
5728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 102


5734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
5735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
5741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Listen complete process */
5743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, tmpITFlags);
5744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
5747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Sequential Complete callback, to inform upper layer of the end of Transfer */
5749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
5761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
5763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccZ85PAS.s 			page 103


5791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
5800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
5810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
5814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
5815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
5825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
5826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
5828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable all Interrupts*/
5833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear NACK Flag */
5836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ListenCpltCallback(hi2c);
5844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
5846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/ccZ85PAS.s 			page 104


5848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
5851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
5853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
5856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmppreviousstate;
5859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
5862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
5864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Set new error code */
5866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
5867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts */
5869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
5870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
5871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
5874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
5877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
5879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts */
5883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If state is an abort treatment on going, don't change state */
5886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This change will be do later */
5887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
5888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
5890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
5891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
5896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmppreviousstate = hi2c->PreviousState;
5897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || \
5898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
5899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
5901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 105


5905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
5906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
5910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA TX */
5915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
5916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
5918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
5919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
5927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((hi2c->hdmarx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_RX) || \
5928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
5929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
5931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
5936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
5940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA RX */
5945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
5946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
5948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
5949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TreatErrorCallback(hi2c);
5959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 106


5962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Error callback treatment.
5964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c)
5968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
5970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
5980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
5982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
5994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
5996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
6002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
6006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  26              		.loc 1 6006 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
6007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
6008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
6009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  32              		.loc 1 6009 0
  33 0000 0368     		ldr	r3, [r0]
  34 0002 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccZ85PAS.s 			page 107


  35 0004 12F0020F 		tst	r2, #2
  36 0008 01D0     		beq	.L2
6010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  37              		.loc 1 6011 0
  38 000a 0022     		movs	r2, #0
  39 000c 9A62     		str	r2, [r3, #40]
  40              	.L2:
6012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register if not empty */
6015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  41              		.loc 1 6015 0
  42 000e 0368     		ldr	r3, [r0]
  43 0010 9A69     		ldr	r2, [r3, #24]
  44 0012 12F0010F 		tst	r2, #1
  45 0016 03D1     		bne	.L1
6016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  46              		.loc 1 6017 0
  47 0018 9A69     		ldr	r2, [r3, #24]
  48 001a 42F00102 		orr	r2, r2, #1
  49 001e 9A61     		str	r2, [r3, #24]
  50              	.L1:
  51 0020 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE204:
  55              		.section	.text.I2C_TransferConfig,"ax",%progbits
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv5-d16
  62              	I2C_TransferConfig:
  63              	.LFB216:
6018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
6023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
6024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
6027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
6031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
6037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
ARM GAS  /tmp/ccZ85PAS.s 			page 108


6040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
6043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
6051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
6056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, h
6057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
6062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
6064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
6071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
6072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
6075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
6080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
6082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Last Byte is Transmitted */
6085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
ARM GAS  /tmp/ccZ85PAS.s 			page 109


6097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
6098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
6099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
6102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
6106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
6112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
6118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
6126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
6131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, h
6132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
6137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
6139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
6146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
6147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
6150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 110


6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U) && \
6155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
6156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
6158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
6173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle
6174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
6177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
6179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
6184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       treatdmaerror = 1U;
6186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
6192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       treatdmaerror = 1U;
6194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if a FIFO error is detected, if true normal use case, so no specific action to perform *
6198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (!((HAL_DMA_GetError(hdma) == HAL_DMA_ERROR_FE)) && (treatdmaerror != 0U))
6199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Acknowledge */
6201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
6202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
6210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
ARM GAS  /tmp/ccZ85PAS.s 			page 111


6211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle.
6212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
6215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
6219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
6222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
6226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TreatErrorCallback(hi2c);
6229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
6233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
6236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
6237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
6242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                     uint32_t Timeout, uint32_t Tickstart)
6243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
6245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
6266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/ccZ85PAS.s 			page 112


6268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
6275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
6303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
ARM GAS  /tmp/ccZ85PAS.s 			page 113


6325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
6327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
6337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
6346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a STOPF is detected */
6354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if an RXNE is pending */
6357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Store Last receive data if any */
6358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
6359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return HAL_OK */
6361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
6362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
6363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
6365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
6367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
6370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
6371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccZ85PAS.s 			page 114


6382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
6390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
6400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
6407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
6411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
6412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check for the Timeout */
6415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
6416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
6419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
6424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
6427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
6428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACKF Flag */
6432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
6435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
6438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
ARM GAS  /tmp/ccZ85PAS.s 			page 115


6439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
6441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
6442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
6446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
6448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
6451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
6457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
6459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
6460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
6461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
6462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
6464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
6465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
6466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
6467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
6469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
6470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
6471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
6472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
6475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                uint32_t Request)
6476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  64              		.loc 1 6476 0
  65              		.cfi_startproc
  66              		@ args = 4, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL1:
  70 0000 70B4     		push	{r4, r5, r6}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 12
  73              		.cfi_offset 4, -12
  74              		.cfi_offset 5, -8
  75              		.cfi_offset 6, -4
  76 0002 039D     		ldr	r5, [sp, #12]
6477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
6478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
6479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
6480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
6481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* update CR2 register */
ARM GAS  /tmp/ccZ85PAS.s 			page 116


6483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2,
  77              		.loc 1 6483 0
  78 0004 0668     		ldr	r6, [r0]
  79 0006 7068     		ldr	r0, [r6, #4]
  80              	.LVL2:
  81 0008 6C0D     		lsrs	r4, r5, #21
  82 000a 04F48064 		and	r4, r4, #1024
  83 000e 44F07F74 		orr	r4, r4, #66846720
  84 0012 44F45834 		orr	r4, r4, #221184
  85 0016 44F47F74 		orr	r4, r4, #1020
  86 001a 44F00304 		orr	r4, r4, #3
  87 001e 20EA0400 		bic	r0, r0, r4
  88 0022 C1F30901 		ubfx	r1, r1, #0, #10
  89              	.LVL3:
  90 0026 41EA0241 		orr	r1, r1, r2, lsl #16
  91 002a 1943     		orrs	r1, r1, r3
  92 002c 2943     		orrs	r1, r1, r5
  93 002e 0843     		orrs	r0, r0, r1
  94 0030 7060     		str	r0, [r6, #4]
6484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****              ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
6485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START
6486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****              (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) |
6487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                         (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode 
6488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  95              		.loc 1 6488 0
  96 0032 70BC     		pop	{r4, r5, r6}
  97              	.LCFI1:
  98              		.cfi_restore 6
  99              		.cfi_restore 5
 100              		.cfi_restore 4
 101              		.cfi_def_cfa_offset 0
 102              	.LVL4:
 103 0034 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE216:
 107              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 108              		.align	1
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv5-d16
 114              	I2C_Enable_IRQ:
 115              	.LFB217:
6489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
6492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 116              		.loc 1 6498 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccZ85PAS.s 			page 117


 120              		@ link register save eliminated.
 121              	.LVL5:
6499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 122              		.loc 1 6501 0
 123 0000 436B     		ldr	r3, [r0, #52]
 124 0002 1A4A     		ldr	r2, .L21
 125 0004 9342     		cmp	r3, r2
 126 0006 17D0     		beq	.L7
 127              		.loc 1 6501 0 is_stmt 0 discriminator 1
 128 0008 194A     		ldr	r2, .L21+4
 129 000a 9342     		cmp	r3, r2
 130 000c 14D0     		beq	.L7
6502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
6503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
6505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
6507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_ERROR_IT)
6511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
6513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
6517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= (I2C_IT_STOPI | I2C_IT_TCI);
6520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_RELOAD_IT)
6523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
6525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
6526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 131              		.loc 1 6530 0 is_stmt 1
 132 000e 11F4004F 		tst	r1, #32768
 133 0012 26D1     		bne	.L17
6499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 134              		.loc 1 6499 0
 135 0014 0023     		movs	r3, #0
 136              	.L13:
 137              	.LVL6:
6531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
6533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
ARM GAS  /tmp/ccZ85PAS.s 			page 118


 138              		.loc 1 6536 0
 139 0016 11F0010F 		tst	r1, #1
 140 001a 01D0     		beq	.L14
6537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
6539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 141              		.loc 1 6539 0
 142 001c 43F0F203 		orr	r3, r3, #242
 143              	.LVL7:
 144              	.L14:
6540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 145              		.loc 1 6542 0
 146 0020 11F0020F 		tst	r1, #2
 147 0024 01D0     		beq	.L15
6543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
6545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 148              		.loc 1 6545 0
 149 0026 43F0F403 		orr	r3, r3, #244
 150              	.LVL8:
 151              	.L15:
6546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
 152              		.loc 1 6548 0
 153 002a 2029     		cmp	r1, #32
 154 002c 1BD0     		beq	.L18
 155              	.L12:
6549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
6552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable interrupts only at the end */
6556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
6557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all interrupts requested done */
6558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 156              		.loc 1 6558 0
 157 002e 0268     		ldr	r2, [r0]
 158 0030 1168     		ldr	r1, [r2]
 159              	.LVL9:
 160 0032 0B43     		orrs	r3, r3, r1
 161              	.LVL10:
 162 0034 1360     		str	r3, [r2]
 163 0036 7047     		bx	lr
 164              	.LVL11:
 165              	.L7:
6504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 166              		.loc 1 6504 0
 167 0038 11F4004F 		tst	r1, #32768
 168 003c 09D1     		bne	.L16
6499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 169              		.loc 1 6499 0
 170 003e 0023     		movs	r3, #0
ARM GAS  /tmp/ccZ85PAS.s 			page 119


 171              	.L9:
 172              	.LVL12:
6510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 173              		.loc 1 6510 0
 174 0040 1029     		cmp	r1, #16
 175 0042 08D0     		beq	.L19
 176              	.L10:
6516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 177              		.loc 1 6516 0
 178 0044 2029     		cmp	r1, #32
 179 0046 09D0     		beq	.L20
 180              	.L11:
6522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 181              		.loc 1 6522 0
 182 0048 4029     		cmp	r1, #64
 183 004a F0D1     		bne	.L12
6525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 184              		.loc 1 6525 0
 185 004c 43F04003 		orr	r3, r3, #64
 186              	.LVL13:
 187 0050 EDE7     		b	.L12
 188              	.LVL14:
 189              	.L16:
6507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 190              		.loc 1 6507 0
 191 0052 B823     		movs	r3, #184
 192 0054 F4E7     		b	.L9
 193              	.LVL15:
 194              	.L19:
6513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 195              		.loc 1 6513 0
 196 0056 43F09003 		orr	r3, r3, #144
 197              	.LVL16:
 198 005a F3E7     		b	.L10
 199              	.L20:
6519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 200              		.loc 1 6519 0
 201 005c 43F06003 		orr	r3, r3, #96
 202              	.LVL17:
 203 0060 F2E7     		b	.L11
 204              	.LVL18:
 205              	.L17:
6533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 206              		.loc 1 6533 0
 207 0062 B823     		movs	r3, #184
 208 0064 D7E7     		b	.L13
 209              	.LVL19:
 210              	.L18:
6551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 211              		.loc 1 6551 0
 212 0066 43F02003 		orr	r3, r3, #32
 213              	.LVL20:
 214 006a E0E7     		b	.L12
 215              	.L22:
 216              		.align	2
 217              	.L21:
 218 006c 00000000 		.word	I2C_Master_ISR_DMA
ARM GAS  /tmp/ccZ85PAS.s 			page 120


 219 0070 00000000 		.word	I2C_Slave_ISR_DMA
 220              		.cfi_endproc
 221              	.LFE217:
 223              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 224              		.align	1
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv5-d16
 230              	I2C_Disable_IRQ:
 231              	.LFB218:
6559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
6563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 232              		.loc 1 6569 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL21:
6570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 238              		.loc 1 6572 0
 239 0000 11F0010F 		tst	r1, #1
 240 0004 09D0     		beq	.L30
 241              	.LVL22:
6573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
6575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
6576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 242              		.loc 1 6577 0
 243 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 244 000a 03F02803 		and	r3, r3, #40
 245 000e 282B     		cmp	r3, #40
 246 0010 01D0     		beq	.L45
6578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 247              		.loc 1 6580 0
 248 0012 F223     		movs	r3, #242
 249 0014 02E0     		b	.L24
 250              	.L45:
6575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 251              		.loc 1 6575 0
 252 0016 4223     		movs	r3, #66
 253 0018 00E0     		b	.L24
 254              	.LVL23:
ARM GAS  /tmp/ccZ85PAS.s 			page 121


 255              	.L30:
6570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 256              		.loc 1 6570 0
 257 001a 0023     		movs	r3, #0
 258              	.LVL24:
 259              	.L24:
6581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 260              		.loc 1 6584 0
 261 001c 11F0020F 		tst	r1, #2
 262 0020 29D0     		beq	.L34
6569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 263              		.loc 1 6569 0
 264 0022 10B4     		push	{r4}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 4
 267              		.cfi_offset 4, -4
6585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
6587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 268              		.loc 1 6587 0
 269 0024 43F04404 		orr	r4, r3, #68
 270              	.LVL25:
6588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 271              		.loc 1 6589 0
 272 0028 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 273 002c 02F02802 		and	r2, r2, #40
 274 0030 282A     		cmp	r2, #40
 275 0032 12D0     		beq	.L32
6590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 276              		.loc 1 6592 0
 277 0034 43F0F403 		orr	r3, r3, #244
 278              	.LVL26:
 279              	.L25:
6593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 280              		.loc 1 6596 0
 281 0038 11F4004F 		tst	r1, #32768
 282 003c 0FD1     		bne	.L46
 283              	.L26:
6597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
6599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_ERROR_IT)
 284              		.loc 1 6602 0
 285 003e 1029     		cmp	r1, #16
 286 0040 10D0     		beq	.L47
 287              	.L27:
ARM GAS  /tmp/ccZ85PAS.s 			page 122


6603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
6605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_CPLT_IT)
 288              		.loc 1 6608 0
 289 0042 2029     		cmp	r1, #32
 290 0044 11D0     		beq	.L48
 291              	.L28:
6609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupts */
6611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
6612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_RELOAD_IT)
 292              		.loc 1 6614 0
 293 0046 4029     		cmp	r1, #64
 294 0048 12D0     		beq	.L49
 295              	.L29:
6615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable TC interrupts */
6617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
6618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable interrupts only at the end */
6621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
6622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all disable interrupts request are not done */
6623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 296              		.loc 1 6623 0
 297 004a 0168     		ldr	r1, [r0]
 298              	.LVL27:
 299 004c 0A68     		ldr	r2, [r1]
 300 004e 22EA0303 		bic	r3, r2, r3
 301              	.LVL28:
 302 0052 0B60     		str	r3, [r1]
6624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 303              		.loc 1 6624 0
 304 0054 5DF8044B 		ldr	r4, [sp], #4
 305              	.LCFI3:
 306              		.cfi_remember_state
 307              		.cfi_restore 4
 308              		.cfi_def_cfa_offset 0
 309 0058 7047     		bx	lr
 310              	.LVL29:
 311              	.L32:
 312              	.LCFI4:
 313              		.cfi_restore_state
6587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 314              		.loc 1 6587 0
 315 005a 2346     		mov	r3, r4
 316 005c ECE7     		b	.L25
 317              	.LVL30:
 318              	.L46:
6599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 319              		.loc 1 6599 0
 320 005e 43F0B803 		orr	r3, r3, #184
ARM GAS  /tmp/ccZ85PAS.s 			page 123


 321              	.LVL31:
 322 0062 ECE7     		b	.L26
 323              	.L47:
6605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 324              		.loc 1 6605 0
 325 0064 43F09003 		orr	r3, r3, #144
 326              	.LVL32:
 327 0068 EBE7     		b	.L27
 328              	.L48:
6611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 329              		.loc 1 6611 0
 330 006a 43F02003 		orr	r3, r3, #32
 331              	.LVL33:
 332 006e EAE7     		b	.L28
 333              	.L49:
6617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 334              		.loc 1 6617 0
 335 0070 43F04003 		orr	r3, r3, #64
 336              	.LVL34:
 337 0074 E9E7     		b	.L29
 338              	.L34:
 339              	.LCFI5:
 340              		.cfi_def_cfa_offset 0
 341              		.cfi_restore 4
6596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 342              		.loc 1 6596 0
 343 0076 11F4004F 		tst	r1, #32768
 344 007a 0BD1     		bne	.L50
 345              	.L36:
6602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 346              		.loc 1 6602 0
 347 007c 1029     		cmp	r1, #16
 348 007e 0CD0     		beq	.L51
 349              	.L38:
6608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 350              		.loc 1 6608 0
 351 0080 2029     		cmp	r1, #32
 352 0082 0DD0     		beq	.L52
 353              	.L40:
6614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 354              		.loc 1 6614 0
 355 0084 4029     		cmp	r1, #64
 356 0086 0ED0     		beq	.L53
 357              	.L42:
6623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 358              		.loc 1 6623 0
 359 0088 0168     		ldr	r1, [r0]
 360              	.LVL35:
 361 008a 0A68     		ldr	r2, [r1]
 362 008c 22EA0303 		bic	r3, r2, r3
 363              	.LVL36:
 364 0090 0B60     		str	r3, [r1]
 365 0092 7047     		bx	lr
 366              	.LVL37:
 367              	.L50:
6599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 368              		.loc 1 6599 0
ARM GAS  /tmp/ccZ85PAS.s 			page 124


 369 0094 43F0B803 		orr	r3, r3, #184
 370              	.LVL38:
 371 0098 F0E7     		b	.L36
 372              	.L51:
6605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 373              		.loc 1 6605 0
 374 009a 43F09003 		orr	r3, r3, #144
 375              	.LVL39:
 376 009e EFE7     		b	.L38
 377              	.L52:
6611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 378              		.loc 1 6611 0
 379 00a0 43F02003 		orr	r3, r3, #32
 380              	.LVL40:
 381 00a4 EEE7     		b	.L40
 382              	.L53:
6617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 383              		.loc 1 6617 0
 384 00a6 43F04003 		orr	r3, r3, #64
 385              	.LVL41:
 386 00aa EDE7     		b	.L42
 387              		.cfi_endproc
 388              	.LFE218:
 390              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 391              		.align	1
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu fpv5-d16
 397              	I2C_ConvertOtherXferOptions:
 398              	.LFB219:
6625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functional XferOptions.
6628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
6632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 399              		.loc 1 6632 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL42:
6633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
6634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
6635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
6636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
 405              		.loc 1 6636 0
 406 0000 C36A     		ldr	r3, [r0, #44]
 407 0002 AA2B     		cmp	r3, #170
 408 0004 04D0     		beq	.L57
6637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
6639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
ARM GAS  /tmp/ccZ85PAS.s 			page 125


6641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
6642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
6643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
6644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 409              		.loc 1 6644 0
 410 0006 C36A     		ldr	r3, [r0, #44]
 411 0008 B3F52A4F 		cmp	r3, #43520
 412 000c 03D0     		beq	.L58
 413              	.L54:
 414 000e 7047     		bx	lr
 415              	.L57:
6638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 416              		.loc 1 6638 0
 417 0010 0023     		movs	r3, #0
 418 0012 C362     		str	r3, [r0, #44]
 419 0014 7047     		bx	lr
 420              	.L58:
6645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 421              		.loc 1 6646 0
 422 0016 4FF00073 		mov	r3, #33554432
 423 001a C362     		str	r3, [r0, #44]
6647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
6651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 424              		.loc 1 6652 0
 425 001c F7E7     		b	.L54
 426              		.cfi_endproc
 427              	.LFE219:
 429              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 430              		.align	1
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu fpv5-d16
 436              	I2C_IsAcknowledgeFailed:
 437              	.LFB215:
6407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 438              		.loc 1 6407 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              	.LVL43:
 443 0000 70B5     		push	{r4, r5, r6, lr}
 444              	.LCFI6:
 445              		.cfi_def_cfa_offset 16
 446              		.cfi_offset 4, -16
 447              		.cfi_offset 5, -12
 448              		.cfi_offset 6, -8
 449              		.cfi_offset 14, -4
 450 0002 0446     		mov	r4, r0
 451 0004 0D46     		mov	r5, r1
 452 0006 1646     		mov	r6, r2
6408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccZ85PAS.s 			page 126


 453              		.loc 1 6408 0
 454 0008 0368     		ldr	r3, [r0]
 455 000a 9B69     		ldr	r3, [r3, #24]
 456 000c 13F0100F 		tst	r3, #16
 457 0010 1CD0     		beq	.L66
 458              	.LVL44:
 459              	.L62:
6412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 460              		.loc 1 6412 0
 461 0012 2368     		ldr	r3, [r4]
 462 0014 9A69     		ldr	r2, [r3, #24]
 463 0016 12F0200F 		tst	r2, #32
 464 001a 19D1     		bne	.L67
6415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 465              		.loc 1 6415 0
 466 001c B5F1FF3F 		cmp	r5, #-1
 467 0020 F7D0     		beq	.L62
6417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 468              		.loc 1 6417 0
 469 0022 FFF7FEFF 		bl	HAL_GetTick
 470              	.LVL45:
 471 0026 801B     		subs	r0, r0, r6
 472 0028 8542     		cmp	r5, r0
 473 002a 01D3     		bcc	.L63
6417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 474              		.loc 1 6417 0 is_stmt 0 discriminator 1
 475 002c 002D     		cmp	r5, #0
 476 002e F0D1     		bne	.L62
 477              	.L63:
6419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 478              		.loc 1 6419 0 is_stmt 1
 479 0030 636C     		ldr	r3, [r4, #68]
 480 0032 43F02003 		orr	r3, r3, #32
 481 0036 6364     		str	r3, [r4, #68]
6420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 482              		.loc 1 6420 0
 483 0038 2023     		movs	r3, #32
 484 003a 84F84130 		strb	r3, [r4, #65]
6421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 485              		.loc 1 6421 0
 486 003e 0023     		movs	r3, #0
 487 0040 84F84230 		strb	r3, [r4, #66]
6424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 488              		.loc 1 6424 0
 489 0044 84F84030 		strb	r3, [r4, #64]
6426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 490              		.loc 1 6426 0
 491 0048 0120     		movs	r0, #1
 492 004a 70BD     		pop	{r4, r5, r6, pc}
 493              	.LVL46:
 494              	.L66:
6452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 495              		.loc 1 6452 0
 496 004c 0020     		movs	r0, #0
 497              	.LVL47:
 498 004e 70BD     		pop	{r4, r5, r6, pc}
 499              	.LVL48:
ARM GAS  /tmp/ccZ85PAS.s 			page 127


 500              	.L67:
6432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 501              		.loc 1 6432 0
 502 0050 1022     		movs	r2, #16
 503 0052 DA61     		str	r2, [r3, #28]
6435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 504              		.loc 1 6435 0
 505 0054 2368     		ldr	r3, [r4]
 506 0056 2025     		movs	r5, #32
 507              	.LVL49:
 508 0058 DD61     		str	r5, [r3, #28]
6438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 509              		.loc 1 6438 0
 510 005a 2046     		mov	r0, r4
 511 005c FFF7FEFF 		bl	I2C_Flush_TXDR
 512              	.LVL50:
6441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 513              		.loc 1 6441 0
 514 0060 2268     		ldr	r2, [r4]
 515 0062 5368     		ldr	r3, [r2, #4]
 516 0064 23F0FF73 		bic	r3, r3, #33423360
 517 0068 23F48B33 		bic	r3, r3, #71168
 518 006c 23F4FF73 		bic	r3, r3, #510
 519 0070 23F00103 		bic	r3, r3, #1
 520 0074 5360     		str	r3, [r2, #4]
6443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 521              		.loc 1 6443 0
 522 0076 636C     		ldr	r3, [r4, #68]
 523 0078 43F00403 		orr	r3, r3, #4
 524 007c 6364     		str	r3, [r4, #68]
6444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 525              		.loc 1 6444 0
 526 007e 84F84150 		strb	r5, [r4, #65]
6445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 527              		.loc 1 6445 0
 528 0082 0023     		movs	r3, #0
 529 0084 84F84230 		strb	r3, [r4, #66]
6448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 530              		.loc 1 6448 0
 531 0088 84F84030 		strb	r3, [r4, #64]
6450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 532              		.loc 1 6450 0
 533 008c 0120     		movs	r0, #1
6453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 534              		.loc 1 6453 0
 535 008e 70BD     		pop	{r4, r5, r6, pc}
 536              		.cfi_endproc
 537              	.LFE215:
 539              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 540              		.align	1
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 544              		.fpu fpv5-d16
 546              	I2C_WaitOnTXISFlagUntilTimeout:
 547              	.LFB212:
6273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
ARM GAS  /tmp/ccZ85PAS.s 			page 128


 548              		.loc 1 6273 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              	.LVL51:
 553 0000 70B5     		push	{r4, r5, r6, lr}
 554              	.LCFI7:
 555              		.cfi_def_cfa_offset 16
 556              		.cfi_offset 4, -16
 557              		.cfi_offset 5, -12
 558              		.cfi_offset 6, -8
 559              		.cfi_offset 14, -4
 560 0002 0446     		mov	r4, r0
 561 0004 0D46     		mov	r5, r1
 562 0006 1646     		mov	r6, r2
 563              	.LVL52:
 564              	.L71:
6274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 565              		.loc 1 6274 0
 566 0008 2368     		ldr	r3, [r4]
 567 000a 9B69     		ldr	r3, [r3, #24]
 568 000c 13F0020F 		tst	r3, #2
 569 0010 1DD1     		bne	.L76
6277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 570              		.loc 1 6277 0
 571 0012 3246     		mov	r2, r6
 572 0014 2946     		mov	r1, r5
 573 0016 2046     		mov	r0, r4
 574 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 575              	.LVL53:
 576 001c C8B9     		cbnz	r0, .L74
6283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 577              		.loc 1 6283 0
 578 001e B5F1FF3F 		cmp	r5, #-1
 579 0022 F1D0     		beq	.L71
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 580              		.loc 1 6285 0
 581 0024 FFF7FEFF 		bl	HAL_GetTick
 582              	.LVL54:
 583 0028 801B     		subs	r0, r0, r6
 584 002a 8542     		cmp	r5, r0
 585 002c 01D3     		bcc	.L72
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 586              		.loc 1 6285 0 is_stmt 0 discriminator 1
 587 002e 002D     		cmp	r5, #0
 588 0030 EAD1     		bne	.L71
 589              	.L72:
6287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 590              		.loc 1 6287 0 is_stmt 1
 591 0032 636C     		ldr	r3, [r4, #68]
 592 0034 43F02003 		orr	r3, r3, #32
 593 0038 6364     		str	r3, [r4, #68]
6288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 594              		.loc 1 6288 0
 595 003a 2023     		movs	r3, #32
 596 003c 84F84130 		strb	r3, [r4, #65]
6289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 129


 597              		.loc 1 6289 0
 598 0040 0023     		movs	r3, #0
 599 0042 84F84230 		strb	r3, [r4, #66]
6292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 600              		.loc 1 6292 0
 601 0046 84F84030 		strb	r3, [r4, #64]
6294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 602              		.loc 1 6294 0
 603 004a 0120     		movs	r0, #1
 604 004c 70BD     		pop	{r4, r5, r6, pc}
 605              	.LVL55:
 606              	.L76:
6298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 607              		.loc 1 6298 0
 608 004e 0020     		movs	r0, #0
 609 0050 70BD     		pop	{r4, r5, r6, pc}
 610              	.LVL56:
 611              	.L74:
6279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 612              		.loc 1 6279 0
 613 0052 0120     		movs	r0, #1
6299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 614              		.loc 1 6299 0
 615 0054 70BD     		pop	{r4, r5, r6, pc}
 616              		.cfi_endproc
 617              	.LFE212:
 619              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 620              		.align	1
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv5-d16
 626              	I2C_WaitOnFlagUntilTimeout:
 627              	.LFB211:
6243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 628              		.loc 1 6243 0
 629              		.cfi_startproc
 630              		@ args = 4, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              	.LVL57:
 633 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 634              	.LCFI8:
 635              		.cfi_def_cfa_offset 24
 636              		.cfi_offset 3, -24
 637              		.cfi_offset 4, -20
 638              		.cfi_offset 5, -16
 639              		.cfi_offset 6, -12
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 0546     		mov	r5, r0
 643 0004 0F46     		mov	r7, r1
 644 0006 1646     		mov	r6, r2
 645 0008 1C46     		mov	r4, r3
 646              	.LVL58:
 647              	.L79:
6244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 648              		.loc 1 6244 0
ARM GAS  /tmp/ccZ85PAS.s 			page 130


 649 000a 2B68     		ldr	r3, [r5]
 650 000c 9B69     		ldr	r3, [r3, #24]
 651 000e 37EA0303 		bics	r3, r7, r3
 652 0012 0CBF     		ite	eq
 653 0014 0123     		moveq	r3, #1
 654 0016 0023     		movne	r3, #0
 655 0018 B342     		cmp	r3, r6
 656 001a 18D1     		bne	.L84
6247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 657              		.loc 1 6247 0
 658 001c B4F1FF3F 		cmp	r4, #-1
 659 0020 F3D0     		beq	.L79
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 660              		.loc 1 6249 0
 661 0022 FFF7FEFF 		bl	HAL_GetTick
 662              	.LVL59:
 663 0026 069B     		ldr	r3, [sp, #24]
 664 0028 C01A     		subs	r0, r0, r3
 665 002a 8442     		cmp	r4, r0
 666 002c 01D3     		bcc	.L80
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 667              		.loc 1 6249 0 is_stmt 0 discriminator 1
 668 002e 002C     		cmp	r4, #0
 669 0030 EBD1     		bne	.L79
 670              	.L80:
6251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 671              		.loc 1 6251 0 is_stmt 1
 672 0032 6B6C     		ldr	r3, [r5, #68]
 673 0034 43F02003 		orr	r3, r3, #32
 674 0038 6B64     		str	r3, [r5, #68]
6252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 675              		.loc 1 6252 0
 676 003a 2023     		movs	r3, #32
 677 003c 85F84130 		strb	r3, [r5, #65]
6253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 678              		.loc 1 6253 0
 679 0040 0023     		movs	r3, #0
 680 0042 85F84230 		strb	r3, [r5, #66]
6256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 681              		.loc 1 6256 0
 682 0046 85F84030 		strb	r3, [r5, #64]
6257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 683              		.loc 1 6257 0
 684 004a 0120     		movs	r0, #1
 685 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 686              	.LVL60:
 687              	.L84:
6261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 688              		.loc 1 6261 0
 689 004e 0020     		movs	r0, #0
6262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 690              		.loc 1 6262 0
 691 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 692              		.cfi_endproc
 693              	.LFE211:
 695              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 696              		.align	1
ARM GAS  /tmp/ccZ85PAS.s 			page 131


 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 700              		.fpu fpv5-d16
 702              	I2C_RequestMemoryWrite:
 703              	.LFB194:
5180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 704              		.loc 1 5180 0
 705              		.cfi_startproc
 706              		@ args = 8, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              	.LVL61:
 709 0000 70B5     		push	{r4, r5, r6, lr}
 710              	.LCFI9:
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 4, -16
 713              		.cfi_offset 5, -12
 714              		.cfi_offset 6, -8
 715              		.cfi_offset 14, -4
 716 0002 82B0     		sub	sp, sp, #8
 717              	.LCFI10:
 718              		.cfi_def_cfa_offset 24
 719 0004 0446     		mov	r4, r0
 720 0006 1546     		mov	r5, r2
 721 0008 1E46     		mov	r6, r3
5181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 722              		.loc 1 5181 0
 723 000a 184B     		ldr	r3, .L93
 724              	.LVL62:
 725 000c 0093     		str	r3, [sp]
 726 000e 4FF08073 		mov	r3, #16777216
 727 0012 F2B2     		uxtb	r2, r6
 728              	.LVL63:
 729 0014 FFF7FEFF 		bl	I2C_TransferConfig
 730              	.LVL64:
5184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 731              		.loc 1 5184 0
 732 0018 079A     		ldr	r2, [sp, #28]
 733 001a 0699     		ldr	r1, [sp, #24]
 734 001c 2046     		mov	r0, r4
 735 001e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 736              	.LVL65:
 737 0022 E8B9     		cbnz	r0, .L89
5190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 738              		.loc 1 5190 0
 739 0024 012E     		cmp	r6, #1
 740 0026 0CD0     		beq	.L92
5199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 741              		.loc 1 5199 0
 742 0028 2368     		ldr	r3, [r4]
 743 002a 2A0A     		lsrs	r2, r5, #8
 744 002c 9A62     		str	r2, [r3, #40]
5202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 745              		.loc 1 5202 0
 746 002e 079A     		ldr	r2, [sp, #28]
 747 0030 0699     		ldr	r1, [sp, #24]
 748 0032 2046     		mov	r0, r4
ARM GAS  /tmp/ccZ85PAS.s 			page 132


 749 0034 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 750              	.LVL66:
 751 0038 B0B9     		cbnz	r0, .L90
5208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 752              		.loc 1 5208 0
 753 003a 2368     		ldr	r3, [r4]
 754 003c EDB2     		uxtb	r5, r5
 755 003e 9D62     		str	r5, [r3, #40]
 756 0040 02E0     		b	.L88
 757              	.L92:
5193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 758              		.loc 1 5193 0
 759 0042 2368     		ldr	r3, [r4]
 760 0044 EDB2     		uxtb	r5, r5
 761 0046 9D62     		str	r5, [r3, #40]
 762              	.L88:
5212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 763              		.loc 1 5212 0
 764 0048 079B     		ldr	r3, [sp, #28]
 765 004a 0093     		str	r3, [sp]
 766 004c 069B     		ldr	r3, [sp, #24]
 767 004e 0022     		movs	r2, #0
 768 0050 8021     		movs	r1, #128
 769 0052 2046     		mov	r0, r4
 770 0054 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 771              	.LVL67:
 772 0058 0346     		mov	r3, r0
 773 005a 10B1     		cbz	r0, .L86
5214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 774              		.loc 1 5214 0
 775 005c 0123     		movs	r3, #1
 776 005e 00E0     		b	.L86
 777              	.L89:
5186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 778              		.loc 1 5186 0
 779 0060 0123     		movs	r3, #1
 780              	.L86:
5218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 781              		.loc 1 5218 0
 782 0062 1846     		mov	r0, r3
 783 0064 02B0     		add	sp, sp, #8
 784              	.LCFI11:
 785              		.cfi_remember_state
 786              		.cfi_def_cfa_offset 16
 787              		@ sp needed
 788 0066 70BD     		pop	{r4, r5, r6, pc}
 789              	.LVL68:
 790              	.L90:
 791              	.LCFI12:
 792              		.cfi_restore_state
5204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 793              		.loc 1 5204 0
 794 0068 0123     		movs	r3, #1
 795 006a FAE7     		b	.L86
 796              	.L94:
 797              		.align	2
 798              	.L93:
ARM GAS  /tmp/ccZ85PAS.s 			page 133


 799 006c 00200080 		.word	-2147475456
 800              		.cfi_endproc
 801              	.LFE194:
 803              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 804              		.align	1
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv5-d16
 810              	I2C_RequestMemoryRead:
 811              	.LFB195:
5234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 812              		.loc 1 5234 0
 813              		.cfi_startproc
 814              		@ args = 8, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              	.LVL69:
 817 0000 70B5     		push	{r4, r5, r6, lr}
 818              	.LCFI13:
 819              		.cfi_def_cfa_offset 16
 820              		.cfi_offset 4, -16
 821              		.cfi_offset 5, -12
 822              		.cfi_offset 6, -8
 823              		.cfi_offset 14, -4
 824 0002 82B0     		sub	sp, sp, #8
 825              	.LCFI14:
 826              		.cfi_def_cfa_offset 24
 827 0004 0446     		mov	r4, r0
 828 0006 1546     		mov	r5, r2
 829 0008 1E46     		mov	r6, r3
5235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 830              		.loc 1 5235 0
 831 000a 184B     		ldr	r3, .L103
 832              	.LVL70:
 833 000c 0093     		str	r3, [sp]
 834 000e 0023     		movs	r3, #0
 835 0010 F2B2     		uxtb	r2, r6
 836              	.LVL71:
 837 0012 FFF7FEFF 		bl	I2C_TransferConfig
 838              	.LVL72:
5238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 839              		.loc 1 5238 0
 840 0016 079A     		ldr	r2, [sp, #28]
 841 0018 0699     		ldr	r1, [sp, #24]
 842 001a 2046     		mov	r0, r4
 843 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 844              	.LVL73:
 845 0020 E8B9     		cbnz	r0, .L99
5244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 846              		.loc 1 5244 0
 847 0022 012E     		cmp	r6, #1
 848 0024 0CD0     		beq	.L102
5253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 849              		.loc 1 5253 0
 850 0026 2368     		ldr	r3, [r4]
 851 0028 2A0A     		lsrs	r2, r5, #8
 852 002a 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccZ85PAS.s 			page 134


5256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 853              		.loc 1 5256 0
 854 002c 079A     		ldr	r2, [sp, #28]
 855 002e 0699     		ldr	r1, [sp, #24]
 856 0030 2046     		mov	r0, r4
 857 0032 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 858              	.LVL74:
 859 0036 B0B9     		cbnz	r0, .L100
5262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 860              		.loc 1 5262 0
 861 0038 2368     		ldr	r3, [r4]
 862 003a EDB2     		uxtb	r5, r5
 863 003c 9D62     		str	r5, [r3, #40]
 864 003e 02E0     		b	.L98
 865              	.L102:
5247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 866              		.loc 1 5247 0
 867 0040 2368     		ldr	r3, [r4]
 868 0042 EDB2     		uxtb	r5, r5
 869 0044 9D62     		str	r5, [r3, #40]
 870              	.L98:
5266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 871              		.loc 1 5266 0
 872 0046 079B     		ldr	r3, [sp, #28]
 873 0048 0093     		str	r3, [sp]
 874 004a 069B     		ldr	r3, [sp, #24]
 875 004c 0022     		movs	r2, #0
 876 004e 4021     		movs	r1, #64
 877 0050 2046     		mov	r0, r4
 878 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 879              	.LVL75:
 880 0056 0346     		mov	r3, r0
 881 0058 10B1     		cbz	r0, .L96
5268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 882              		.loc 1 5268 0
 883 005a 0123     		movs	r3, #1
 884 005c 00E0     		b	.L96
 885              	.L99:
5240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 886              		.loc 1 5240 0
 887 005e 0123     		movs	r3, #1
 888              	.L96:
5272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 889              		.loc 1 5272 0
 890 0060 1846     		mov	r0, r3
 891 0062 02B0     		add	sp, sp, #8
 892              	.LCFI15:
 893              		.cfi_remember_state
 894              		.cfi_def_cfa_offset 16
 895              		@ sp needed
 896 0064 70BD     		pop	{r4, r5, r6, pc}
 897              	.LVL76:
 898              	.L100:
 899              	.LCFI16:
 900              		.cfi_restore_state
5258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 901              		.loc 1 5258 0
ARM GAS  /tmp/ccZ85PAS.s 			page 135


 902 0066 0123     		movs	r3, #1
 903 0068 FAE7     		b	.L96
 904              	.L104:
 905 006a 00BF     		.align	2
 906              	.L103:
 907 006c 00200080 		.word	-2147475456
 908              		.cfi_endproc
 909              	.LFE195:
 911              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 912              		.align	1
 913              		.syntax unified
 914              		.thumb
 915              		.thumb_func
 916              		.fpu fpv5-d16
 918              	I2C_WaitOnSTOPFlagUntilTimeout:
 919              	.LFB213:
6310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 920              		.loc 1 6310 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              	.LVL77:
 925 0000 70B5     		push	{r4, r5, r6, lr}
 926              	.LCFI17:
 927              		.cfi_def_cfa_offset 16
 928              		.cfi_offset 4, -16
 929              		.cfi_offset 5, -12
 930              		.cfi_offset 6, -8
 931              		.cfi_offset 14, -4
 932 0002 0546     		mov	r5, r0
 933 0004 0C46     		mov	r4, r1
 934 0006 1646     		mov	r6, r2
 935              	.LVL78:
 936              	.L106:
6311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 937              		.loc 1 6311 0
 938 0008 2B68     		ldr	r3, [r5]
 939 000a 9B69     		ldr	r3, [r3, #24]
 940 000c 13F0200F 		tst	r3, #32
 941 0010 1AD1     		bne	.L112
6314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 942              		.loc 1 6314 0
 943 0012 3246     		mov	r2, r6
 944 0014 2146     		mov	r1, r4
 945 0016 2846     		mov	r0, r5
 946 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 947              	.LVL79:
 948 001c B0B9     		cbnz	r0, .L110
6320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 949              		.loc 1 6320 0
 950 001e FFF7FEFF 		bl	HAL_GetTick
 951              	.LVL80:
 952 0022 801B     		subs	r0, r0, r6
 953 0024 8442     		cmp	r4, r0
 954 0026 01D3     		bcc	.L108
6320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 955              		.loc 1 6320 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccZ85PAS.s 			page 136


 956 0028 002C     		cmp	r4, #0
 957 002a EDD1     		bne	.L106
 958              	.L108:
6322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 959              		.loc 1 6322 0 is_stmt 1
 960 002c 6B6C     		ldr	r3, [r5, #68]
 961 002e 43F02003 		orr	r3, r3, #32
 962 0032 6B64     		str	r3, [r5, #68]
6323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 963              		.loc 1 6323 0
 964 0034 2023     		movs	r3, #32
 965 0036 85F84130 		strb	r3, [r5, #65]
6324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 966              		.loc 1 6324 0
 967 003a 0023     		movs	r3, #0
 968 003c 85F84230 		strb	r3, [r5, #66]
6327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 969              		.loc 1 6327 0
 970 0040 85F84030 		strb	r3, [r5, #64]
6329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 971              		.loc 1 6329 0
 972 0044 0120     		movs	r0, #1
 973 0046 70BD     		pop	{r4, r5, r6, pc}
 974              	.LVL81:
 975              	.L112:
6332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 976              		.loc 1 6332 0
 977 0048 0020     		movs	r0, #0
 978 004a 70BD     		pop	{r4, r5, r6, pc}
 979              	.LVL82:
 980              	.L110:
6316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 981              		.loc 1 6316 0
 982 004c 0120     		movs	r0, #1
6333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 983              		.loc 1 6333 0
 984 004e 70BD     		pop	{r4, r5, r6, pc}
 985              		.cfi_endproc
 986              	.LFE213:
 988              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 989              		.align	1
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 993              		.fpu fpv5-d16
 995              	I2C_WaitOnRXNEFlagUntilTimeout:
 996              	.LFB214:
6344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 997              		.loc 1 6344 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              	.LVL83:
 1002 0000 70B5     		push	{r4, r5, r6, lr}
 1003              	.LCFI18:
 1004              		.cfi_def_cfa_offset 16
 1005              		.cfi_offset 4, -16
ARM GAS  /tmp/ccZ85PAS.s 			page 137


 1006              		.cfi_offset 5, -12
 1007              		.cfi_offset 6, -8
 1008              		.cfi_offset 14, -4
 1009 0002 0446     		mov	r4, r0
 1010 0004 0D46     		mov	r5, r1
 1011 0006 1646     		mov	r6, r2
 1012              	.LVL84:
 1013              	.L114:
6345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1014              		.loc 1 6345 0
 1015 0008 2368     		ldr	r3, [r4]
 1016 000a 9B69     		ldr	r3, [r3, #24]
 1017 000c 13F0040F 		tst	r3, #4
 1018 0010 3ED1     		bne	.L122
6348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1019              		.loc 1 6348 0
 1020 0012 3246     		mov	r2, r6
 1021 0014 2946     		mov	r1, r5
 1022 0016 2046     		mov	r0, r4
 1023 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 1024              	.LVL85:
 1025 001c 0146     		mov	r1, r0
 1026 001e 0028     		cmp	r0, #0
 1027 0020 38D1     		bne	.L120
6354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1028              		.loc 1 6354 0
 1029 0022 2368     		ldr	r3, [r4]
 1030 0024 9A69     		ldr	r2, [r3, #24]
 1031 0026 12F0200F 		tst	r2, #32
 1032 002a 13D1     		bne	.L123
6384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1033              		.loc 1 6384 0
 1034 002c FFF7FEFF 		bl	HAL_GetTick
 1035              	.LVL86:
 1036 0030 801B     		subs	r0, r0, r6
 1037 0032 8542     		cmp	r5, r0
 1038 0034 01D3     		bcc	.L118
6384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1039              		.loc 1 6384 0 is_stmt 0 discriminator 1
 1040 0036 002D     		cmp	r5, #0
 1041 0038 E6D1     		bne	.L114
 1042              	.L118:
6386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 1043              		.loc 1 6386 0 is_stmt 1
 1044 003a 636C     		ldr	r3, [r4, #68]
 1045 003c 43F02003 		orr	r3, r3, #32
 1046 0040 6364     		str	r3, [r4, #68]
6387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1047              		.loc 1 6387 0
 1048 0042 2023     		movs	r3, #32
 1049 0044 84F84130 		strb	r3, [r4, #65]
6390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1050              		.loc 1 6390 0
 1051 0048 0023     		movs	r3, #0
 1052 004a 84F84030 		strb	r3, [r4, #64]
6392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1053              		.loc 1 6392 0
ARM GAS  /tmp/ccZ85PAS.s 			page 138


 1054 004e 0121     		movs	r1, #1
 1055              	.L115:
6396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1056              		.loc 1 6396 0
 1057 0050 0846     		mov	r0, r1
 1058 0052 70BD     		pop	{r4, r5, r6, pc}
 1059              	.LVL87:
 1060              	.L123:
6358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1061              		.loc 1 6358 0
 1062 0054 9A69     		ldr	r2, [r3, #24]
 1063 0056 12F0040F 		tst	r2, #4
 1064 005a 02D0     		beq	.L117
6358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1065              		.loc 1 6358 0 is_stmt 0 discriminator 1
 1066 005c 228D     		ldrh	r2, [r4, #40]
 1067 005e 002A     		cmp	r2, #0
 1068 0060 F6D1     		bne	.L115
 1069              	.L117:
6367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1070              		.loc 1 6367 0 is_stmt 1
 1071 0062 2022     		movs	r2, #32
 1072 0064 DA61     		str	r2, [r3, #28]
6370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1073              		.loc 1 6370 0
 1074 0066 2168     		ldr	r1, [r4]
 1075 0068 4B68     		ldr	r3, [r1, #4]
 1076 006a 23F0FF73 		bic	r3, r3, #33423360
 1077 006e 23F48B33 		bic	r3, r3, #71168
 1078 0072 23F4FF73 		bic	r3, r3, #510
 1079 0076 23F00103 		bic	r3, r3, #1
 1080 007a 4B60     		str	r3, [r1, #4]
6372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1081              		.loc 1 6372 0
 1082 007c 0023     		movs	r3, #0
 1083 007e 6364     		str	r3, [r4, #68]
6373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1084              		.loc 1 6373 0
 1085 0080 84F84120 		strb	r2, [r4, #65]
6374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1086              		.loc 1 6374 0
 1087 0084 84F84230 		strb	r3, [r4, #66]
6377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1088              		.loc 1 6377 0
 1089 0088 84F84030 		strb	r3, [r4, #64]
6379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1090              		.loc 1 6379 0
 1091 008c 0121     		movs	r1, #1
 1092 008e DFE7     		b	.L115
 1093              	.L122:
6395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 1094              		.loc 1 6395 0
 1095 0090 0021     		movs	r1, #0
 1096 0092 DDE7     		b	.L115
 1097              	.L120:
6350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1098              		.loc 1 6350 0
ARM GAS  /tmp/ccZ85PAS.s 			page 139


 1099 0094 0121     		movs	r1, #1
 1100 0096 DBE7     		b	.L115
 1101              		.cfi_endproc
 1102              	.LFE214:
 1104              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1105              		.align	1
 1106              		.weak	HAL_I2C_MspInit
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1110              		.fpu fpv5-d16
 1112              	HAL_I2C_MspInit:
 1113              	.LFB143:
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1114              		.loc 1 632 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              		@ link register save eliminated.
 1119              	.LVL88:
 1120 0000 7047     		bx	lr
 1121              		.cfi_endproc
 1122              	.LFE143:
 1124              		.section	.text.HAL_I2C_Init,"ax",%progbits
 1125              		.align	1
 1126              		.global	HAL_I2C_Init
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1130              		.fpu fpv5-d16
 1132              	HAL_I2C_Init:
 1133              	.LFB141:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1134              		.loc 1 477 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              	.LVL89:
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1139              		.loc 1 479 0
 1140 0000 0028     		cmp	r0, #0
 1141 0002 57D0     		beq	.L131
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1142              		.loc 1 477 0
 1143 0004 10B5     		push	{r4, lr}
 1144              	.LCFI19:
 1145              		.cfi_def_cfa_offset 8
 1146              		.cfi_offset 4, -8
 1147              		.cfi_offset 14, -4
 1148 0006 0446     		mov	r4, r0
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1149              		.loc 1 494 0
 1150 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1151 000c 002B     		cmp	r3, #0
 1152 000e 41D0     		beq	.L136
 1153              	.LVL90:
 1154              	.L127:
ARM GAS  /tmp/ccZ85PAS.s 			page 140


 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1155              		.loc 1 525 0
 1156 0010 2423     		movs	r3, #36
 1157 0012 84F84130 		strb	r3, [r4, #65]
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1158              		.loc 1 528 0
 1159 0016 2268     		ldr	r2, [r4]
 1160 0018 1368     		ldr	r3, [r2]
 1161 001a 23F00103 		bic	r3, r3, #1
 1162 001e 1360     		str	r3, [r2]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1163              		.loc 1 532 0
 1164 0020 2268     		ldr	r2, [r4]
 1165 0022 6368     		ldr	r3, [r4, #4]
 1166 0024 23F07063 		bic	r3, r3, #251658240
 1167 0028 1361     		str	r3, [r2, #16]
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1168              		.loc 1 536 0
 1169 002a 2268     		ldr	r2, [r4]
 1170 002c 9368     		ldr	r3, [r2, #8]
 1171 002e 23F40043 		bic	r3, r3, #32768
 1172 0032 9360     		str	r3, [r2, #8]
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1173              		.loc 1 539 0
 1174 0034 E368     		ldr	r3, [r4, #12]
 1175 0036 012B     		cmp	r3, #1
 1176 0038 31D0     		beq	.L137
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1177              		.loc 1 545 0
 1178 003a 2268     		ldr	r2, [r4]
 1179 003c A368     		ldr	r3, [r4, #8]
 1180 003e 43F40443 		orr	r3, r3, #33792
 1181 0042 9360     		str	r3, [r2, #8]
 1182              	.L129:
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1183              		.loc 1 550 0
 1184 0044 E368     		ldr	r3, [r4, #12]
 1185 0046 022B     		cmp	r3, #2
 1186 0048 2FD0     		beq	.L138
 1187              	.L130:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1188              		.loc 1 555 0
 1189 004a 2268     		ldr	r2, [r4]
 1190 004c 5168     		ldr	r1, [r2, #4]
 1191 004e 1A4B     		ldr	r3, .L139
 1192 0050 0B43     		orrs	r3, r3, r1
 1193 0052 5360     		str	r3, [r2, #4]
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1194              		.loc 1 559 0
 1195 0054 2268     		ldr	r2, [r4]
 1196 0056 D368     		ldr	r3, [r2, #12]
 1197 0058 23F40043 		bic	r3, r3, #32768
 1198 005c D360     		str	r3, [r2, #12]
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1199              		.loc 1 562 0
 1200 005e 2268     		ldr	r2, [r4]
 1201 0060 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/ccZ85PAS.s 			page 141


 1202 0062 6169     		ldr	r1, [r4, #20]
 1203 0064 0B43     		orrs	r3, r3, r1
 1204 0066 A169     		ldr	r1, [r4, #24]
 1205 0068 43EA0123 		orr	r3, r3, r1, lsl #8
 1206 006c D360     		str	r3, [r2, #12]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1207              		.loc 1 566 0
 1208 006e 2268     		ldr	r2, [r4]
 1209 0070 E369     		ldr	r3, [r4, #28]
 1210 0072 216A     		ldr	r1, [r4, #32]
 1211 0074 0B43     		orrs	r3, r3, r1
 1212 0076 1360     		str	r3, [r2]
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1213              		.loc 1 569 0
 1214 0078 2268     		ldr	r2, [r4]
 1215 007a 1368     		ldr	r3, [r2]
 1216 007c 43F00103 		orr	r3, r3, #1
 1217 0080 1360     		str	r3, [r2]
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1218              		.loc 1 571 0
 1219 0082 0020     		movs	r0, #0
 1220 0084 6064     		str	r0, [r4, #68]
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1221              		.loc 1 572 0
 1222 0086 2023     		movs	r3, #32
 1223 0088 84F84130 		strb	r3, [r4, #65]
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1224              		.loc 1 573 0
 1225 008c 2063     		str	r0, [r4, #48]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1226              		.loc 1 574 0
 1227 008e 84F84200 		strb	r0, [r4, #66]
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 1228              		.loc 1 576 0
 1229 0092 10BD     		pop	{r4, pc}
 1230              	.LVL91:
 1231              	.L136:
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1232              		.loc 1 497 0
 1233 0094 80F84030 		strb	r3, [r0, #64]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1234              		.loc 1 521 0
 1235 0098 FFF7FEFF 		bl	HAL_I2C_MspInit
 1236              	.LVL92:
 1237 009c B8E7     		b	.L127
 1238              	.L137:
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1239              		.loc 1 541 0
 1240 009e 2268     		ldr	r2, [r4]
 1241 00a0 A368     		ldr	r3, [r4, #8]
 1242 00a2 43F40043 		orr	r3, r3, #32768
 1243 00a6 9360     		str	r3, [r2, #8]
 1244 00a8 CCE7     		b	.L129
 1245              	.L138:
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1246              		.loc 1 552 0
 1247 00aa 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccZ85PAS.s 			page 142


 1248 00ac 4FF40062 		mov	r2, #2048
 1249 00b0 5A60     		str	r2, [r3, #4]
 1250 00b2 CAE7     		b	.L130
 1251              	.LVL93:
 1252              	.L131:
 1253              	.LCFI20:
 1254              		.cfi_def_cfa_offset 0
 1255              		.cfi_restore 4
 1256              		.cfi_restore 14
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1257              		.loc 1 481 0
 1258 00b4 0120     		movs	r0, #1
 1259              	.LVL94:
 1260 00b6 7047     		bx	lr
 1261              	.L140:
 1262              		.align	2
 1263              	.L139:
 1264 00b8 00800002 		.word	33587200
 1265              		.cfi_endproc
 1266              	.LFE141:
 1268              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1269              		.align	1
 1270              		.weak	HAL_I2C_MspDeInit
 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1274              		.fpu fpv5-d16
 1276              	HAL_I2C_MspDeInit:
 1277              	.LFB144:
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1278              		.loc 1 648 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 0
 1281              		@ frame_needed = 0, uses_anonymous_args = 0
 1282              		@ link register save eliminated.
 1283              	.LVL95:
 1284 0000 7047     		bx	lr
 1285              		.cfi_endproc
 1286              	.LFE144:
 1288              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1289              		.align	1
 1290              		.global	HAL_I2C_DeInit
 1291              		.syntax unified
 1292              		.thumb
 1293              		.thumb_func
 1294              		.fpu fpv5-d16
 1296              	HAL_I2C_DeInit:
 1297              	.LFB142:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1298              		.loc 1 586 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 0
 1301              		@ frame_needed = 0, uses_anonymous_args = 0
 1302              	.LVL96:
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1303              		.loc 1 588 0
 1304 0000 A8B1     		cbz	r0, .L144
ARM GAS  /tmp/ccZ85PAS.s 			page 143


 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1305              		.loc 1 586 0
 1306 0002 10B5     		push	{r4, lr}
 1307              	.LCFI21:
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 4, -8
 1310              		.cfi_offset 14, -4
 1311 0004 0446     		mov	r4, r0
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1312              		.loc 1 596 0
 1313 0006 2423     		movs	r3, #36
 1314 0008 80F84130 		strb	r3, [r0, #65]
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1315              		.loc 1 599 0
 1316 000c 0268     		ldr	r2, [r0]
 1317 000e 1368     		ldr	r3, [r2]
 1318 0010 23F00103 		bic	r3, r3, #1
 1319 0014 1360     		str	r3, [r2]
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1320              		.loc 1 611 0
 1321 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1322              	.LVL97:
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1323              		.loc 1 614 0
 1324 001a 0020     		movs	r0, #0
 1325 001c 6064     		str	r0, [r4, #68]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1326              		.loc 1 615 0
 1327 001e 84F84100 		strb	r0, [r4, #65]
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1328              		.loc 1 616 0
 1329 0022 2063     		str	r0, [r4, #48]
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1330              		.loc 1 617 0
 1331 0024 84F84200 		strb	r0, [r4, #66]
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1332              		.loc 1 620 0
 1333 0028 84F84000 		strb	r0, [r4, #64]
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 1334              		.loc 1 622 0
 1335 002c 10BD     		pop	{r4, pc}
 1336              	.LVL98:
 1337              	.L144:
 1338              	.LCFI22:
 1339              		.cfi_def_cfa_offset 0
 1340              		.cfi_restore 4
 1341              		.cfi_restore 14
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1342              		.loc 1 590 0
 1343 002e 0120     		movs	r0, #1
 1344              	.LVL99:
 1345 0030 7047     		bx	lr
 1346              		.cfi_endproc
 1347              	.LFE142:
 1349              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1350              		.align	1
 1351              		.global	HAL_I2C_Master_Transmit
ARM GAS  /tmp/ccZ85PAS.s 			page 144


 1352              		.syntax unified
 1353              		.thumb
 1354              		.thumb_func
 1355              		.fpu fpv5-d16
 1357              	HAL_I2C_Master_Transmit:
 1358              	.LFB145:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1359              		.loc 1 1070 0
 1360              		.cfi_startproc
 1361              		@ args = 4, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363              	.LVL100:
 1364 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1365              	.LCFI23:
 1366              		.cfi_def_cfa_offset 28
 1367              		.cfi_offset 4, -28
 1368              		.cfi_offset 5, -24
 1369              		.cfi_offset 6, -20
 1370              		.cfi_offset 7, -16
 1371              		.cfi_offset 8, -12
 1372              		.cfi_offset 9, -8
 1373              		.cfi_offset 14, -4
 1374 0004 83B0     		sub	sp, sp, #12
 1375              	.LCFI24:
 1376              		.cfi_def_cfa_offset 40
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1377              		.loc 1 1073 0
 1378 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1379 000a EDB2     		uxtb	r5, r5
 1380 000c 202D     		cmp	r5, #32
 1381 000e 04D0     		beq	.L164
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1382              		.loc 1 1168 0
 1383 0010 0223     		movs	r3, #2
 1384              	.LVL101:
 1385              	.L150:
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1386              		.loc 1 1170 0
 1387 0012 1846     		mov	r0, r3
 1388 0014 03B0     		add	sp, sp, #12
 1389              	.LCFI25:
 1390              		.cfi_remember_state
 1391              		.cfi_def_cfa_offset 28
 1392              		@ sp needed
 1393 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1394              	.LVL102:
 1395              	.L164:
 1396              	.LCFI26:
 1397              		.cfi_restore_state
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1398              		.loc 1 1076 0
 1399 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1400 001e 012C     		cmp	r4, #1
 1401 0020 01D1     		bne	.L165
 1402 0022 0223     		movs	r3, #2
 1403              	.LVL103:
 1404 0024 F5E7     		b	.L150
ARM GAS  /tmp/ccZ85PAS.s 			page 145


 1405              	.LVL104:
 1406              	.L165:
 1407 0026 9846     		mov	r8, r3
 1408 0028 1746     		mov	r7, r2
 1409 002a 0D46     		mov	r5, r1
 1410 002c 0446     		mov	r4, r0
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1411              		.loc 1 1076 0 is_stmt 0 discriminator 2
 1412 002e 4FF00109 		mov	r9, #1
 1413 0032 80F84090 		strb	r9, [r0, #64]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1414              		.loc 1 1079 0 is_stmt 1 discriminator 2
 1415 0036 FFF7FEFF 		bl	HAL_GetTick
 1416              	.LVL105:
 1417 003a 0646     		mov	r6, r0
 1418              	.LVL106:
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1419              		.loc 1 1081 0 discriminator 2
 1420 003c 0090     		str	r0, [sp]
 1421 003e 1923     		movs	r3, #25
 1422 0040 4A46     		mov	r2, r9
 1423 0042 4FF40041 		mov	r1, #32768
 1424 0046 2046     		mov	r0, r4
 1425              	.LVL107:
 1426 0048 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1427              	.LVL108:
 1428 004c 0028     		cmp	r0, #0
 1429 004e 40F08980 		bne	.L159
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1430              		.loc 1 1086 0
 1431 0052 2123     		movs	r3, #33
 1432 0054 84F84130 		strb	r3, [r4, #65]
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1433              		.loc 1 1087 0
 1434 0058 1023     		movs	r3, #16
 1435 005a 84F84230 		strb	r3, [r4, #66]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1436              		.loc 1 1088 0
 1437 005e 0023     		movs	r3, #0
 1438 0060 6364     		str	r3, [r4, #68]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1439              		.loc 1 1091 0
 1440 0062 6762     		str	r7, [r4, #36]
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1441              		.loc 1 1092 0
 1442 0064 A4F82A80 		strh	r8, [r4, #42]	@ movhi
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1443              		.loc 1 1093 0
 1444 0068 6363     		str	r3, [r4, #52]
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1445              		.loc 1 1097 0
 1446 006a 638D     		ldrh	r3, [r4, #42]
 1447 006c 9BB2     		uxth	r3, r3
 1448 006e FF2B     		cmp	r3, #255
 1449 0070 0AD9     		bls	.L151
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1450              		.loc 1 1099 0
ARM GAS  /tmp/ccZ85PAS.s 			page 146


 1451 0072 FF22     		movs	r2, #255
 1452 0074 2285     		strh	r2, [r4, #40]	@ movhi
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1453              		.loc 1 1100 0
 1454 0076 3F4B     		ldr	r3, .L167
 1455 0078 0093     		str	r3, [sp]
 1456 007a 4FF08073 		mov	r3, #16777216
 1457 007e 2946     		mov	r1, r5
 1458 0080 2046     		mov	r0, r4
 1459 0082 FFF7FEFF 		bl	I2C_TransferConfig
 1460              	.LVL109:
 1461 0086 18E0     		b	.L152
 1462              	.L151:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1463              		.loc 1 1104 0
 1464 0088 628D     		ldrh	r2, [r4, #42]
 1465 008a 92B2     		uxth	r2, r2
 1466 008c 2285     		strh	r2, [r4, #40]	@ movhi
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1467              		.loc 1 1105 0
 1468 008e 394B     		ldr	r3, .L167
 1469 0090 0093     		str	r3, [sp]
 1470 0092 4FF00073 		mov	r3, #33554432
 1471 0096 D2B2     		uxtb	r2, r2
 1472 0098 2946     		mov	r1, r5
 1473 009a 2046     		mov	r0, r4
 1474 009c FFF7FEFF 		bl	I2C_TransferConfig
 1475              	.LVL110:
 1476 00a0 0BE0     		b	.L152
 1477              	.L155:
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1478              		.loc 1 1139 0
 1479 00a2 628D     		ldrh	r2, [r4, #42]
 1480 00a4 92B2     		uxth	r2, r2
 1481 00a6 2285     		strh	r2, [r4, #40]	@ movhi
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1482              		.loc 1 1140 0
 1483 00a8 0023     		movs	r3, #0
 1484 00aa 0093     		str	r3, [sp]
 1485 00ac 4FF00073 		mov	r3, #33554432
 1486 00b0 D2B2     		uxtb	r2, r2
 1487 00b2 2946     		mov	r1, r5
 1488 00b4 2046     		mov	r0, r4
 1489 00b6 FFF7FEFF 		bl	I2C_TransferConfig
 1490              	.LVL111:
 1491              	.L152:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1492              		.loc 1 1108 0
 1493 00ba 638D     		ldrh	r3, [r4, #42]
 1494 00bc 9BB2     		uxth	r3, r3
 1495 00be 002B     		cmp	r3, #0
 1496 00c0 33D0     		beq	.L166
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1497              		.loc 1 1111 0
 1498 00c2 3246     		mov	r2, r6
 1499 00c4 0A99     		ldr	r1, [sp, #40]
 1500 00c6 2046     		mov	r0, r4
ARM GAS  /tmp/ccZ85PAS.s 			page 147


 1501 00c8 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1502              	.LVL112:
 1503 00cc 0028     		cmp	r0, #0
 1504 00ce 4BD1     		bne	.L160
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1505              		.loc 1 1116 0
 1506 00d0 2368     		ldr	r3, [r4]
 1507 00d2 626A     		ldr	r2, [r4, #36]
 1508 00d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1509 00d6 9A62     		str	r2, [r3, #40]
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1510              		.loc 1 1119 0
 1511 00d8 636A     		ldr	r3, [r4, #36]
 1512 00da 0133     		adds	r3, r3, #1
 1513 00dc 6362     		str	r3, [r4, #36]
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 1514              		.loc 1 1121 0
 1515 00de 638D     		ldrh	r3, [r4, #42]
 1516 00e0 9BB2     		uxth	r3, r3
 1517 00e2 013B     		subs	r3, r3, #1
 1518 00e4 9BB2     		uxth	r3, r3
 1519 00e6 6385     		strh	r3, [r4, #42]	@ movhi
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1520              		.loc 1 1122 0
 1521 00e8 238D     		ldrh	r3, [r4, #40]
 1522 00ea 013B     		subs	r3, r3, #1
 1523 00ec 9BB2     		uxth	r3, r3
 1524 00ee 2385     		strh	r3, [r4, #40]	@ movhi
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1525              		.loc 1 1124 0
 1526 00f0 628D     		ldrh	r2, [r4, #42]
 1527 00f2 92B2     		uxth	r2, r2
 1528 00f4 002A     		cmp	r2, #0
 1529 00f6 E0D0     		beq	.L152
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1530              		.loc 1 1124 0 is_stmt 0 discriminator 1
 1531 00f8 002B     		cmp	r3, #0
 1532 00fa DED1     		bne	.L152
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1533              		.loc 1 1127 0 is_stmt 1
 1534 00fc 0096     		str	r6, [sp]
 1535 00fe 0A9B     		ldr	r3, [sp, #40]
 1536 0100 0022     		movs	r2, #0
 1537 0102 8021     		movs	r1, #128
 1538 0104 2046     		mov	r0, r4
 1539 0106 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1540              	.LVL113:
 1541 010a 78BB     		cbnz	r0, .L161
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1542              		.loc 1 1132 0
 1543 010c 638D     		ldrh	r3, [r4, #42]
 1544 010e 9BB2     		uxth	r3, r3
 1545 0110 FF2B     		cmp	r3, #255
 1546 0112 C6D9     		bls	.L155
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1547              		.loc 1 1134 0
 1548 0114 FF22     		movs	r2, #255
ARM GAS  /tmp/ccZ85PAS.s 			page 148


 1549 0116 2285     		strh	r2, [r4, #40]	@ movhi
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1550              		.loc 1 1135 0
 1551 0118 0023     		movs	r3, #0
 1552 011a 0093     		str	r3, [sp]
 1553 011c 4FF08073 		mov	r3, #16777216
 1554 0120 2946     		mov	r1, r5
 1555 0122 2046     		mov	r0, r4
 1556 0124 FFF7FEFF 		bl	I2C_TransferConfig
 1557              	.LVL114:
 1558 0128 C7E7     		b	.L152
 1559              	.L166:
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1560              		.loc 1 1147 0
 1561 012a 3246     		mov	r2, r6
 1562 012c 0A99     		ldr	r1, [sp, #40]
 1563 012e 2046     		mov	r0, r4
 1564 0130 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1565              	.LVL115:
 1566 0134 0346     		mov	r3, r0
 1567 0136 D8B9     		cbnz	r0, .L162
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1568              		.loc 1 1153 0
 1569 0138 2268     		ldr	r2, [r4]
 1570 013a 2021     		movs	r1, #32
 1571 013c D161     		str	r1, [r2, #28]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1572              		.loc 1 1156 0
 1573 013e 2068     		ldr	r0, [r4]
 1574 0140 4268     		ldr	r2, [r0, #4]
 1575 0142 22F0FF72 		bic	r2, r2, #33423360
 1576 0146 22F48B32 		bic	r2, r2, #71168
 1577 014a 22F4FF72 		bic	r2, r2, #510
 1578 014e 22F00102 		bic	r2, r2, #1
 1579 0152 4260     		str	r2, [r0, #4]
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1580              		.loc 1 1158 0
 1581 0154 84F84110 		strb	r1, [r4, #65]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1582              		.loc 1 1159 0
 1583 0158 0022     		movs	r2, #0
 1584 015a 84F84220 		strb	r2, [r4, #66]
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1585              		.loc 1 1162 0
 1586 015e 84F84020 		strb	r2, [r4, #64]
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1587              		.loc 1 1164 0
 1588 0162 56E7     		b	.L150
 1589              	.L159:
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1590              		.loc 1 1083 0
 1591 0164 0123     		movs	r3, #1
 1592 0166 54E7     		b	.L150
 1593              	.L160:
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1594              		.loc 1 1113 0
 1595 0168 0123     		movs	r3, #1
ARM GAS  /tmp/ccZ85PAS.s 			page 149


 1596 016a 52E7     		b	.L150
 1597              	.L161:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1598              		.loc 1 1129 0
 1599 016c 0123     		movs	r3, #1
 1600 016e 50E7     		b	.L150
 1601              	.L162:
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1602              		.loc 1 1149 0
 1603 0170 0123     		movs	r3, #1
 1604 0172 4EE7     		b	.L150
 1605              	.L168:
 1606              		.align	2
 1607              	.L167:
 1608 0174 00200080 		.word	-2147475456
 1609              		.cfi_endproc
 1610              	.LFE145:
 1612              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1613              		.align	1
 1614              		.global	HAL_I2C_Master_Receive
 1615              		.syntax unified
 1616              		.thumb
 1617              		.thumb_func
 1618              		.fpu fpv5-d16
 1620              	HAL_I2C_Master_Receive:
 1621              	.LFB146:
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1622              		.loc 1 1185 0
 1623              		.cfi_startproc
 1624              		@ args = 4, pretend = 0, frame = 0
 1625              		@ frame_needed = 0, uses_anonymous_args = 0
 1626              	.LVL116:
 1627 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1628              	.LCFI27:
 1629              		.cfi_def_cfa_offset 28
 1630              		.cfi_offset 4, -28
 1631              		.cfi_offset 5, -24
 1632              		.cfi_offset 6, -20
 1633              		.cfi_offset 7, -16
 1634              		.cfi_offset 8, -12
 1635              		.cfi_offset 9, -8
 1636              		.cfi_offset 14, -4
 1637 0004 83B0     		sub	sp, sp, #12
 1638              	.LCFI28:
 1639              		.cfi_def_cfa_offset 40
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1640              		.loc 1 1188 0
 1641 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1642 000a EDB2     		uxtb	r5, r5
 1643 000c 202D     		cmp	r5, #32
 1644 000e 04D0     		beq	.L184
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1645              		.loc 1 1284 0
 1646 0010 0223     		movs	r3, #2
 1647              	.LVL117:
 1648              	.L170:
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 150


 1649              		.loc 1 1286 0
 1650 0012 1846     		mov	r0, r3
 1651 0014 03B0     		add	sp, sp, #12
 1652              	.LCFI29:
 1653              		.cfi_remember_state
 1654              		.cfi_def_cfa_offset 28
 1655              		@ sp needed
 1656 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1657              	.LVL118:
 1658              	.L184:
 1659              	.LCFI30:
 1660              		.cfi_restore_state
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1661              		.loc 1 1191 0
 1662 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1663 001e 012C     		cmp	r4, #1
 1664 0020 01D1     		bne	.L185
 1665 0022 0223     		movs	r3, #2
 1666              	.LVL119:
 1667 0024 F5E7     		b	.L170
 1668              	.LVL120:
 1669              	.L185:
 1670 0026 9846     		mov	r8, r3
 1671 0028 1746     		mov	r7, r2
 1672 002a 0D46     		mov	r5, r1
 1673 002c 0446     		mov	r4, r0
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1674              		.loc 1 1191 0 is_stmt 0 discriminator 2
 1675 002e 4FF00109 		mov	r9, #1
 1676 0032 80F84090 		strb	r9, [r0, #64]
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1677              		.loc 1 1194 0 is_stmt 1 discriminator 2
 1678 0036 FFF7FEFF 		bl	HAL_GetTick
 1679              	.LVL121:
 1680 003a 0646     		mov	r6, r0
 1681              	.LVL122:
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1682              		.loc 1 1196 0 discriminator 2
 1683 003c 0090     		str	r0, [sp]
 1684 003e 1923     		movs	r3, #25
 1685 0040 4A46     		mov	r2, r9
 1686 0042 4FF40041 		mov	r1, #32768
 1687 0046 2046     		mov	r0, r4
 1688              	.LVL123:
 1689 0048 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1690              	.LVL124:
 1691 004c 0028     		cmp	r0, #0
 1692 004e 40F08880 		bne	.L179
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1693              		.loc 1 1201 0
 1694 0052 2223     		movs	r3, #34
 1695 0054 84F84130 		strb	r3, [r4, #65]
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1696              		.loc 1 1202 0
 1697 0058 1023     		movs	r3, #16
 1698 005a 84F84230 		strb	r3, [r4, #66]
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 151


 1699              		.loc 1 1203 0
 1700 005e 0023     		movs	r3, #0
 1701 0060 6364     		str	r3, [r4, #68]
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1702              		.loc 1 1206 0
 1703 0062 6762     		str	r7, [r4, #36]
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1704              		.loc 1 1207 0
 1705 0064 A4F82A80 		strh	r8, [r4, #42]	@ movhi
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1706              		.loc 1 1208 0
 1707 0068 6363     		str	r3, [r4, #52]
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1708              		.loc 1 1212 0
 1709 006a 638D     		ldrh	r3, [r4, #42]
 1710 006c 9BB2     		uxth	r3, r3
 1711 006e FF2B     		cmp	r3, #255
 1712 0070 0AD9     		bls	.L171
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1713              		.loc 1 1214 0
 1714 0072 FF22     		movs	r2, #255
 1715 0074 2285     		strh	r2, [r4, #40]	@ movhi
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1716              		.loc 1 1215 0
 1717 0076 3F4B     		ldr	r3, .L187
 1718 0078 0093     		str	r3, [sp]
 1719 007a 4FF08073 		mov	r3, #16777216
 1720 007e 2946     		mov	r1, r5
 1721 0080 2046     		mov	r0, r4
 1722 0082 FFF7FEFF 		bl	I2C_TransferConfig
 1723              	.LVL125:
 1724 0086 18E0     		b	.L172
 1725              	.L171:
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1726              		.loc 1 1219 0
 1727 0088 628D     		ldrh	r2, [r4, #42]
 1728 008a 92B2     		uxth	r2, r2
 1729 008c 2285     		strh	r2, [r4, #40]	@ movhi
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1730              		.loc 1 1220 0
 1731 008e 394B     		ldr	r3, .L187
 1732 0090 0093     		str	r3, [sp]
 1733 0092 4FF00073 		mov	r3, #33554432
 1734 0096 D2B2     		uxtb	r2, r2
 1735 0098 2946     		mov	r1, r5
 1736 009a 2046     		mov	r0, r4
 1737 009c FFF7FEFF 		bl	I2C_TransferConfig
 1738              	.LVL126:
 1739 00a0 0BE0     		b	.L172
 1740              	.L175:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1741              		.loc 1 1255 0
 1742 00a2 628D     		ldrh	r2, [r4, #42]
 1743 00a4 92B2     		uxth	r2, r2
 1744 00a6 2285     		strh	r2, [r4, #40]	@ movhi
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1745              		.loc 1 1256 0
ARM GAS  /tmp/ccZ85PAS.s 			page 152


 1746 00a8 0023     		movs	r3, #0
 1747 00aa 0093     		str	r3, [sp]
 1748 00ac 4FF00073 		mov	r3, #33554432
 1749 00b0 D2B2     		uxtb	r2, r2
 1750 00b2 2946     		mov	r1, r5
 1751 00b4 2046     		mov	r0, r4
 1752 00b6 FFF7FEFF 		bl	I2C_TransferConfig
 1753              	.LVL127:
 1754              	.L172:
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1755              		.loc 1 1223 0
 1756 00ba 638D     		ldrh	r3, [r4, #42]
 1757 00bc 9BB2     		uxth	r3, r3
 1758 00be 002B     		cmp	r3, #0
 1759 00c0 32D0     		beq	.L186
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1760              		.loc 1 1226 0
 1761 00c2 3246     		mov	r2, r6
 1762 00c4 0A99     		ldr	r1, [sp, #40]
 1763 00c6 2046     		mov	r0, r4
 1764 00c8 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1765              	.LVL128:
 1766 00cc 0028     		cmp	r0, #0
 1767 00ce 4AD1     		bne	.L180
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1768              		.loc 1 1232 0
 1769 00d0 636A     		ldr	r3, [r4, #36]
 1770 00d2 2268     		ldr	r2, [r4]
 1771 00d4 526A     		ldr	r2, [r2, #36]
 1772 00d6 1A70     		strb	r2, [r3]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1773              		.loc 1 1235 0
 1774 00d8 636A     		ldr	r3, [r4, #36]
 1775 00da 0133     		adds	r3, r3, #1
 1776 00dc 6362     		str	r3, [r4, #36]
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 1777              		.loc 1 1237 0
 1778 00de 228D     		ldrh	r2, [r4, #40]
 1779 00e0 013A     		subs	r2, r2, #1
 1780 00e2 92B2     		uxth	r2, r2
 1781 00e4 2285     		strh	r2, [r4, #40]	@ movhi
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1782              		.loc 1 1238 0
 1783 00e6 638D     		ldrh	r3, [r4, #42]
 1784 00e8 9BB2     		uxth	r3, r3
 1785 00ea 013B     		subs	r3, r3, #1
 1786 00ec 9BB2     		uxth	r3, r3
 1787 00ee 6385     		strh	r3, [r4, #42]	@ movhi
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1788              		.loc 1 1240 0
 1789 00f0 638D     		ldrh	r3, [r4, #42]
 1790 00f2 9BB2     		uxth	r3, r3
 1791 00f4 002B     		cmp	r3, #0
 1792 00f6 E0D0     		beq	.L172
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1793              		.loc 1 1240 0 is_stmt 0 discriminator 1
 1794 00f8 002A     		cmp	r2, #0
ARM GAS  /tmp/ccZ85PAS.s 			page 153


 1795 00fa DED1     		bne	.L172
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1796              		.loc 1 1243 0 is_stmt 1
 1797 00fc 0096     		str	r6, [sp]
 1798 00fe 0A9B     		ldr	r3, [sp, #40]
 1799 0100 8021     		movs	r1, #128
 1800 0102 2046     		mov	r0, r4
 1801 0104 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1802              	.LVL129:
 1803 0108 78BB     		cbnz	r0, .L181
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1804              		.loc 1 1248 0
 1805 010a 638D     		ldrh	r3, [r4, #42]
 1806 010c 9BB2     		uxth	r3, r3
 1807 010e FF2B     		cmp	r3, #255
 1808 0110 C7D9     		bls	.L175
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1809              		.loc 1 1250 0
 1810 0112 FF22     		movs	r2, #255
 1811 0114 2285     		strh	r2, [r4, #40]	@ movhi
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1812              		.loc 1 1251 0
 1813 0116 0023     		movs	r3, #0
 1814 0118 0093     		str	r3, [sp]
 1815 011a 4FF08073 		mov	r3, #16777216
 1816 011e 2946     		mov	r1, r5
 1817 0120 2046     		mov	r0, r4
 1818 0122 FFF7FEFF 		bl	I2C_TransferConfig
 1819              	.LVL130:
 1820 0126 C8E7     		b	.L172
 1821              	.L186:
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1822              		.loc 1 1263 0
 1823 0128 3246     		mov	r2, r6
 1824 012a 0A99     		ldr	r1, [sp, #40]
 1825 012c 2046     		mov	r0, r4
 1826 012e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1827              	.LVL131:
 1828 0132 0346     		mov	r3, r0
 1829 0134 D8B9     		cbnz	r0, .L182
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1830              		.loc 1 1269 0
 1831 0136 2268     		ldr	r2, [r4]
 1832 0138 2021     		movs	r1, #32
 1833 013a D161     		str	r1, [r2, #28]
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1834              		.loc 1 1272 0
 1835 013c 2068     		ldr	r0, [r4]
 1836 013e 4268     		ldr	r2, [r0, #4]
 1837 0140 22F0FF72 		bic	r2, r2, #33423360
 1838 0144 22F48B32 		bic	r2, r2, #71168
 1839 0148 22F4FF72 		bic	r2, r2, #510
 1840 014c 22F00102 		bic	r2, r2, #1
 1841 0150 4260     		str	r2, [r0, #4]
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1842              		.loc 1 1274 0
 1843 0152 84F84110 		strb	r1, [r4, #65]
ARM GAS  /tmp/ccZ85PAS.s 			page 154


1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1844              		.loc 1 1275 0
 1845 0156 0022     		movs	r2, #0
 1846 0158 84F84220 		strb	r2, [r4, #66]
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1847              		.loc 1 1278 0
 1848 015c 84F84020 		strb	r2, [r4, #64]
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1849              		.loc 1 1280 0
 1850 0160 57E7     		b	.L170
 1851              	.L179:
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1852              		.loc 1 1198 0
 1853 0162 0123     		movs	r3, #1
 1854 0164 55E7     		b	.L170
 1855              	.L180:
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1856              		.loc 1 1228 0
 1857 0166 0123     		movs	r3, #1
 1858 0168 53E7     		b	.L170
 1859              	.L181:
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1860              		.loc 1 1245 0
 1861 016a 0123     		movs	r3, #1
 1862 016c 51E7     		b	.L170
 1863              	.L182:
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1864              		.loc 1 1265 0
 1865 016e 0123     		movs	r3, #1
 1866 0170 4FE7     		b	.L170
 1867              	.L188:
 1868 0172 00BF     		.align	2
 1869              	.L187:
 1870 0174 00240080 		.word	-2147474432
 1871              		.cfi_endproc
 1872              	.LFE146:
 1874              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1875              		.align	1
 1876              		.global	HAL_I2C_Slave_Transmit
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.fpu fpv5-d16
 1882              	HAL_I2C_Slave_Transmit:
 1883              	.LFB147:
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1884              		.loc 1 1298 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 0
 1887              		@ frame_needed = 0, uses_anonymous_args = 0
 1888              	.LVL132:
 1889 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1890              	.LCFI31:
 1891              		.cfi_def_cfa_offset 24
 1892              		.cfi_offset 4, -24
 1893              		.cfi_offset 5, -20
 1894              		.cfi_offset 6, -16
ARM GAS  /tmp/ccZ85PAS.s 			page 155


 1895              		.cfi_offset 7, -12
 1896              		.cfi_offset 8, -8
 1897              		.cfi_offset 14, -4
 1898 0004 82B0     		sub	sp, sp, #8
 1899              	.LCFI32:
 1900              		.cfi_def_cfa_offset 32
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1901              		.loc 1 1301 0
 1902 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 1903 000a E4B2     		uxtb	r4, r4
 1904 000c 202C     		cmp	r4, #32
 1905 000e 04D0     		beq	.L204
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1906              		.loc 1 1421 0
 1907 0010 0223     		movs	r3, #2
 1908              	.LVL133:
 1909              	.L190:
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1910              		.loc 1 1423 0
 1911 0012 1846     		mov	r0, r3
 1912 0014 02B0     		add	sp, sp, #8
 1913              	.LCFI33:
 1914              		.cfi_remember_state
 1915              		.cfi_def_cfa_offset 24
 1916              		@ sp needed
 1917 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1918              	.LVL134:
 1919              	.L204:
 1920              	.LCFI34:
 1921              		.cfi_restore_state
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1922              		.loc 1 1303 0
 1923 001a 002A     		cmp	r2, #0
 1924 001c 18BF     		it	ne
 1925 001e 0029     		cmpne	r1, #0
 1926 0020 05D0     		beq	.L205
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1927              		.loc 1 1309 0
 1928 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1929 0026 012C     		cmp	r4, #1
 1930 0028 06D1     		bne	.L206
 1931 002a 0223     		movs	r3, #2
 1932              	.LVL135:
 1933 002c F1E7     		b	.L190
 1934              	.LVL136:
 1935              	.L205:
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 1936              		.loc 1 1305 0
 1937 002e 4FF40073 		mov	r3, #512
 1938              	.LVL137:
 1939 0032 4364     		str	r3, [r0, #68]
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1940              		.loc 1 1306 0
 1941 0034 0123     		movs	r3, #1
 1942 0036 ECE7     		b	.L190
 1943              	.LVL138:
 1944              	.L206:
ARM GAS  /tmp/ccZ85PAS.s 			page 156


 1945 0038 1F46     		mov	r7, r3
 1946 003a 1646     		mov	r6, r2
 1947 003c 0D46     		mov	r5, r1
 1948 003e 0446     		mov	r4, r0
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1949              		.loc 1 1309 0 discriminator 2
 1950 0040 0123     		movs	r3, #1
 1951              	.LVL139:
 1952 0042 80F84030 		strb	r3, [r0, #64]
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1953              		.loc 1 1312 0 discriminator 2
 1954 0046 FFF7FEFF 		bl	HAL_GetTick
 1955              	.LVL140:
 1956 004a 8046     		mov	r8, r0
 1957              	.LVL141:
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1958              		.loc 1 1314 0 discriminator 2
 1959 004c 2123     		movs	r3, #33
 1960 004e 84F84130 		strb	r3, [r4, #65]
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1961              		.loc 1 1315 0 discriminator 2
 1962 0052 2023     		movs	r3, #32
 1963 0054 84F84230 		strb	r3, [r4, #66]
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1964              		.loc 1 1316 0 discriminator 2
 1965 0058 0022     		movs	r2, #0
 1966 005a 6264     		str	r2, [r4, #68]
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1967              		.loc 1 1319 0 discriminator 2
 1968 005c 6562     		str	r5, [r4, #36]
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1969              		.loc 1 1320 0 discriminator 2
 1970 005e 6685     		strh	r6, [r4, #42]	@ movhi
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1971              		.loc 1 1321 0 discriminator 2
 1972 0060 6263     		str	r2, [r4, #52]
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1973              		.loc 1 1324 0 discriminator 2
 1974 0062 2168     		ldr	r1, [r4]
 1975 0064 4B68     		ldr	r3, [r1, #4]
 1976 0066 23F40043 		bic	r3, r3, #32768
 1977 006a 4B60     		str	r3, [r1, #4]
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1978              		.loc 1 1327 0 discriminator 2
 1979 006c 0090     		str	r0, [sp]
 1980 006e 3B46     		mov	r3, r7
 1981 0070 0821     		movs	r1, #8
 1982 0072 2046     		mov	r0, r4
 1983              	.LVL142:
 1984 0074 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1985              	.LVL143:
 1986 0078 40BB     		cbnz	r0, .L207
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1987              		.loc 1 1335 0
 1988 007a 2368     		ldr	r3, [r4]
 1989 007c 0822     		movs	r2, #8
 1990 007e DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccZ85PAS.s 			page 157


1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1991              		.loc 1 1338 0
 1992 0080 E368     		ldr	r3, [r4, #12]
 1993 0082 022B     		cmp	r3, #2
 1994 0084 29D0     		beq	.L208
 1995              	.L193:
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1996              		.loc 1 1353 0
 1997 0086 CDF80080 		str	r8, [sp]
 1998 008a 3B46     		mov	r3, r7
 1999 008c 0022     		movs	r2, #0
 2000 008e 4FF48031 		mov	r1, #65536
 2001 0092 2046     		mov	r0, r4
 2002 0094 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2003              	.LVL144:
 2004 0098 0028     		cmp	r0, #0
 2005 009a 32D1     		bne	.L209
 2006              	.L195:
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2007              		.loc 1 1360 0
 2008 009c 638D     		ldrh	r3, [r4, #42]
 2009 009e 9BB2     		uxth	r3, r3
 2010 00a0 002B     		cmp	r3, #0
 2011 00a2 3CD0     		beq	.L210
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2012              		.loc 1 1363 0
 2013 00a4 4246     		mov	r2, r8
 2014 00a6 3946     		mov	r1, r7
 2015 00a8 2046     		mov	r0, r4
 2016 00aa FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2017              	.LVL145:
 2018 00ae 0028     		cmp	r0, #0
 2019 00b0 2ED1     		bne	.L211
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2020              		.loc 1 1371 0
 2021 00b2 2368     		ldr	r3, [r4]
 2022 00b4 626A     		ldr	r2, [r4, #36]
 2023 00b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2024 00b8 9A62     		str	r2, [r3, #40]
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2025              		.loc 1 1374 0
 2026 00ba 636A     		ldr	r3, [r4, #36]
 2027 00bc 0133     		adds	r3, r3, #1
 2028 00be 6362     		str	r3, [r4, #36]
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2029              		.loc 1 1376 0
 2030 00c0 638D     		ldrh	r3, [r4, #42]
 2031 00c2 9BB2     		uxth	r3, r3
 2032 00c4 013B     		subs	r3, r3, #1
 2033 00c6 9BB2     		uxth	r3, r3
 2034 00c8 6385     		strh	r3, [r4, #42]	@ movhi
 2035 00ca E7E7     		b	.L195
 2036              	.L207:
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2037              		.loc 1 1330 0
 2038 00cc 2268     		ldr	r2, [r4]
 2039 00ce 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccZ85PAS.s 			page 158


 2040 00d0 43F40043 		orr	r3, r3, #32768
 2041 00d4 5360     		str	r3, [r2, #4]
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2042              		.loc 1 1331 0
 2043 00d6 0123     		movs	r3, #1
 2044 00d8 9BE7     		b	.L190
 2045              	.L208:
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2046              		.loc 1 1341 0
 2047 00da CDF80080 		str	r8, [sp]
 2048 00de 3B46     		mov	r3, r7
 2049 00e0 0022     		movs	r2, #0
 2050 00e2 0821     		movs	r1, #8
 2051 00e4 2046     		mov	r0, r4
 2052 00e6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2053              	.LVL146:
 2054 00ea 18B9     		cbnz	r0, .L212
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2055              		.loc 1 1349 0
 2056 00ec 2368     		ldr	r3, [r4]
 2057 00ee 0822     		movs	r2, #8
 2058 00f0 DA61     		str	r2, [r3, #28]
 2059 00f2 C8E7     		b	.L193
 2060              	.L212:
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 2061              		.loc 1 1344 0
 2062 00f4 2268     		ldr	r2, [r4]
 2063 00f6 5368     		ldr	r3, [r2, #4]
 2064 00f8 43F40043 		orr	r3, r3, #32768
 2065 00fc 5360     		str	r3, [r2, #4]
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2066              		.loc 1 1345 0
 2067 00fe 0123     		movs	r3, #1
 2068 0100 87E7     		b	.L190
 2069              	.L209:
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2070              		.loc 1 1356 0
 2071 0102 2268     		ldr	r2, [r4]
 2072 0104 5368     		ldr	r3, [r2, #4]
 2073 0106 43F40043 		orr	r3, r3, #32768
 2074 010a 5360     		str	r3, [r2, #4]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2075              		.loc 1 1357 0
 2076 010c 0123     		movs	r3, #1
 2077 010e 80E7     		b	.L190
 2078              	.L211:
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 2079              		.loc 1 1366 0
 2080 0110 2268     		ldr	r2, [r4]
 2081 0112 5368     		ldr	r3, [r2, #4]
 2082 0114 43F40043 		orr	r3, r3, #32768
 2083 0118 5360     		str	r3, [r2, #4]
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2084              		.loc 1 1367 0
 2085 011a 0123     		movs	r3, #1
 2086 011c 79E7     		b	.L190
 2087              	.L210:
ARM GAS  /tmp/ccZ85PAS.s 			page 159


1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2088              		.loc 1 1380 0
 2089 011e 4246     		mov	r2, r8
 2090 0120 3946     		mov	r1, r7
 2091 0122 2046     		mov	r0, r4
 2092 0124 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2093              	.LVL147:
 2094 0128 58B1     		cbz	r0, .L198
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2095              		.loc 1 1383 0
 2096 012a 2268     		ldr	r2, [r4]
 2097 012c 5368     		ldr	r3, [r2, #4]
 2098 012e 43F40043 		orr	r3, r3, #32768
 2099 0132 5360     		str	r3, [r2, #4]
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2100              		.loc 1 1385 0
 2101 0134 636C     		ldr	r3, [r4, #68]
 2102 0136 042B     		cmp	r3, #4
 2103 0138 01D0     		beq	.L213
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2104              		.loc 1 1393 0
 2105 013a 0123     		movs	r3, #1
 2106 013c 69E7     		b	.L190
 2107              	.L213:
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2108              		.loc 1 1389 0
 2109 013e 0023     		movs	r3, #0
 2110 0140 6364     		str	r3, [r4, #68]
 2111              	.L198:
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2112              		.loc 1 1398 0
 2113 0142 2368     		ldr	r3, [r4]
 2114 0144 2022     		movs	r2, #32
 2115 0146 DA61     		str	r2, [r3, #28]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2116              		.loc 1 1401 0
 2117 0148 CDF80080 		str	r8, [sp]
 2118 014c 3B46     		mov	r3, r7
 2119 014e 0122     		movs	r2, #1
 2120 0150 4FF40041 		mov	r1, #32768
 2121 0154 2046     		mov	r0, r4
 2122 0156 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2123              	.LVL148:
 2124 015a 0346     		mov	r3, r0
 2125 015c 68B9     		cbnz	r0, .L214
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2126              		.loc 1 1409 0
 2127 015e 2168     		ldr	r1, [r4]
 2128 0160 4A68     		ldr	r2, [r1, #4]
 2129 0162 42F40042 		orr	r2, r2, #32768
 2130 0166 4A60     		str	r2, [r1, #4]
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2131              		.loc 1 1411 0
 2132 0168 2022     		movs	r2, #32
 2133 016a 84F84120 		strb	r2, [r4, #65]
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2134              		.loc 1 1412 0
ARM GAS  /tmp/ccZ85PAS.s 			page 160


 2135 016e 0022     		movs	r2, #0
 2136 0170 84F84220 		strb	r2, [r4, #66]
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2137              		.loc 1 1415 0
 2138 0174 84F84020 		strb	r2, [r4, #64]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2139              		.loc 1 1417 0
 2140 0178 4BE7     		b	.L190
 2141              	.L214:
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2142              		.loc 1 1404 0
 2143 017a 2268     		ldr	r2, [r4]
 2144 017c 5368     		ldr	r3, [r2, #4]
 2145 017e 43F40043 		orr	r3, r3, #32768
 2146 0182 5360     		str	r3, [r2, #4]
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2147              		.loc 1 1405 0
 2148 0184 0123     		movs	r3, #1
 2149 0186 44E7     		b	.L190
 2150              		.cfi_endproc
 2151              	.LFE147:
 2153              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2154              		.align	1
 2155              		.global	HAL_I2C_Slave_Receive
 2156              		.syntax unified
 2157              		.thumb
 2158              		.thumb_func
 2159              		.fpu fpv5-d16
 2161              	HAL_I2C_Slave_Receive:
 2162              	.LFB148:
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 2163              		.loc 1 1435 0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 2167              	.LVL149:
 2168 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2169              	.LCFI35:
 2170              		.cfi_def_cfa_offset 24
 2171              		.cfi_offset 4, -24
 2172              		.cfi_offset 5, -20
 2173              		.cfi_offset 6, -16
 2174              		.cfi_offset 7, -12
 2175              		.cfi_offset 8, -8
 2176              		.cfi_offset 14, -4
 2177 0004 82B0     		sub	sp, sp, #8
 2178              	.LCFI36:
 2179              		.cfi_def_cfa_offset 32
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2180              		.loc 1 1438 0
 2181 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2182 000a E4B2     		uxtb	r4, r4
 2183 000c 202C     		cmp	r4, #32
 2184 000e 04D0     		beq	.L228
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2185              		.loc 1 1546 0
 2186 0010 0223     		movs	r3, #2
ARM GAS  /tmp/ccZ85PAS.s 			page 161


 2187              	.LVL150:
 2188              	.L216:
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2189              		.loc 1 1548 0
 2190 0012 1846     		mov	r0, r3
 2191 0014 02B0     		add	sp, sp, #8
 2192              	.LCFI37:
 2193              		.cfi_remember_state
 2194              		.cfi_def_cfa_offset 24
 2195              		@ sp needed
 2196 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2197              	.LVL151:
 2198              	.L228:
 2199              	.LCFI38:
 2200              		.cfi_restore_state
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2201              		.loc 1 1440 0
 2202 001a 002A     		cmp	r2, #0
 2203 001c 18BF     		it	ne
 2204 001e 0029     		cmpne	r1, #0
 2205 0020 05D0     		beq	.L229
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2206              		.loc 1 1446 0
 2207 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2208 0026 012C     		cmp	r4, #1
 2209 0028 06D1     		bne	.L230
 2210 002a 0223     		movs	r3, #2
 2211              	.LVL152:
 2212 002c F1E7     		b	.L216
 2213              	.LVL153:
 2214              	.L229:
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 2215              		.loc 1 1442 0
 2216 002e 4FF40073 		mov	r3, #512
 2217              	.LVL154:
 2218 0032 4364     		str	r3, [r0, #68]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2219              		.loc 1 1443 0
 2220 0034 0123     		movs	r3, #1
 2221 0036 ECE7     		b	.L216
 2222              	.LVL155:
 2223              	.L230:
 2224 0038 1F46     		mov	r7, r3
 2225 003a 1646     		mov	r6, r2
 2226 003c 0D46     		mov	r5, r1
 2227 003e 0446     		mov	r4, r0
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2228              		.loc 1 1446 0 discriminator 2
 2229 0040 0123     		movs	r3, #1
 2230              	.LVL156:
 2231 0042 80F84030 		strb	r3, [r0, #64]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2232              		.loc 1 1449 0 discriminator 2
 2233 0046 FFF7FEFF 		bl	HAL_GetTick
 2234              	.LVL157:
 2235 004a 8046     		mov	r8, r0
 2236              	.LVL158:
ARM GAS  /tmp/ccZ85PAS.s 			page 162


1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2237              		.loc 1 1451 0 discriminator 2
 2238 004c 2223     		movs	r3, #34
 2239 004e 84F84130 		strb	r3, [r4, #65]
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2240              		.loc 1 1452 0 discriminator 2
 2241 0052 2023     		movs	r3, #32
 2242 0054 84F84230 		strb	r3, [r4, #66]
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2243              		.loc 1 1453 0 discriminator 2
 2244 0058 0022     		movs	r2, #0
 2245 005a 6264     		str	r2, [r4, #68]
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2246              		.loc 1 1456 0 discriminator 2
 2247 005c 6562     		str	r5, [r4, #36]
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2248              		.loc 1 1457 0 discriminator 2
 2249 005e 6685     		strh	r6, [r4, #42]	@ movhi
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2250              		.loc 1 1458 0 discriminator 2
 2251 0060 6263     		str	r2, [r4, #52]
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2252              		.loc 1 1461 0 discriminator 2
 2253 0062 2168     		ldr	r1, [r4]
 2254 0064 4B68     		ldr	r3, [r1, #4]
 2255 0066 23F40043 		bic	r3, r3, #32768
 2256 006a 4B60     		str	r3, [r1, #4]
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2257              		.loc 1 1464 0 discriminator 2
 2258 006c 0090     		str	r0, [sp]
 2259 006e 3B46     		mov	r3, r7
 2260 0070 0821     		movs	r1, #8
 2261 0072 2046     		mov	r0, r4
 2262              	.LVL159:
 2263 0074 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2264              	.LVL160:
 2265 0078 30B1     		cbz	r0, .L218
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2266              		.loc 1 1467 0
 2267 007a 2268     		ldr	r2, [r4]
 2268 007c 5368     		ldr	r3, [r2, #4]
 2269 007e 43F40043 		orr	r3, r3, #32768
 2270 0082 5360     		str	r3, [r2, #4]
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2271              		.loc 1 1468 0
 2272 0084 0123     		movs	r3, #1
 2273 0086 C4E7     		b	.L216
 2274              	.L218:
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2275              		.loc 1 1472 0
 2276 0088 2368     		ldr	r3, [r4]
 2277 008a 0822     		movs	r2, #8
 2278 008c DA61     		str	r2, [r3, #28]
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2279              		.loc 1 1475 0
 2280 008e CDF80080 		str	r8, [sp]
 2281 0092 3B46     		mov	r3, r7
ARM GAS  /tmp/ccZ85PAS.s 			page 163


 2282 0094 0122     		movs	r2, #1
 2283 0096 4FF48031 		mov	r1, #65536
 2284 009a 2046     		mov	r0, r4
 2285 009c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2286              	.LVL161:
 2287 00a0 B0B9     		cbnz	r0, .L231
 2288              	.L219:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2289              		.loc 1 1482 0
 2290 00a2 638D     		ldrh	r3, [r4, #42]
 2291 00a4 9BB2     		uxth	r3, r3
 2292 00a6 002B     		cmp	r3, #0
 2293 00a8 30D0     		beq	.L232
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2294              		.loc 1 1485 0
 2295 00aa 4246     		mov	r2, r8
 2296 00ac 3946     		mov	r1, r7
 2297 00ae 2046     		mov	r0, r4
 2298 00b0 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2299              	.LVL162:
 2300 00b4 98B9     		cbnz	r0, .L233
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2301              		.loc 1 1506 0
 2302 00b6 636A     		ldr	r3, [r4, #36]
 2303 00b8 2268     		ldr	r2, [r4]
 2304 00ba 526A     		ldr	r2, [r2, #36]
 2305 00bc 1A70     		strb	r2, [r3]
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2306              		.loc 1 1509 0
 2307 00be 636A     		ldr	r3, [r4, #36]
 2308 00c0 0133     		adds	r3, r3, #1
 2309 00c2 6362     		str	r3, [r4, #36]
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2310              		.loc 1 1511 0
 2311 00c4 638D     		ldrh	r3, [r4, #42]
 2312 00c6 9BB2     		uxth	r3, r3
 2313 00c8 013B     		subs	r3, r3, #1
 2314 00ca 9BB2     		uxth	r3, r3
 2315 00cc 6385     		strh	r3, [r4, #42]	@ movhi
 2316 00ce E8E7     		b	.L219
 2317              	.L231:
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2318              		.loc 1 1478 0
 2319 00d0 2268     		ldr	r2, [r4]
 2320 00d2 5368     		ldr	r3, [r2, #4]
 2321 00d4 43F40043 		orr	r3, r3, #32768
 2322 00d8 5360     		str	r3, [r2, #4]
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2323              		.loc 1 1479 0
 2324 00da 0123     		movs	r3, #1
 2325 00dc 99E7     		b	.L216
 2326              	.L233:
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2327              		.loc 1 1488 0
 2328 00de 2268     		ldr	r2, [r4]
 2329 00e0 5368     		ldr	r3, [r2, #4]
 2330 00e2 43F40043 		orr	r3, r3, #32768
ARM GAS  /tmp/ccZ85PAS.s 			page 164


 2331 00e6 5360     		str	r3, [r2, #4]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 2332              		.loc 1 1491 0
 2333 00e8 2368     		ldr	r3, [r4]
 2334 00ea 9A69     		ldr	r2, [r3, #24]
 2335 00ec 12F0040F 		tst	r2, #4
 2336 00f0 3CD0     		beq	.L226
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2337              		.loc 1 1494 0
 2338 00f2 626A     		ldr	r2, [r4, #36]
 2339 00f4 5B6A     		ldr	r3, [r3, #36]
 2340 00f6 1370     		strb	r3, [r2]
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2341              		.loc 1 1497 0
 2342 00f8 636A     		ldr	r3, [r4, #36]
 2343 00fa 0133     		adds	r3, r3, #1
 2344 00fc 6362     		str	r3, [r4, #36]
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2345              		.loc 1 1499 0
 2346 00fe 638D     		ldrh	r3, [r4, #42]
 2347 0100 9BB2     		uxth	r3, r3
 2348 0102 013B     		subs	r3, r3, #1
 2349 0104 9BB2     		uxth	r3, r3
 2350 0106 6385     		strh	r3, [r4, #42]	@ movhi
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2351              		.loc 1 1502 0
 2352 0108 0123     		movs	r3, #1
 2353 010a 82E7     		b	.L216
 2354              	.L232:
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2355              		.loc 1 1515 0
 2356 010c 4246     		mov	r2, r8
 2357 010e 3946     		mov	r1, r7
 2358 0110 2046     		mov	r0, r4
 2359 0112 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2360              	.LVL163:
 2361 0116 30B1     		cbz	r0, .L222
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2362              		.loc 1 1518 0
 2363 0118 2268     		ldr	r2, [r4]
 2364 011a 5368     		ldr	r3, [r2, #4]
 2365 011c 43F40043 		orr	r3, r3, #32768
 2366 0120 5360     		str	r3, [r2, #4]
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2367              		.loc 1 1519 0
 2368 0122 0123     		movs	r3, #1
 2369 0124 75E7     		b	.L216
 2370              	.L222:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2371              		.loc 1 1523 0
 2372 0126 2368     		ldr	r3, [r4]
 2373 0128 2022     		movs	r2, #32
 2374 012a DA61     		str	r2, [r3, #28]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2375              		.loc 1 1526 0
 2376 012c CDF80080 		str	r8, [sp]
 2377 0130 3B46     		mov	r3, r7
ARM GAS  /tmp/ccZ85PAS.s 			page 165


 2378 0132 0122     		movs	r2, #1
 2379 0134 4FF40041 		mov	r1, #32768
 2380 0138 2046     		mov	r0, r4
 2381 013a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2382              	.LVL164:
 2383 013e 0346     		mov	r3, r0
 2384 0140 68B9     		cbnz	r0, .L234
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2385              		.loc 1 1534 0
 2386 0142 2168     		ldr	r1, [r4]
 2387 0144 4A68     		ldr	r2, [r1, #4]
 2388 0146 42F40042 		orr	r2, r2, #32768
 2389 014a 4A60     		str	r2, [r1, #4]
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2390              		.loc 1 1536 0
 2391 014c 2022     		movs	r2, #32
 2392 014e 84F84120 		strb	r2, [r4, #65]
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2393              		.loc 1 1537 0
 2394 0152 0022     		movs	r2, #0
 2395 0154 84F84220 		strb	r2, [r4, #66]
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2396              		.loc 1 1540 0
 2397 0158 84F84020 		strb	r2, [r4, #64]
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2398              		.loc 1 1542 0
 2399 015c 59E7     		b	.L216
 2400              	.L234:
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2401              		.loc 1 1529 0
 2402 015e 2268     		ldr	r2, [r4]
 2403 0160 5368     		ldr	r3, [r2, #4]
 2404 0162 43F40043 		orr	r3, r3, #32768
 2405 0166 5360     		str	r3, [r2, #4]
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2406              		.loc 1 1530 0
 2407 0168 0123     		movs	r3, #1
 2408 016a 52E7     		b	.L216
 2409              	.L226:
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2410              		.loc 1 1502 0
 2411 016c 0123     		movs	r3, #1
 2412 016e 50E7     		b	.L216
 2413              		.cfi_endproc
 2414              	.LFE148:
 2416              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2417              		.align	1
 2418              		.global	HAL_I2C_Master_Transmit_IT
 2419              		.syntax unified
 2420              		.thumb
 2421              		.thumb_func
 2422              		.fpu fpv5-d16
 2424              	HAL_I2C_Master_Transmit_IT:
 2425              	.LFB149:
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2426              		.loc 1 1562 0
 2427              		.cfi_startproc
ARM GAS  /tmp/ccZ85PAS.s 			page 166


 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
 2430              	.LVL165:
 2431 0000 30B5     		push	{r4, r5, lr}
 2432              	.LCFI39:
 2433              		.cfi_def_cfa_offset 12
 2434              		.cfi_offset 4, -12
 2435              		.cfi_offset 5, -8
 2436              		.cfi_offset 14, -4
 2437 0002 83B0     		sub	sp, sp, #12
 2438              	.LCFI40:
 2439              		.cfi_def_cfa_offset 24
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2440              		.loc 1 1565 0
 2441 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2442 0008 E4B2     		uxtb	r4, r4
 2443 000a 202C     		cmp	r4, #32
 2444 000c 02D0     		beq	.L243
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2445              		.loc 1 1616 0
 2446 000e 0220     		movs	r0, #2
 2447              	.LVL166:
 2448              	.L236:
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2449              		.loc 1 1618 0
 2450 0010 03B0     		add	sp, sp, #12
 2451              	.LCFI41:
 2452              		.cfi_remember_state
 2453              		.cfi_def_cfa_offset 12
 2454              		@ sp needed
 2455 0012 30BD     		pop	{r4, r5, pc}
 2456              	.LVL167:
 2457              	.L243:
 2458              	.LCFI42:
 2459              		.cfi_restore_state
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2460              		.loc 1 1567 0
 2461 0014 0468     		ldr	r4, [r0]
 2462 0016 A469     		ldr	r4, [r4, #24]
 2463 0018 14F4004F 		tst	r4, #32768
 2464 001c 01D0     		beq	.L244
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2465              		.loc 1 1569 0
 2466 001e 0220     		movs	r0, #2
 2467              	.LVL168:
 2468 0020 F6E7     		b	.L236
 2469              	.LVL169:
 2470              	.L244:
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2471              		.loc 1 1573 0
 2472 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2473 0026 012C     		cmp	r4, #1
 2474 0028 2ED0     		beq	.L241
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2475              		.loc 1 1573 0 is_stmt 0 discriminator 2
 2476 002a 0124     		movs	r4, #1
 2477 002c 80F84040 		strb	r4, [r0, #64]
ARM GAS  /tmp/ccZ85PAS.s 			page 167


1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2478              		.loc 1 1575 0 is_stmt 1 discriminator 2
 2479 0030 2124     		movs	r4, #33
 2480 0032 80F84140 		strb	r4, [r0, #65]
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2481              		.loc 1 1576 0 discriminator 2
 2482 0036 1024     		movs	r4, #16
 2483 0038 80F84240 		strb	r4, [r0, #66]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2484              		.loc 1 1577 0 discriminator 2
 2485 003c 0024     		movs	r4, #0
 2486 003e 4464     		str	r4, [r0, #68]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2487              		.loc 1 1580 0 discriminator 2
 2488 0040 4262     		str	r2, [r0, #36]
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2489              		.loc 1 1581 0 discriminator 2
 2490 0042 4385     		strh	r3, [r0, #42]	@ movhi
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2491              		.loc 1 1582 0 discriminator 2
 2492 0044 114B     		ldr	r3, .L245
 2493              	.LVL170:
 2494 0046 C362     		str	r3, [r0, #44]
 2495              	.LVL171:
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2496              		.loc 1 1583 0 discriminator 2
 2497 0048 114B     		ldr	r3, .L245+4
 2498 004a 4363     		str	r3, [r0, #52]
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2499              		.loc 1 1585 0 discriminator 2
 2500 004c 438D     		ldrh	r3, [r0, #42]
 2501 004e 9BB2     		uxth	r3, r3
 2502 0050 FF2B     		cmp	r3, #255
 2503 0052 14D9     		bls	.L237
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2504              		.loc 1 1587 0
 2505 0054 FF23     		movs	r3, #255
 2506 0056 0385     		strh	r3, [r0, #40]	@ movhi
 2507              	.LVL172:
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2508              		.loc 1 1588 0
 2509 0058 4FF08073 		mov	r3, #16777216
 2510              	.LVL173:
 2511              	.L238:
 2512 005c 0446     		mov	r4, r0
 2513              	.LVL174:
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2514              		.loc 1 1598 0
 2515 005e 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2516              	.LVL175:
 2517 0062 0C48     		ldr	r0, .L245+8
 2518              	.LVL176:
 2519 0064 0090     		str	r0, [sp]
 2520              	.LVL177:
 2521 0066 2046     		mov	r0, r4
 2522 0068 FFF7FEFF 		bl	I2C_TransferConfig
 2523              	.LVL178:
ARM GAS  /tmp/ccZ85PAS.s 			page 168


1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2524              		.loc 1 1601 0
 2525 006c 0025     		movs	r5, #0
 2526 006e 84F84050 		strb	r5, [r4, #64]
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2527              		.loc 1 1610 0
 2528 0072 0121     		movs	r1, #1
 2529 0074 2046     		mov	r0, r4
 2530 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 2531              	.LVL179:
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2532              		.loc 1 1612 0
 2533 007a 2846     		mov	r0, r5
 2534 007c C8E7     		b	.L236
 2535              	.LVL180:
 2536              	.L237:
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2537              		.loc 1 1592 0
 2538 007e 438D     		ldrh	r3, [r0, #42]
 2539 0080 0385     		strh	r3, [r0, #40]	@ movhi
 2540              	.LVL181:
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2541              		.loc 1 1593 0
 2542 0082 4FF00073 		mov	r3, #33554432
 2543 0086 E9E7     		b	.L238
 2544              	.LVL182:
 2545              	.L241:
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2546              		.loc 1 1573 0
 2547 0088 0220     		movs	r0, #2
 2548              	.LVL183:
 2549 008a C1E7     		b	.L236
 2550              	.L246:
 2551              		.align	2
 2552              	.L245:
 2553 008c 0000FFFF 		.word	-65536
 2554 0090 00000000 		.word	I2C_Master_ISR_IT
 2555 0094 00200080 		.word	-2147475456
 2556              		.cfi_endproc
 2557              	.LFE149:
 2559              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2560              		.align	1
 2561              		.global	HAL_I2C_Master_Receive_IT
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2565              		.fpu fpv5-d16
 2567              	HAL_I2C_Master_Receive_IT:
 2568              	.LFB150:
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2569              		.loc 1 1631 0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              	.LVL184:
 2574 0000 30B5     		push	{r4, r5, lr}
 2575              	.LCFI43:
ARM GAS  /tmp/ccZ85PAS.s 			page 169


 2576              		.cfi_def_cfa_offset 12
 2577              		.cfi_offset 4, -12
 2578              		.cfi_offset 5, -8
 2579              		.cfi_offset 14, -4
 2580 0002 83B0     		sub	sp, sp, #12
 2581              	.LCFI44:
 2582              		.cfi_def_cfa_offset 24
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2583              		.loc 1 1634 0
 2584 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2585 0008 E4B2     		uxtb	r4, r4
 2586 000a 202C     		cmp	r4, #32
 2587 000c 02D0     		beq	.L255
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2588              		.loc 1 1685 0
 2589 000e 0220     		movs	r0, #2
 2590              	.LVL185:
 2591              	.L248:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2592              		.loc 1 1687 0
 2593 0010 03B0     		add	sp, sp, #12
 2594              	.LCFI45:
 2595              		.cfi_remember_state
 2596              		.cfi_def_cfa_offset 12
 2597              		@ sp needed
 2598 0012 30BD     		pop	{r4, r5, pc}
 2599              	.LVL186:
 2600              	.L255:
 2601              	.LCFI46:
 2602              		.cfi_restore_state
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2603              		.loc 1 1636 0
 2604 0014 0468     		ldr	r4, [r0]
 2605 0016 A469     		ldr	r4, [r4, #24]
 2606 0018 14F4004F 		tst	r4, #32768
 2607 001c 01D0     		beq	.L256
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2608              		.loc 1 1638 0
 2609 001e 0220     		movs	r0, #2
 2610              	.LVL187:
 2611 0020 F6E7     		b	.L248
 2612              	.LVL188:
 2613              	.L256:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2614              		.loc 1 1642 0
 2615 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2616 0026 012C     		cmp	r4, #1
 2617 0028 2ED0     		beq	.L253
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2618              		.loc 1 1642 0 is_stmt 0 discriminator 2
 2619 002a 0124     		movs	r4, #1
 2620 002c 80F84040 		strb	r4, [r0, #64]
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2621              		.loc 1 1644 0 is_stmt 1 discriminator 2
 2622 0030 2224     		movs	r4, #34
 2623 0032 80F84140 		strb	r4, [r0, #65]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
ARM GAS  /tmp/ccZ85PAS.s 			page 170


 2624              		.loc 1 1645 0 discriminator 2
 2625 0036 1024     		movs	r4, #16
 2626 0038 80F84240 		strb	r4, [r0, #66]
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2627              		.loc 1 1646 0 discriminator 2
 2628 003c 0024     		movs	r4, #0
 2629 003e 4464     		str	r4, [r0, #68]
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2630              		.loc 1 1649 0 discriminator 2
 2631 0040 4262     		str	r2, [r0, #36]
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2632              		.loc 1 1650 0 discriminator 2
 2633 0042 4385     		strh	r3, [r0, #42]	@ movhi
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2634              		.loc 1 1651 0 discriminator 2
 2635 0044 114B     		ldr	r3, .L257
 2636              	.LVL189:
 2637 0046 C362     		str	r3, [r0, #44]
 2638              	.LVL190:
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2639              		.loc 1 1652 0 discriminator 2
 2640 0048 114B     		ldr	r3, .L257+4
 2641 004a 4363     		str	r3, [r0, #52]
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2642              		.loc 1 1654 0 discriminator 2
 2643 004c 438D     		ldrh	r3, [r0, #42]
 2644 004e 9BB2     		uxth	r3, r3
 2645 0050 FF2B     		cmp	r3, #255
 2646 0052 14D9     		bls	.L249
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2647              		.loc 1 1656 0
 2648 0054 FF23     		movs	r3, #255
 2649 0056 0385     		strh	r3, [r0, #40]	@ movhi
 2650              	.LVL191:
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2651              		.loc 1 1657 0
 2652 0058 4FF08073 		mov	r3, #16777216
 2653              	.LVL192:
 2654              	.L250:
 2655 005c 0446     		mov	r4, r0
 2656              	.LVL193:
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2657              		.loc 1 1667 0
 2658 005e 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2659              	.LVL194:
 2660 0062 0C48     		ldr	r0, .L257+8
 2661              	.LVL195:
 2662 0064 0090     		str	r0, [sp]
 2663              	.LVL196:
 2664 0066 2046     		mov	r0, r4
 2665 0068 FFF7FEFF 		bl	I2C_TransferConfig
 2666              	.LVL197:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2667              		.loc 1 1670 0
 2668 006c 0025     		movs	r5, #0
 2669 006e 84F84050 		strb	r5, [r4, #64]
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 171


 2670              		.loc 1 1679 0
 2671 0072 0221     		movs	r1, #2
 2672 0074 2046     		mov	r0, r4
 2673 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 2674              	.LVL198:
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2675              		.loc 1 1681 0
 2676 007a 2846     		mov	r0, r5
 2677 007c C8E7     		b	.L248
 2678              	.LVL199:
 2679              	.L249:
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2680              		.loc 1 1661 0
 2681 007e 438D     		ldrh	r3, [r0, #42]
 2682 0080 0385     		strh	r3, [r0, #40]	@ movhi
 2683              	.LVL200:
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2684              		.loc 1 1662 0
 2685 0082 4FF00073 		mov	r3, #33554432
 2686 0086 E9E7     		b	.L250
 2687              	.LVL201:
 2688              	.L253:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2689              		.loc 1 1642 0
 2690 0088 0220     		movs	r0, #2
 2691              	.LVL202:
 2692 008a C1E7     		b	.L248
 2693              	.L258:
 2694              		.align	2
 2695              	.L257:
 2696 008c 0000FFFF 		.word	-65536
 2697 0090 00000000 		.word	I2C_Master_ISR_IT
 2698 0094 00240080 		.word	-2147474432
 2699              		.cfi_endproc
 2700              	.LFE150:
 2702              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2703              		.align	1
 2704              		.global	HAL_I2C_Slave_Transmit_IT
 2705              		.syntax unified
 2706              		.thumb
 2707              		.thumb_func
 2708              		.fpu fpv5-d16
 2710              	HAL_I2C_Slave_Transmit_IT:
 2711              	.LFB151:
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2712              		.loc 1 1698 0
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 0
 2715              		@ frame_needed = 0, uses_anonymous_args = 0
 2716              	.LVL203:
 2717 0000 38B5     		push	{r3, r4, r5, lr}
 2718              	.LCFI47:
 2719              		.cfi_def_cfa_offset 16
 2720              		.cfi_offset 3, -16
 2721              		.cfi_offset 4, -12
 2722              		.cfi_offset 5, -8
 2723              		.cfi_offset 14, -4
ARM GAS  /tmp/ccZ85PAS.s 			page 172


1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2724              		.loc 1 1699 0
 2725 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2726 0006 DBB2     		uxtb	r3, r3
 2727 0008 202B     		cmp	r3, #32
 2728 000a 01D0     		beq	.L264
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2729              		.loc 1 1734 0
 2730 000c 0220     		movs	r0, #2
 2731              	.LVL204:
 2732 000e 38BD     		pop	{r3, r4, r5, pc}
 2733              	.LVL205:
 2734              	.L264:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2735              		.loc 1 1702 0
 2736 0010 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2737 0014 012B     		cmp	r3, #1
 2738 0016 01D1     		bne	.L265
 2739 0018 0220     		movs	r0, #2
 2740              	.LVL206:
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2741              		.loc 1 1736 0
 2742 001a 38BD     		pop	{r3, r4, r5, pc}
 2743              	.LVL207:
 2744              	.L265:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2745              		.loc 1 1702 0 discriminator 2
 2746 001c 0123     		movs	r3, #1
 2747 001e 80F84030 		strb	r3, [r0, #64]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2748              		.loc 1 1704 0 discriminator 2
 2749 0022 2123     		movs	r3, #33
 2750 0024 80F84130 		strb	r3, [r0, #65]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2751              		.loc 1 1705 0 discriminator 2
 2752 0028 2023     		movs	r3, #32
 2753 002a 80F84230 		strb	r3, [r0, #66]
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2754              		.loc 1 1706 0 discriminator 2
 2755 002e 0024     		movs	r4, #0
 2756 0030 4464     		str	r4, [r0, #68]
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2757              		.loc 1 1709 0 discriminator 2
 2758 0032 0568     		ldr	r5, [r0]
 2759 0034 6B68     		ldr	r3, [r5, #4]
 2760 0036 23F40043 		bic	r3, r3, #32768
 2761 003a 6B60     		str	r3, [r5, #4]
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2762              		.loc 1 1712 0 discriminator 2
 2763 003c 4162     		str	r1, [r0, #36]
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2764              		.loc 1 1713 0 discriminator 2
 2765 003e 4285     		strh	r2, [r0, #42]	@ movhi
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2766              		.loc 1 1714 0 discriminator 2
 2767 0040 438D     		ldrh	r3, [r0, #42]
 2768 0042 0385     		strh	r3, [r0, #40]	@ movhi
ARM GAS  /tmp/ccZ85PAS.s 			page 173


1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2769              		.loc 1 1715 0 discriminator 2
 2770 0044 054B     		ldr	r3, .L266
 2771 0046 C362     		str	r3, [r0, #44]
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2772              		.loc 1 1716 0 discriminator 2
 2773 0048 054B     		ldr	r3, .L266+4
 2774 004a 4363     		str	r3, [r0, #52]
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2775              		.loc 1 1719 0 discriminator 2
 2776 004c 80F84040 		strb	r4, [r0, #64]
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2777              		.loc 1 1728 0 discriminator 2
 2778 0050 48F20101 		movw	r1, #32769
 2779              	.LVL208:
 2780 0054 FFF7FEFF 		bl	I2C_Enable_IRQ
 2781              	.LVL209:
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2782              		.loc 1 1730 0 discriminator 2
 2783 0058 2046     		mov	r0, r4
 2784 005a 38BD     		pop	{r3, r4, r5, pc}
 2785              	.L267:
 2786              		.align	2
 2787              	.L266:
 2788 005c 0000FFFF 		.word	-65536
 2789 0060 00000000 		.word	I2C_Slave_ISR_IT
 2790              		.cfi_endproc
 2791              	.LFE151:
 2793              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2794              		.align	1
 2795              		.global	HAL_I2C_Slave_Receive_IT
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2799              		.fpu fpv5-d16
 2801              	HAL_I2C_Slave_Receive_IT:
 2802              	.LFB152:
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2803              		.loc 1 1747 0
 2804              		.cfi_startproc
 2805              		@ args = 0, pretend = 0, frame = 0
 2806              		@ frame_needed = 0, uses_anonymous_args = 0
 2807              	.LVL210:
 2808 0000 38B5     		push	{r3, r4, r5, lr}
 2809              	.LCFI48:
 2810              		.cfi_def_cfa_offset 16
 2811              		.cfi_offset 3, -16
 2812              		.cfi_offset 4, -12
 2813              		.cfi_offset 5, -8
 2814              		.cfi_offset 14, -4
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2815              		.loc 1 1748 0
 2816 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2817 0006 DBB2     		uxtb	r3, r3
 2818 0008 202B     		cmp	r3, #32
 2819 000a 01D0     		beq	.L273
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccZ85PAS.s 			page 174


 2820              		.loc 1 1783 0
 2821 000c 0220     		movs	r0, #2
 2822              	.LVL211:
 2823 000e 38BD     		pop	{r3, r4, r5, pc}
 2824              	.LVL212:
 2825              	.L273:
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2826              		.loc 1 1751 0
 2827 0010 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2828 0014 012B     		cmp	r3, #1
 2829 0016 01D1     		bne	.L274
 2830 0018 0220     		movs	r0, #2
 2831              	.LVL213:
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2832              		.loc 1 1785 0
 2833 001a 38BD     		pop	{r3, r4, r5, pc}
 2834              	.LVL214:
 2835              	.L274:
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2836              		.loc 1 1751 0 discriminator 2
 2837 001c 0123     		movs	r3, #1
 2838 001e 80F84030 		strb	r3, [r0, #64]
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2839              		.loc 1 1753 0 discriminator 2
 2840 0022 2223     		movs	r3, #34
 2841 0024 80F84130 		strb	r3, [r0, #65]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2842              		.loc 1 1754 0 discriminator 2
 2843 0028 2023     		movs	r3, #32
 2844 002a 80F84230 		strb	r3, [r0, #66]
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2845              		.loc 1 1755 0 discriminator 2
 2846 002e 0024     		movs	r4, #0
 2847 0030 4464     		str	r4, [r0, #68]
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2848              		.loc 1 1758 0 discriminator 2
 2849 0032 0568     		ldr	r5, [r0]
 2850 0034 6B68     		ldr	r3, [r5, #4]
 2851 0036 23F40043 		bic	r3, r3, #32768
 2852 003a 6B60     		str	r3, [r5, #4]
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2853              		.loc 1 1761 0 discriminator 2
 2854 003c 4162     		str	r1, [r0, #36]
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2855              		.loc 1 1762 0 discriminator 2
 2856 003e 4285     		strh	r2, [r0, #42]	@ movhi
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2857              		.loc 1 1763 0 discriminator 2
 2858 0040 438D     		ldrh	r3, [r0, #42]
 2859 0042 0385     		strh	r3, [r0, #40]	@ movhi
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2860              		.loc 1 1764 0 discriminator 2
 2861 0044 054B     		ldr	r3, .L275
 2862 0046 C362     		str	r3, [r0, #44]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2863              		.loc 1 1765 0 discriminator 2
 2864 0048 054B     		ldr	r3, .L275+4
ARM GAS  /tmp/ccZ85PAS.s 			page 175


 2865 004a 4363     		str	r3, [r0, #52]
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2866              		.loc 1 1768 0 discriminator 2
 2867 004c 80F84040 		strb	r4, [r0, #64]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2868              		.loc 1 1777 0 discriminator 2
 2869 0050 48F20201 		movw	r1, #32770
 2870              	.LVL215:
 2871 0054 FFF7FEFF 		bl	I2C_Enable_IRQ
 2872              	.LVL216:
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2873              		.loc 1 1779 0 discriminator 2
 2874 0058 2046     		mov	r0, r4
 2875 005a 38BD     		pop	{r3, r4, r5, pc}
 2876              	.L276:
 2877              		.align	2
 2878              	.L275:
 2879 005c 0000FFFF 		.word	-65536
 2880 0060 00000000 		.word	I2C_Slave_ISR_IT
 2881              		.cfi_endproc
 2882              	.LFE152:
 2884              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 2885              		.align	1
 2886              		.global	HAL_I2C_Master_Transmit_DMA
 2887              		.syntax unified
 2888              		.thumb
 2889              		.thumb_func
 2890              		.fpu fpv5-d16
 2892              	HAL_I2C_Master_Transmit_DMA:
 2893              	.LFB153:
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2894              		.loc 1 1799 0
 2895              		.cfi_startproc
 2896              		@ args = 0, pretend = 0, frame = 0
 2897              		@ frame_needed = 0, uses_anonymous_args = 0
 2898              	.LVL217:
 2899 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2900              	.LCFI49:
 2901              		.cfi_def_cfa_offset 20
 2902              		.cfi_offset 4, -20
 2903              		.cfi_offset 5, -16
 2904              		.cfi_offset 6, -12
 2905              		.cfi_offset 7, -8
 2906              		.cfi_offset 14, -4
 2907 0002 83B0     		sub	sp, sp, #12
 2908              	.LCFI50:
 2909              		.cfi_def_cfa_offset 32
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2910              		.loc 1 1803 0
 2911 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2912 0008 E4B2     		uxtb	r4, r4
 2913 000a 202C     		cmp	r4, #32
 2914 000c 03D0     		beq	.L290
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2915              		.loc 1 1927 0
 2916 000e 0224     		movs	r4, #2
 2917              	.LVL218:
ARM GAS  /tmp/ccZ85PAS.s 			page 176


 2918              	.L278:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2919              		.loc 1 1929 0
 2920 0010 2046     		mov	r0, r4
 2921 0012 03B0     		add	sp, sp, #12
 2922              	.LCFI51:
 2923              		.cfi_remember_state
 2924              		.cfi_def_cfa_offset 20
 2925              		@ sp needed
 2926 0014 F0BD     		pop	{r4, r5, r6, r7, pc}
 2927              	.LVL219:
 2928              	.L290:
 2929              	.LCFI52:
 2930              		.cfi_restore_state
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2931              		.loc 1 1805 0
 2932 0016 0468     		ldr	r4, [r0]
 2933 0018 A469     		ldr	r4, [r4, #24]
 2934 001a 14F4004F 		tst	r4, #32768
 2935 001e 01D0     		beq	.L291
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2936              		.loc 1 1807 0
 2937 0020 0224     		movs	r4, #2
 2938 0022 F5E7     		b	.L278
 2939              	.L291:
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2940              		.loc 1 1811 0
 2941 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2942 0028 012C     		cmp	r4, #1
 2943 002a 00F08280 		beq	.L287
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2944              		.loc 1 1811 0 is_stmt 0 discriminator 2
 2945 002e 0124     		movs	r4, #1
 2946 0030 80F84040 		strb	r4, [r0, #64]
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2947              		.loc 1 1813 0 is_stmt 1 discriminator 2
 2948 0034 2124     		movs	r4, #33
 2949 0036 80F84140 		strb	r4, [r0, #65]
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2950              		.loc 1 1814 0 discriminator 2
 2951 003a 1024     		movs	r4, #16
 2952 003c 80F84240 		strb	r4, [r0, #66]
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2953              		.loc 1 1815 0 discriminator 2
 2954 0040 0024     		movs	r4, #0
 2955 0042 4464     		str	r4, [r0, #68]
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2956              		.loc 1 1818 0 discriminator 2
 2957 0044 4262     		str	r2, [r0, #36]
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2958              		.loc 1 1819 0 discriminator 2
 2959 0046 4385     		strh	r3, [r0, #42]	@ movhi
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2960              		.loc 1 1820 0 discriminator 2
 2961 0048 3B4B     		ldr	r3, .L293
 2962              	.LVL220:
 2963 004a C362     		str	r3, [r0, #44]
ARM GAS  /tmp/ccZ85PAS.s 			page 177


 2964              	.LVL221:
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2965              		.loc 1 1821 0 discriminator 2
 2966 004c 3B4B     		ldr	r3, .L293+4
 2967 004e 4363     		str	r3, [r0, #52]
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2968              		.loc 1 1823 0 discriminator 2
 2969 0050 438D     		ldrh	r3, [r0, #42]
 2970 0052 9BB2     		uxth	r3, r3
 2971 0054 FF2B     		cmp	r3, #255
 2972 0056 2CD9     		bls	.L279
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2973              		.loc 1 1825 0
 2974 0058 FF23     		movs	r3, #255
 2975 005a 0385     		strh	r3, [r0, #40]	@ movhi
 2976              	.LVL222:
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2977              		.loc 1 1826 0
 2978 005c 4FF08076 		mov	r6, #16777216
 2979              	.LVL223:
 2980              	.L280:
 2981 0060 1446     		mov	r4, r2
 2982 0062 0F46     		mov	r7, r1
 2983 0064 0546     		mov	r5, r0
 2984              	.LVL224:
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2985              		.loc 1 1834 0
 2986 0066 028D     		ldrh	r2, [r0, #40]
 2987              	.LVL225:
 2988 0068 002A     		cmp	r2, #0
 2989 006a 51D0     		beq	.L281
 2990              	.LVL226:
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2991              		.loc 1 1836 0
 2992 006c 836B     		ldr	r3, [r0, #56]
 2993 006e 2BB3     		cbz	r3, .L282
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2994              		.loc 1 1839 0
 2995 0070 334A     		ldr	r2, .L293+8
 2996 0072 DA63     		str	r2, [r3, #60]
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2997              		.loc 1 1842 0
 2998 0074 836B     		ldr	r3, [r0, #56]
 2999 0076 334A     		ldr	r2, .L293+12
 3000 0078 DA64     		str	r2, [r3, #76]
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 3001              		.loc 1 1845 0
 3002 007a 826B     		ldr	r2, [r0, #56]
 3003 007c 0023     		movs	r3, #0
 3004 007e 1364     		str	r3, [r2, #64]
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3005              		.loc 1 1846 0
 3006 0080 826B     		ldr	r2, [r0, #56]
 3007 0082 1365     		str	r3, [r2, #80]
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3008              		.loc 1 1849 0
 3009 0084 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccZ85PAS.s 			page 178


 3010 0086 038D     		ldrh	r3, [r0, #40]
 3011 0088 2832     		adds	r2, r2, #40
 3012 008a 2146     		mov	r1, r4
 3013              	.LVL227:
 3014 008c 806B     		ldr	r0, [r0, #56]
 3015              	.LVL228:
 3016 008e FFF7FEFF 		bl	HAL_DMA_Start_IT
 3017              	.LVL229:
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3018              		.loc 1 1866 0
 3019 0092 0446     		mov	r4, r0
 3020              	.LVL230:
 3021 0094 00B3     		cbz	r0, .L292
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3022              		.loc 1 1890 0
 3023 0096 2023     		movs	r3, #32
 3024 0098 85F84130 		strb	r3, [r5, #65]
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3025              		.loc 1 1891 0
 3026 009c 0022     		movs	r2, #0
 3027 009e 85F84220 		strb	r2, [r5, #66]
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3028              		.loc 1 1894 0
 3029 00a2 6B6C     		ldr	r3, [r5, #68]
 3030 00a4 43F01003 		orr	r3, r3, #16
 3031 00a8 6B64     		str	r3, [r5, #68]
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3032              		.loc 1 1897 0
 3033 00aa 85F84020 		strb	r2, [r5, #64]
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3034              		.loc 1 1899 0
 3035 00ae 0124     		movs	r4, #1
 3036 00b0 AEE7     		b	.L278
 3037              	.LVL231:
 3038              	.L279:
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3039              		.loc 1 1830 0
 3040 00b2 438D     		ldrh	r3, [r0, #42]
 3041 00b4 0385     		strh	r3, [r0, #40]	@ movhi
 3042              	.LVL232:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3043              		.loc 1 1831 0
 3044 00b6 4FF00076 		mov	r6, #33554432
 3045 00ba D1E7     		b	.L280
 3046              	.LVL233:
 3047              	.L282:
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3048              		.loc 1 1854 0
 3049 00bc 2023     		movs	r3, #32
 3050 00be 80F84130 		strb	r3, [r0, #65]
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3051              		.loc 1 1855 0
 3052 00c2 0022     		movs	r2, #0
 3053 00c4 80F84220 		strb	r2, [r0, #66]
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3054              		.loc 1 1858 0
 3055 00c8 436C     		ldr	r3, [r0, #68]
ARM GAS  /tmp/ccZ85PAS.s 			page 179


 3056 00ca 43F08003 		orr	r3, r3, #128
 3057 00ce 4364     		str	r3, [r0, #68]
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3058              		.loc 1 1861 0
 3059 00d0 80F84020 		strb	r2, [r0, #64]
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3060              		.loc 1 1863 0
 3061 00d4 0124     		movs	r4, #1
 3062              	.LVL234:
 3063 00d6 9BE7     		b	.L278
 3064              	.LVL235:
 3065              	.L292:
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3066              		.loc 1 1870 0
 3067 00d8 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 3068 00dc 1A4B     		ldr	r3, .L293+16
 3069 00de 0093     		str	r3, [sp]
 3070 00e0 3346     		mov	r3, r6
 3071 00e2 3946     		mov	r1, r7
 3072 00e4 2846     		mov	r0, r5
 3073              	.LVL236:
 3074 00e6 FFF7FEFF 		bl	I2C_TransferConfig
 3075              	.LVL237:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3076              		.loc 1 1873 0
 3077 00ea 6B8D     		ldrh	r3, [r5, #42]
 3078 00ec 9BB2     		uxth	r3, r3
 3079 00ee 2A8D     		ldrh	r2, [r5, #40]
 3080 00f0 9B1A     		subs	r3, r3, r2
 3081 00f2 9BB2     		uxth	r3, r3
 3082 00f4 6B85     		strh	r3, [r5, #42]	@ movhi
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3083              		.loc 1 1876 0
 3084 00f6 0023     		movs	r3, #0
 3085 00f8 85F84030 		strb	r3, [r5, #64]
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3086              		.loc 1 1882 0
 3087 00fc 1021     		movs	r1, #16
 3088 00fe 2846     		mov	r0, r5
 3089 0100 FFF7FEFF 		bl	I2C_Enable_IRQ
 3090              	.LVL238:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3091              		.loc 1 1885 0
 3092 0104 2A68     		ldr	r2, [r5]
 3093 0106 1368     		ldr	r3, [r2]
 3094 0108 43F48043 		orr	r3, r3, #16384
 3095 010c 1360     		str	r3, [r2]
 3096 010e 7FE7     		b	.L278
 3097              	.LVL239:
 3098              	.L281:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3099              		.loc 1 1905 0
 3100 0110 0E4B     		ldr	r3, .L293+20
 3101 0112 4363     		str	r3, [r0, #52]
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3102              		.loc 1 1909 0
 3103 0114 0C4B     		ldr	r3, .L293+16
ARM GAS  /tmp/ccZ85PAS.s 			page 180


 3104 0116 0093     		str	r3, [sp]
 3105 0118 4FF00073 		mov	r3, #33554432
 3106 011c D2B2     		uxtb	r2, r2
 3107 011e FFF7FEFF 		bl	I2C_TransferConfig
 3108              	.LVL240:
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3109              		.loc 1 1912 0
 3110 0122 0024     		movs	r4, #0
 3111              	.LVL241:
 3112 0124 85F84040 		strb	r4, [r5, #64]
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3113              		.loc 1 1920 0
 3114 0128 0121     		movs	r1, #1
 3115 012a 2846     		mov	r0, r5
 3116 012c FFF7FEFF 		bl	I2C_Enable_IRQ
 3117              	.LVL242:
 3118 0130 6EE7     		b	.L278
 3119              	.LVL243:
 3120              	.L287:
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3121              		.loc 1 1811 0
 3122 0132 0224     		movs	r4, #2
 3123 0134 6CE7     		b	.L278
 3124              	.L294:
 3125 0136 00BF     		.align	2
 3126              	.L293:
 3127 0138 0000FFFF 		.word	-65536
 3128 013c 00000000 		.word	I2C_Master_ISR_DMA
 3129 0140 00000000 		.word	I2C_DMAMasterTransmitCplt
 3130 0144 00000000 		.word	I2C_DMAError
 3131 0148 00200080 		.word	-2147475456
 3132 014c 00000000 		.word	I2C_Master_ISR_IT
 3133              		.cfi_endproc
 3134              	.LFE153:
 3136              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3137              		.align	1
 3138              		.global	HAL_I2C_Master_Receive_DMA
 3139              		.syntax unified
 3140              		.thumb
 3141              		.thumb_func
 3142              		.fpu fpv5-d16
 3144              	HAL_I2C_Master_Receive_DMA:
 3145              	.LFB154:
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 3146              		.loc 1 1943 0
 3147              		.cfi_startproc
 3148              		@ args = 0, pretend = 0, frame = 0
 3149              		@ frame_needed = 0, uses_anonymous_args = 0
 3150              	.LVL244:
 3151 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3152              	.LCFI53:
 3153              		.cfi_def_cfa_offset 20
 3154              		.cfi_offset 4, -20
 3155              		.cfi_offset 5, -16
 3156              		.cfi_offset 6, -12
 3157              		.cfi_offset 7, -8
 3158              		.cfi_offset 14, -4
ARM GAS  /tmp/ccZ85PAS.s 			page 181


 3159 0002 83B0     		sub	sp, sp, #12
 3160              	.LCFI54:
 3161              		.cfi_def_cfa_offset 32
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3162              		.loc 1 1947 0
 3163 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3164 0008 E4B2     		uxtb	r4, r4
 3165 000a 202C     		cmp	r4, #32
 3166 000c 03D0     		beq	.L308
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3167              		.loc 1 2071 0
 3168 000e 0224     		movs	r4, #2
 3169              	.LVL245:
 3170              	.L296:
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3171              		.loc 1 2073 0
 3172 0010 2046     		mov	r0, r4
 3173 0012 03B0     		add	sp, sp, #12
 3174              	.LCFI55:
 3175              		.cfi_remember_state
 3176              		.cfi_def_cfa_offset 20
 3177              		@ sp needed
 3178 0014 F0BD     		pop	{r4, r5, r6, r7, pc}
 3179              	.LVL246:
 3180              	.L308:
 3181              	.LCFI56:
 3182              		.cfi_restore_state
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3183              		.loc 1 1949 0
 3184 0016 0468     		ldr	r4, [r0]
 3185 0018 A469     		ldr	r4, [r4, #24]
 3186 001a 14F4004F 		tst	r4, #32768
 3187 001e 01D0     		beq	.L309
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3188              		.loc 1 1951 0
 3189 0020 0224     		movs	r4, #2
 3190 0022 F5E7     		b	.L296
 3191              	.L309:
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3192              		.loc 1 1955 0
 3193 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3194 0028 012C     		cmp	r4, #1
 3195 002a 00F08180 		beq	.L305
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3196              		.loc 1 1955 0 is_stmt 0 discriminator 2
 3197 002e 0124     		movs	r4, #1
 3198 0030 80F84040 		strb	r4, [r0, #64]
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3199              		.loc 1 1957 0 is_stmt 1 discriminator 2
 3200 0034 2224     		movs	r4, #34
 3201 0036 80F84140 		strb	r4, [r0, #65]
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3202              		.loc 1 1958 0 discriminator 2
 3203 003a 1024     		movs	r4, #16
 3204 003c 80F84240 		strb	r4, [r0, #66]
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3205              		.loc 1 1959 0 discriminator 2
ARM GAS  /tmp/ccZ85PAS.s 			page 182


 3206 0040 0024     		movs	r4, #0
 3207 0042 4464     		str	r4, [r0, #68]
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3208              		.loc 1 1962 0 discriminator 2
 3209 0044 4262     		str	r2, [r0, #36]
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3210              		.loc 1 1963 0 discriminator 2
 3211 0046 4385     		strh	r3, [r0, #42]	@ movhi
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3212              		.loc 1 1964 0 discriminator 2
 3213 0048 3A4B     		ldr	r3, .L311
 3214              	.LVL247:
 3215 004a C362     		str	r3, [r0, #44]
 3216              	.LVL248:
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3217              		.loc 1 1965 0 discriminator 2
 3218 004c 3A4B     		ldr	r3, .L311+4
 3219 004e 4363     		str	r3, [r0, #52]
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3220              		.loc 1 1967 0 discriminator 2
 3221 0050 438D     		ldrh	r3, [r0, #42]
 3222 0052 9BB2     		uxth	r3, r3
 3223 0054 FF2B     		cmp	r3, #255
 3224 0056 2AD9     		bls	.L297
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3225              		.loc 1 1969 0
 3226 0058 FF23     		movs	r3, #255
 3227 005a 0385     		strh	r3, [r0, #40]	@ movhi
 3228              	.LVL249:
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3229              		.loc 1 1970 0
 3230 005c 4FF08076 		mov	r6, #16777216
 3231              	.LVL250:
 3232              	.L298:
 3233 0060 0F46     		mov	r7, r1
 3234 0062 0546     		mov	r5, r0
 3235              	.LVL251:
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3236              		.loc 1 1978 0
 3237 0064 018D     		ldrh	r1, [r0, #40]
 3238              	.LVL252:
 3239 0066 0029     		cmp	r1, #0
 3240 0068 50D0     		beq	.L299
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3241              		.loc 1 1980 0
 3242 006a C36B     		ldr	r3, [r0, #60]
 3243 006c 23B3     		cbz	r3, .L300
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3244              		.loc 1 1983 0
 3245 006e 3349     		ldr	r1, .L311+8
 3246 0070 D963     		str	r1, [r3, #60]
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3247              		.loc 1 1986 0
 3248 0072 C36B     		ldr	r3, [r0, #60]
 3249 0074 3249     		ldr	r1, .L311+12
 3250 0076 D964     		str	r1, [r3, #76]
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccZ85PAS.s 			page 183


 3251              		.loc 1 1989 0
 3252 0078 C16B     		ldr	r1, [r0, #60]
 3253 007a 0023     		movs	r3, #0
 3254 007c 0B64     		str	r3, [r1, #64]
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3255              		.loc 1 1990 0
 3256 007e C16B     		ldr	r1, [r0, #60]
 3257 0080 0B65     		str	r3, [r1, #80]
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3258              		.loc 1 1993 0
 3259 0082 0168     		ldr	r1, [r0]
 3260 0084 038D     		ldrh	r3, [r0, #40]
 3261 0086 2431     		adds	r1, r1, #36
 3262 0088 C06B     		ldr	r0, [r0, #60]
 3263              	.LVL253:
 3264 008a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3265              	.LVL254:
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3266              		.loc 1 2010 0
 3267 008e 0446     		mov	r4, r0
 3268 0090 00B3     		cbz	r0, .L310
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3269              		.loc 1 2034 0
 3270 0092 2023     		movs	r3, #32
 3271 0094 85F84130 		strb	r3, [r5, #65]
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3272              		.loc 1 2035 0
 3273 0098 0022     		movs	r2, #0
 3274 009a 85F84220 		strb	r2, [r5, #66]
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3275              		.loc 1 2038 0
 3276 009e 6B6C     		ldr	r3, [r5, #68]
 3277 00a0 43F01003 		orr	r3, r3, #16
 3278 00a4 6B64     		str	r3, [r5, #68]
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3279              		.loc 1 2041 0
 3280 00a6 85F84020 		strb	r2, [r5, #64]
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3281              		.loc 1 2043 0
 3282 00aa 0124     		movs	r4, #1
 3283 00ac B0E7     		b	.L296
 3284              	.LVL255:
 3285              	.L297:
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3286              		.loc 1 1974 0
 3287 00ae 438D     		ldrh	r3, [r0, #42]
 3288 00b0 0385     		strh	r3, [r0, #40]	@ movhi
 3289              	.LVL256:
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3290              		.loc 1 1975 0
 3291 00b2 4FF00076 		mov	r6, #33554432
 3292 00b6 D3E7     		b	.L298
 3293              	.LVL257:
 3294              	.L300:
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3295              		.loc 1 1998 0
 3296 00b8 2023     		movs	r3, #32
ARM GAS  /tmp/ccZ85PAS.s 			page 184


 3297 00ba 80F84130 		strb	r3, [r0, #65]
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3298              		.loc 1 1999 0
 3299 00be 0022     		movs	r2, #0
 3300              	.LVL258:
 3301 00c0 80F84220 		strb	r2, [r0, #66]
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3302              		.loc 1 2002 0
 3303 00c4 436C     		ldr	r3, [r0, #68]
 3304 00c6 43F08003 		orr	r3, r3, #128
 3305 00ca 4364     		str	r3, [r0, #68]
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3306              		.loc 1 2005 0
 3307 00cc 80F84020 		strb	r2, [r0, #64]
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3308              		.loc 1 2007 0
 3309 00d0 0124     		movs	r4, #1
 3310 00d2 9DE7     		b	.L296
 3311              	.LVL259:
 3312              	.L310:
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3313              		.loc 1 2014 0
 3314 00d4 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 3315 00d8 1A4B     		ldr	r3, .L311+16
 3316 00da 0093     		str	r3, [sp]
 3317 00dc 3346     		mov	r3, r6
 3318 00de 3946     		mov	r1, r7
 3319 00e0 2846     		mov	r0, r5
 3320              	.LVL260:
 3321 00e2 FFF7FEFF 		bl	I2C_TransferConfig
 3322              	.LVL261:
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3323              		.loc 1 2017 0
 3324 00e6 6B8D     		ldrh	r3, [r5, #42]
 3325 00e8 9BB2     		uxth	r3, r3
 3326 00ea 2A8D     		ldrh	r2, [r5, #40]
 3327 00ec 9B1A     		subs	r3, r3, r2
 3328 00ee 9BB2     		uxth	r3, r3
 3329 00f0 6B85     		strh	r3, [r5, #42]	@ movhi
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3330              		.loc 1 2020 0
 3331 00f2 0023     		movs	r3, #0
 3332 00f4 85F84030 		strb	r3, [r5, #64]
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3333              		.loc 1 2026 0
 3334 00f8 1021     		movs	r1, #16
 3335 00fa 2846     		mov	r0, r5
 3336 00fc FFF7FEFF 		bl	I2C_Enable_IRQ
 3337              	.LVL262:
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3338              		.loc 1 2029 0
 3339 0100 2A68     		ldr	r2, [r5]
 3340 0102 1368     		ldr	r3, [r2]
 3341 0104 43F40043 		orr	r3, r3, #32768
 3342 0108 1360     		str	r3, [r2]
 3343 010a 81E7     		b	.L296
 3344              	.LVL263:
ARM GAS  /tmp/ccZ85PAS.s 			page 185


 3345              	.L299:
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3346              		.loc 1 2049 0
 3347 010c 0E4B     		ldr	r3, .L311+20
 3348 010e 4363     		str	r3, [r0, #52]
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3349              		.loc 1 2053 0
 3350 0110 0C4B     		ldr	r3, .L311+16
 3351 0112 0093     		str	r3, [sp]
 3352 0114 4FF00073 		mov	r3, #33554432
 3353 0118 CAB2     		uxtb	r2, r1
 3354              	.LVL264:
 3355 011a 3946     		mov	r1, r7
 3356 011c FFF7FEFF 		bl	I2C_TransferConfig
 3357              	.LVL265:
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3358              		.loc 1 2056 0
 3359 0120 0024     		movs	r4, #0
 3360 0122 85F84040 		strb	r4, [r5, #64]
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3361              		.loc 1 2064 0
 3362 0126 0121     		movs	r1, #1
 3363 0128 2846     		mov	r0, r5
 3364 012a FFF7FEFF 		bl	I2C_Enable_IRQ
 3365              	.LVL266:
 3366 012e 6FE7     		b	.L296
 3367              	.LVL267:
 3368              	.L305:
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3369              		.loc 1 1955 0
 3370 0130 0224     		movs	r4, #2
 3371 0132 6DE7     		b	.L296
 3372              	.L312:
 3373              		.align	2
 3374              	.L311:
 3375 0134 0000FFFF 		.word	-65536
 3376 0138 00000000 		.word	I2C_Master_ISR_DMA
 3377 013c 00000000 		.word	I2C_DMAMasterReceiveCplt
 3378 0140 00000000 		.word	I2C_DMAError
 3379 0144 00240080 		.word	-2147474432
 3380 0148 00000000 		.word	I2C_Master_ISR_IT
 3381              		.cfi_endproc
 3382              	.LFE154:
 3384              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3385              		.align	1
 3386              		.global	HAL_I2C_Slave_Transmit_DMA
 3387              		.syntax unified
 3388              		.thumb
 3389              		.thumb_func
 3390              		.fpu fpv5-d16
 3392              	HAL_I2C_Slave_Transmit_DMA:
 3393              	.LFB155:
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3394              		.loc 1 2084 0
 3395              		.cfi_startproc
 3396              		@ args = 0, pretend = 0, frame = 0
 3397              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccZ85PAS.s 			page 186


 3398              	.LVL268:
 3399 0000 38B5     		push	{r3, r4, r5, lr}
 3400              	.LCFI57:
 3401              		.cfi_def_cfa_offset 16
 3402              		.cfi_offset 3, -16
 3403              		.cfi_offset 4, -12
 3404              		.cfi_offset 5, -8
 3405              		.cfi_offset 14, -4
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3406              		.loc 1 2087 0
 3407 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3408 0006 DBB2     		uxtb	r3, r3
 3409 0008 202B     		cmp	r3, #32
 3410 000a 02D0     		beq	.L323
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3411              		.loc 1 2174 0
 3412 000c 0224     		movs	r4, #2
 3413              	.LVL269:
 3414              	.L314:
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3415              		.loc 1 2176 0
 3416 000e 2046     		mov	r0, r4
 3417 0010 38BD     		pop	{r3, r4, r5, pc}
 3418              	.LVL270:
 3419              	.L323:
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3420              		.loc 1 2089 0
 3421 0012 002A     		cmp	r2, #0
 3422 0014 18BF     		it	ne
 3423 0016 0029     		cmpne	r1, #0
 3424 0018 39D0     		beq	.L324
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3425              		.loc 1 2095 0
 3426 001a 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3427 001e 012B     		cmp	r3, #1
 3428 0020 5BD0     		beq	.L320
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3429              		.loc 1 2095 0 is_stmt 0 discriminator 2
 3430 0022 0123     		movs	r3, #1
 3431 0024 80F84030 		strb	r3, [r0, #64]
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3432              		.loc 1 2097 0 is_stmt 1 discriminator 2
 3433 0028 2123     		movs	r3, #33
 3434 002a 80F84130 		strb	r3, [r0, #65]
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3435              		.loc 1 2098 0 discriminator 2
 3436 002e 2023     		movs	r3, #32
 3437 0030 80F84230 		strb	r3, [r0, #66]
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3438              		.loc 1 2099 0 discriminator 2
 3439 0034 0023     		movs	r3, #0
 3440 0036 4364     		str	r3, [r0, #68]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3441              		.loc 1 2102 0 discriminator 2
 3442 0038 4162     		str	r1, [r0, #36]
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3443              		.loc 1 2103 0 discriminator 2
ARM GAS  /tmp/ccZ85PAS.s 			page 187


 3444 003a 4285     		strh	r2, [r0, #42]	@ movhi
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3445              		.loc 1 2104 0 discriminator 2
 3446 003c 438D     		ldrh	r3, [r0, #42]
 3447 003e 0385     		strh	r3, [r0, #40]	@ movhi
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3448              		.loc 1 2105 0 discriminator 2
 3449 0040 274B     		ldr	r3, .L326
 3450 0042 C362     		str	r3, [r0, #44]
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3451              		.loc 1 2106 0 discriminator 2
 3452 0044 274B     		ldr	r3, .L326+4
 3453 0046 4363     		str	r3, [r0, #52]
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3454              		.loc 1 2108 0 discriminator 2
 3455 0048 836B     		ldr	r3, [r0, #56]
 3456 004a 2BB3     		cbz	r3, .L316
 3457 004c 0546     		mov	r5, r0
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3458              		.loc 1 2111 0
 3459 004e 264A     		ldr	r2, .L326+8
 3460              	.LVL271:
 3461 0050 DA63     		str	r2, [r3, #60]
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3462              		.loc 1 2114 0
 3463 0052 836B     		ldr	r3, [r0, #56]
 3464 0054 254A     		ldr	r2, .L326+12
 3465 0056 DA64     		str	r2, [r3, #76]
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3466              		.loc 1 2117 0
 3467 0058 826B     		ldr	r2, [r0, #56]
 3468 005a 0023     		movs	r3, #0
 3469 005c 1364     		str	r3, [r2, #64]
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3470              		.loc 1 2118 0
 3471 005e 826B     		ldr	r2, [r0, #56]
 3472 0060 1365     		str	r3, [r2, #80]
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3473              		.loc 1 2121 0
 3474 0062 0268     		ldr	r2, [r0]
 3475 0064 038D     		ldrh	r3, [r0, #40]
 3476 0066 2832     		adds	r2, r2, #40
 3477 0068 806B     		ldr	r0, [r0, #56]
 3478              	.LVL272:
 3479 006a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3480              	.LVL273:
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3481              		.loc 1 2138 0
 3482 006e 0446     		mov	r4, r0
 3483 0070 00B3     		cbz	r0, .L325
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3484              		.loc 1 2158 0
 3485 0072 2823     		movs	r3, #40
 3486 0074 85F84130 		strb	r3, [r5, #65]
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3487              		.loc 1 2159 0
 3488 0078 0022     		movs	r2, #0
ARM GAS  /tmp/ccZ85PAS.s 			page 188


 3489 007a 85F84220 		strb	r2, [r5, #66]
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3490              		.loc 1 2162 0
 3491 007e 6B6C     		ldr	r3, [r5, #68]
 3492 0080 43F01003 		orr	r3, r3, #16
 3493 0084 6B64     		str	r3, [r5, #68]
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3494              		.loc 1 2165 0
 3495 0086 85F84020 		strb	r2, [r5, #64]
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3496              		.loc 1 2167 0
 3497 008a 0124     		movs	r4, #1
 3498 008c BFE7     		b	.L314
 3499              	.LVL274:
 3500              	.L324:
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3501              		.loc 1 2091 0
 3502 008e 4FF40073 		mov	r3, #512
 3503 0092 4364     		str	r3, [r0, #68]
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3504              		.loc 1 2092 0
 3505 0094 0124     		movs	r4, #1
 3506 0096 BAE7     		b	.L314
 3507              	.L316:
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3508              		.loc 1 2126 0
 3509 0098 2823     		movs	r3, #40
 3510 009a 80F84130 		strb	r3, [r0, #65]
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3511              		.loc 1 2127 0
 3512 009e 0022     		movs	r2, #0
 3513              	.LVL275:
 3514 00a0 80F84220 		strb	r2, [r0, #66]
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3515              		.loc 1 2130 0
 3516 00a4 436C     		ldr	r3, [r0, #68]
 3517 00a6 43F08003 		orr	r3, r3, #128
 3518 00aa 4364     		str	r3, [r0, #68]
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3519              		.loc 1 2133 0
 3520 00ac 80F84020 		strb	r2, [r0, #64]
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3521              		.loc 1 2135 0
 3522 00b0 0124     		movs	r4, #1
 3523 00b2 ACE7     		b	.L314
 3524              	.LVL276:
 3525              	.L325:
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3526              		.loc 1 2141 0
 3527 00b4 2A68     		ldr	r2, [r5]
 3528 00b6 5368     		ldr	r3, [r2, #4]
 3529 00b8 23F40043 		bic	r3, r3, #32768
 3530 00bc 5360     		str	r3, [r2, #4]
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3531              		.loc 1 2144 0
 3532 00be 0023     		movs	r3, #0
 3533 00c0 85F84030 		strb	r3, [r5, #64]
ARM GAS  /tmp/ccZ85PAS.s 			page 189


2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3534              		.loc 1 2150 0
 3535 00c4 4FF40041 		mov	r1, #32768
 3536 00c8 2846     		mov	r0, r5
 3537              	.LVL277:
 3538 00ca FFF7FEFF 		bl	I2C_Enable_IRQ
 3539              	.LVL278:
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3540              		.loc 1 2153 0
 3541 00ce 2A68     		ldr	r2, [r5]
 3542 00d0 1368     		ldr	r3, [r2]
 3543 00d2 43F48043 		orr	r3, r3, #16384
 3544 00d6 1360     		str	r3, [r2]
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3545              		.loc 1 2170 0
 3546 00d8 99E7     		b	.L314
 3547              	.LVL279:
 3548              	.L320:
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3549              		.loc 1 2095 0
 3550 00da 0224     		movs	r4, #2
 3551 00dc 97E7     		b	.L314
 3552              	.L327:
 3553 00de 00BF     		.align	2
 3554              	.L326:
 3555 00e0 0000FFFF 		.word	-65536
 3556 00e4 00000000 		.word	I2C_Slave_ISR_DMA
 3557 00e8 00000000 		.word	I2C_DMASlaveTransmitCplt
 3558 00ec 00000000 		.word	I2C_DMAError
 3559              		.cfi_endproc
 3560              	.LFE155:
 3562              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3563              		.align	1
 3564              		.global	HAL_I2C_Slave_Receive_DMA
 3565              		.syntax unified
 3566              		.thumb
 3567              		.thumb_func
 3568              		.fpu fpv5-d16
 3570              	HAL_I2C_Slave_Receive_DMA:
 3571              	.LFB156:
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3572              		.loc 1 2187 0
 3573              		.cfi_startproc
 3574              		@ args = 0, pretend = 0, frame = 0
 3575              		@ frame_needed = 0, uses_anonymous_args = 0
 3576              	.LVL280:
 3577 0000 38B5     		push	{r3, r4, r5, lr}
 3578              	.LCFI58:
 3579              		.cfi_def_cfa_offset 16
 3580              		.cfi_offset 3, -16
 3581              		.cfi_offset 4, -12
 3582              		.cfi_offset 5, -8
 3583              		.cfi_offset 14, -4
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3584              		.loc 1 2190 0
 3585 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3586 0006 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccZ85PAS.s 			page 190


 3587 0008 202B     		cmp	r3, #32
 3588 000a 02D0     		beq	.L338
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3589              		.loc 1 2277 0
 3590 000c 0224     		movs	r4, #2
 3591              	.LVL281:
 3592              	.L329:
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 3593              		.loc 1 2279 0
 3594 000e 2046     		mov	r0, r4
 3595 0010 38BD     		pop	{r3, r4, r5, pc}
 3596              	.LVL282:
 3597              	.L338:
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3598              		.loc 1 2192 0
 3599 0012 002A     		cmp	r2, #0
 3600 0014 18BF     		it	ne
 3601 0016 0029     		cmpne	r1, #0
 3602 0018 3AD0     		beq	.L339
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3603              		.loc 1 2198 0
 3604 001a 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3605 001e 012B     		cmp	r3, #1
 3606 0020 5CD0     		beq	.L335
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3607              		.loc 1 2198 0 is_stmt 0 discriminator 2
 3608 0022 0123     		movs	r3, #1
 3609 0024 80F84030 		strb	r3, [r0, #64]
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3610              		.loc 1 2200 0 is_stmt 1 discriminator 2
 3611 0028 2223     		movs	r3, #34
 3612 002a 80F84130 		strb	r3, [r0, #65]
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3613              		.loc 1 2201 0 discriminator 2
 3614 002e 2023     		movs	r3, #32
 3615 0030 80F84230 		strb	r3, [r0, #66]
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3616              		.loc 1 2202 0 discriminator 2
 3617 0034 0023     		movs	r3, #0
 3618 0036 4364     		str	r3, [r0, #68]
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3619              		.loc 1 2205 0 discriminator 2
 3620 0038 4162     		str	r1, [r0, #36]
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3621              		.loc 1 2206 0 discriminator 2
 3622 003a 4285     		strh	r2, [r0, #42]	@ movhi
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3623              		.loc 1 2207 0 discriminator 2
 3624 003c 438D     		ldrh	r3, [r0, #42]
 3625 003e 0385     		strh	r3, [r0, #40]	@ movhi
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3626              		.loc 1 2208 0 discriminator 2
 3627 0040 274B     		ldr	r3, .L341
 3628 0042 C362     		str	r3, [r0, #44]
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3629              		.loc 1 2209 0 discriminator 2
 3630 0044 274B     		ldr	r3, .L341+4
ARM GAS  /tmp/ccZ85PAS.s 			page 191


 3631 0046 4363     		str	r3, [r0, #52]
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3632              		.loc 1 2211 0 discriminator 2
 3633 0048 C36B     		ldr	r3, [r0, #60]
 3634 004a 33B3     		cbz	r3, .L331
 3635 004c 0A46     		mov	r2, r1
 3636              	.LVL283:
 3637 004e 0546     		mov	r5, r0
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3638              		.loc 1 2214 0
 3639 0050 2549     		ldr	r1, .L341+8
 3640              	.LVL284:
 3641 0052 D963     		str	r1, [r3, #60]
 3642              	.LVL285:
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3643              		.loc 1 2217 0
 3644 0054 C36B     		ldr	r3, [r0, #60]
 3645 0056 2549     		ldr	r1, .L341+12
 3646 0058 D964     		str	r1, [r3, #76]
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3647              		.loc 1 2220 0
 3648 005a C16B     		ldr	r1, [r0, #60]
 3649 005c 0023     		movs	r3, #0
 3650 005e 0B64     		str	r3, [r1, #64]
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3651              		.loc 1 2221 0
 3652 0060 C16B     		ldr	r1, [r0, #60]
 3653 0062 0B65     		str	r3, [r1, #80]
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3654              		.loc 1 2224 0
 3655 0064 0168     		ldr	r1, [r0]
 3656 0066 038D     		ldrh	r3, [r0, #40]
 3657 0068 2431     		adds	r1, r1, #36
 3658 006a C06B     		ldr	r0, [r0, #60]
 3659              	.LVL286:
 3660 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3661              	.LVL287:
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3662              		.loc 1 2241 0
 3663 0070 0446     		mov	r4, r0
 3664 0072 00B3     		cbz	r0, .L340
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3665              		.loc 1 2261 0
 3666 0074 2823     		movs	r3, #40
 3667 0076 85F84130 		strb	r3, [r5, #65]
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3668              		.loc 1 2262 0
 3669 007a 0022     		movs	r2, #0
 3670 007c 85F84220 		strb	r2, [r5, #66]
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3671              		.loc 1 2265 0
 3672 0080 6B6C     		ldr	r3, [r5, #68]
 3673 0082 43F01003 		orr	r3, r3, #16
 3674 0086 6B64     		str	r3, [r5, #68]
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3675              		.loc 1 2268 0
 3676 0088 85F84020 		strb	r2, [r5, #64]
ARM GAS  /tmp/ccZ85PAS.s 			page 192


2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3677              		.loc 1 2270 0
 3678 008c 0124     		movs	r4, #1
 3679 008e BEE7     		b	.L329
 3680              	.LVL288:
 3681              	.L339:
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3682              		.loc 1 2194 0
 3683 0090 4FF40073 		mov	r3, #512
 3684 0094 4364     		str	r3, [r0, #68]
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3685              		.loc 1 2195 0
 3686 0096 0124     		movs	r4, #1
 3687 0098 B9E7     		b	.L329
 3688              	.L331:
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3689              		.loc 1 2229 0
 3690 009a 2823     		movs	r3, #40
 3691 009c 80F84130 		strb	r3, [r0, #65]
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3692              		.loc 1 2230 0
 3693 00a0 0022     		movs	r2, #0
 3694              	.LVL289:
 3695 00a2 80F84220 		strb	r2, [r0, #66]
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3696              		.loc 1 2233 0
 3697 00a6 436C     		ldr	r3, [r0, #68]
 3698 00a8 43F08003 		orr	r3, r3, #128
 3699 00ac 4364     		str	r3, [r0, #68]
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3700              		.loc 1 2236 0
 3701 00ae 80F84020 		strb	r2, [r0, #64]
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3702              		.loc 1 2238 0
 3703 00b2 0124     		movs	r4, #1
 3704 00b4 ABE7     		b	.L329
 3705              	.LVL290:
 3706              	.L340:
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3707              		.loc 1 2244 0
 3708 00b6 2A68     		ldr	r2, [r5]
 3709 00b8 5368     		ldr	r3, [r2, #4]
 3710 00ba 23F40043 		bic	r3, r3, #32768
 3711 00be 5360     		str	r3, [r2, #4]
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3712              		.loc 1 2247 0
 3713 00c0 0023     		movs	r3, #0
 3714 00c2 85F84030 		strb	r3, [r5, #64]
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3715              		.loc 1 2253 0
 3716 00c6 4FF40041 		mov	r1, #32768
 3717 00ca 2846     		mov	r0, r5
 3718              	.LVL291:
 3719 00cc FFF7FEFF 		bl	I2C_Enable_IRQ
 3720              	.LVL292:
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3721              		.loc 1 2256 0
ARM GAS  /tmp/ccZ85PAS.s 			page 193


 3722 00d0 2A68     		ldr	r2, [r5]
 3723 00d2 1368     		ldr	r3, [r2]
 3724 00d4 43F40043 		orr	r3, r3, #32768
 3725 00d8 1360     		str	r3, [r2]
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3726              		.loc 1 2273 0
 3727 00da 98E7     		b	.L329
 3728              	.LVL293:
 3729              	.L335:
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3730              		.loc 1 2198 0
 3731 00dc 0224     		movs	r4, #2
 3732 00de 96E7     		b	.L329
 3733              	.L342:
 3734              		.align	2
 3735              	.L341:
 3736 00e0 0000FFFF 		.word	-65536
 3737 00e4 00000000 		.word	I2C_Slave_ISR_DMA
 3738 00e8 00000000 		.word	I2C_DMASlaveReceiveCplt
 3739 00ec 00000000 		.word	I2C_DMAError
 3740              		.cfi_endproc
 3741              	.LFE156:
 3743              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3744              		.align	1
 3745              		.global	HAL_I2C_Mem_Write
 3746              		.syntax unified
 3747              		.thumb
 3748              		.thumb_func
 3749              		.fpu fpv5-d16
 3751              	HAL_I2C_Mem_Write:
 3752              	.LFB157:
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 3753              		.loc 1 2295 0
 3754              		.cfi_startproc
 3755              		@ args = 12, pretend = 0, frame = 0
 3756              		@ frame_needed = 0, uses_anonymous_args = 0
 3757              	.LVL294:
 3758 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3759              	.LCFI59:
 3760              		.cfi_def_cfa_offset 32
 3761              		.cfi_offset 4, -32
 3762              		.cfi_offset 5, -28
 3763              		.cfi_offset 6, -24
 3764              		.cfi_offset 7, -20
 3765              		.cfi_offset 8, -16
 3766              		.cfi_offset 9, -12
 3767              		.cfi_offset 10, -8
 3768              		.cfi_offset 14, -4
 3769 0004 82B0     		sub	sp, sp, #8
 3770              	.LCFI60:
 3771              		.cfi_def_cfa_offset 40
 3772 0006 BDF82C50 		ldrh	r5, [sp, #44]
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3773              		.loc 1 2301 0
 3774 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3775 000e E4B2     		uxtb	r4, r4
 3776 0010 202C     		cmp	r4, #32
ARM GAS  /tmp/ccZ85PAS.s 			page 194


 3777 0012 04D0     		beq	.L359
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3778              		.loc 1 2411 0
 3779 0014 0223     		movs	r3, #2
 3780              	.LVL295:
 3781              	.L344:
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3782              		.loc 1 2413 0
 3783 0016 1846     		mov	r0, r3
 3784 0018 02B0     		add	sp, sp, #8
 3785              	.LCFI61:
 3786              		.cfi_remember_state
 3787              		.cfi_def_cfa_offset 32
 3788              		@ sp needed
 3789 001a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3790              	.LVL296:
 3791              	.L359:
 3792              	.LCFI62:
 3793              		.cfi_restore_state
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3794              		.loc 1 2303 0
 3795 001e 0A9C     		ldr	r4, [sp, #40]
 3796 0020 002D     		cmp	r5, #0
 3797 0022 18BF     		it	ne
 3798 0024 002C     		cmpne	r4, #0
 3799 0026 05D0     		beq	.L360
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3800              		.loc 1 2310 0
 3801 0028 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3802 002c 012C     		cmp	r4, #1
 3803 002e 06D1     		bne	.L361
 3804 0030 0223     		movs	r3, #2
 3805              	.LVL297:
 3806 0032 F0E7     		b	.L344
 3807              	.LVL298:
 3808              	.L360:
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3809              		.loc 1 2305 0
 3810 0034 4FF40073 		mov	r3, #512
 3811              	.LVL299:
 3812 0038 4364     		str	r3, [r0, #68]
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3813              		.loc 1 2306 0
 3814 003a 0123     		movs	r3, #1
 3815 003c EBE7     		b	.L344
 3816              	.LVL300:
 3817              	.L361:
 3818 003e 9846     		mov	r8, r3
 3819 0040 9146     		mov	r9, r2
 3820 0042 0E46     		mov	r6, r1
 3821 0044 0446     		mov	r4, r0
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3822              		.loc 1 2310 0 discriminator 2
 3823 0046 4FF0010A 		mov	r10, #1
 3824 004a 80F840A0 		strb	r10, [r0, #64]
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3825              		.loc 1 2313 0 discriminator 2
ARM GAS  /tmp/ccZ85PAS.s 			page 195


 3826 004e FFF7FEFF 		bl	HAL_GetTick
 3827              	.LVL301:
 3828 0052 0746     		mov	r7, r0
 3829              	.LVL302:
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3830              		.loc 1 2315 0 discriminator 2
 3831 0054 0090     		str	r0, [sp]
 3832 0056 1923     		movs	r3, #25
 3833 0058 5246     		mov	r2, r10
 3834 005a 4FF40041 		mov	r1, #32768
 3835 005e 2046     		mov	r0, r4
 3836              	.LVL303:
 3837 0060 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3838              	.LVL304:
 3839 0064 08B1     		cbz	r0, .L362
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3840              		.loc 1 2317 0
 3841 0066 0123     		movs	r3, #1
 3842 0068 D5E7     		b	.L344
 3843              	.L362:
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3844              		.loc 1 2320 0
 3845 006a 2123     		movs	r3, #33
 3846 006c 84F84130 		strb	r3, [r4, #65]
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3847              		.loc 1 2321 0
 3848 0070 4023     		movs	r3, #64
 3849 0072 84F84230 		strb	r3, [r4, #66]
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3850              		.loc 1 2322 0
 3851 0076 0023     		movs	r3, #0
 3852 0078 6364     		str	r3, [r4, #68]
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3853              		.loc 1 2325 0
 3854 007a 0A9A     		ldr	r2, [sp, #40]
 3855 007c 6262     		str	r2, [r4, #36]
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3856              		.loc 1 2326 0
 3857 007e 6585     		strh	r5, [r4, #42]	@ movhi
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3858              		.loc 1 2327 0
 3859 0080 6363     		str	r3, [r4, #52]
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3860              		.loc 1 2330 0
 3861 0082 0197     		str	r7, [sp, #4]
 3862 0084 0C9B     		ldr	r3, [sp, #48]
 3863 0086 0093     		str	r3, [sp]
 3864 0088 4346     		mov	r3, r8
 3865 008a 4A46     		mov	r2, r9
 3866 008c 3146     		mov	r1, r6
 3867 008e 2046     		mov	r0, r4
 3868 0090 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3869              	.LVL305:
 3870 0094 70B9     		cbnz	r0, .L363
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3871              		.loc 1 2338 0
 3872 0096 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/ccZ85PAS.s 			page 196


 3873 0098 9BB2     		uxth	r3, r3
 3874 009a FF2B     		cmp	r3, #255
 3875 009c 0FD9     		bls	.L347
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
 3876              		.loc 1 2340 0
 3877 009e FF22     		movs	r2, #255
 3878 00a0 2285     		strh	r2, [r4, #40]	@ movhi
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3879              		.loc 1 2341 0
 3880 00a2 0023     		movs	r3, #0
 3881 00a4 0093     		str	r3, [sp]
 3882 00a6 4FF08073 		mov	r3, #16777216
 3883 00aa 3146     		mov	r1, r6
 3884 00ac 2046     		mov	r0, r4
 3885 00ae FFF7FEFF 		bl	I2C_TransferConfig
 3886              	.LVL306:
 3887 00b2 21E0     		b	.L351
 3888              	.L363:
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 3889              		.loc 1 2333 0
 3890 00b4 0023     		movs	r3, #0
 3891 00b6 84F84030 		strb	r3, [r4, #64]
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3892              		.loc 1 2334 0
 3893 00ba 5346     		mov	r3, r10
 3894 00bc ABE7     		b	.L344
 3895              	.L347:
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
 3896              		.loc 1 2345 0
 3897 00be 628D     		ldrh	r2, [r4, #42]
 3898 00c0 92B2     		uxth	r2, r2
 3899 00c2 2285     		strh	r2, [r4, #40]	@ movhi
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3900              		.loc 1 2346 0
 3901 00c4 0023     		movs	r3, #0
 3902 00c6 0093     		str	r3, [sp]
 3903 00c8 4FF00073 		mov	r3, #33554432
 3904 00cc D2B2     		uxtb	r2, r2
 3905 00ce 3146     		mov	r1, r6
 3906 00d0 2046     		mov	r0, r4
 3907 00d2 FFF7FEFF 		bl	I2C_TransferConfig
 3908              	.LVL307:
 3909 00d6 0FE0     		b	.L351
 3910              	.L350:
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 3911              		.loc 1 2381 0
 3912 00d8 628D     		ldrh	r2, [r4, #42]
 3913 00da 92B2     		uxth	r2, r2
 3914 00dc 2285     		strh	r2, [r4, #40]	@ movhi
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3915              		.loc 1 2382 0
 3916 00de 0023     		movs	r3, #0
 3917 00e0 0093     		str	r3, [sp]
 3918 00e2 4FF00073 		mov	r3, #33554432
 3919 00e6 D2B2     		uxtb	r2, r2
 3920 00e8 3146     		mov	r1, r6
 3921 00ea 2046     		mov	r0, r4
ARM GAS  /tmp/ccZ85PAS.s 			page 197


 3922 00ec FFF7FEFF 		bl	I2C_TransferConfig
 3923              	.LVL308:
 3924              	.L349:
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3925              		.loc 1 2386 0
 3926 00f0 638D     		ldrh	r3, [r4, #42]
 3927 00f2 9BB2     		uxth	r3, r3
 3928 00f4 002B     		cmp	r3, #0
 3929 00f6 33D0     		beq	.L364
 3930              	.L351:
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3931              		.loc 1 2352 0
 3932 00f8 3A46     		mov	r2, r7
 3933 00fa 0C99     		ldr	r1, [sp, #48]
 3934 00fc 2046     		mov	r0, r4
 3935 00fe FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3936              	.LVL309:
 3937 0102 0028     		cmp	r0, #0
 3938 0104 49D1     		bne	.L355
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3939              		.loc 1 2358 0
 3940 0106 2368     		ldr	r3, [r4]
 3941 0108 626A     		ldr	r2, [r4, #36]
 3942 010a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3943 010c 9A62     		str	r2, [r3, #40]
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3944              		.loc 1 2361 0
 3945 010e 636A     		ldr	r3, [r4, #36]
 3946 0110 0133     		adds	r3, r3, #1
 3947 0112 6362     		str	r3, [r4, #36]
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 3948              		.loc 1 2363 0
 3949 0114 638D     		ldrh	r3, [r4, #42]
 3950 0116 9BB2     		uxth	r3, r3
 3951 0118 013B     		subs	r3, r3, #1
 3952 011a 9BB2     		uxth	r3, r3
 3953 011c 6385     		strh	r3, [r4, #42]	@ movhi
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3954              		.loc 1 2364 0
 3955 011e 238D     		ldrh	r3, [r4, #40]
 3956 0120 013B     		subs	r3, r3, #1
 3957 0122 9BB2     		uxth	r3, r3
 3958 0124 2385     		strh	r3, [r4, #40]	@ movhi
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3959              		.loc 1 2366 0
 3960 0126 628D     		ldrh	r2, [r4, #42]
 3961 0128 92B2     		uxth	r2, r2
 3962 012a 002A     		cmp	r2, #0
 3963 012c E0D0     		beq	.L349
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3964              		.loc 1 2366 0 is_stmt 0 discriminator 1
 3965 012e 002B     		cmp	r3, #0
 3966 0130 DED1     		bne	.L349
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3967              		.loc 1 2369 0 is_stmt 1
 3968 0132 0097     		str	r7, [sp]
 3969 0134 0C9B     		ldr	r3, [sp, #48]
ARM GAS  /tmp/ccZ85PAS.s 			page 198


 3970 0136 0022     		movs	r2, #0
 3971 0138 8021     		movs	r1, #128
 3972 013a 2046     		mov	r0, r4
 3973 013c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3974              	.LVL310:
 3975 0140 68BB     		cbnz	r0, .L356
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3976              		.loc 1 2374 0
 3977 0142 638D     		ldrh	r3, [r4, #42]
 3978 0144 9BB2     		uxth	r3, r3
 3979 0146 FF2B     		cmp	r3, #255
 3980 0148 C6D9     		bls	.L350
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 3981              		.loc 1 2376 0
 3982 014a FF22     		movs	r2, #255
 3983 014c 2285     		strh	r2, [r4, #40]	@ movhi
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3984              		.loc 1 2377 0
 3985 014e 0023     		movs	r3, #0
 3986 0150 0093     		str	r3, [sp]
 3987 0152 4FF08073 		mov	r3, #16777216
 3988 0156 3146     		mov	r1, r6
 3989 0158 2046     		mov	r0, r4
 3990 015a FFF7FEFF 		bl	I2C_TransferConfig
 3991              	.LVL311:
 3992 015e C7E7     		b	.L349
 3993              	.L364:
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3994              		.loc 1 2390 0
 3995 0160 3A46     		mov	r2, r7
 3996 0162 0C99     		ldr	r1, [sp, #48]
 3997 0164 2046     		mov	r0, r4
 3998 0166 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 3999              	.LVL312:
 4000 016a 0346     		mov	r3, r0
 4001 016c C8B9     		cbnz	r0, .L357
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4002              		.loc 1 2396 0
 4003 016e 2268     		ldr	r2, [r4]
 4004 0170 2021     		movs	r1, #32
 4005 0172 D161     		str	r1, [r2, #28]
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4006              		.loc 1 2399 0
 4007 0174 2068     		ldr	r0, [r4]
 4008 0176 4268     		ldr	r2, [r0, #4]
 4009 0178 22F0FF72 		bic	r2, r2, #33423360
 4010 017c 22F48B32 		bic	r2, r2, #71168
 4011 0180 22F4FF72 		bic	r2, r2, #510
 4012 0184 22F00102 		bic	r2, r2, #1
 4013 0188 4260     		str	r2, [r0, #4]
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4014              		.loc 1 2401 0
 4015 018a 84F84110 		strb	r1, [r4, #65]
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4016              		.loc 1 2402 0
 4017 018e 0022     		movs	r2, #0
 4018 0190 84F84220 		strb	r2, [r4, #66]
ARM GAS  /tmp/ccZ85PAS.s 			page 199


2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4019              		.loc 1 2405 0
 4020 0194 84F84020 		strb	r2, [r4, #64]
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4021              		.loc 1 2407 0
 4022 0198 3DE7     		b	.L344
 4023              	.L355:
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4024              		.loc 1 2354 0
 4025 019a 0123     		movs	r3, #1
 4026 019c 3BE7     		b	.L344
 4027              	.L356:
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4028              		.loc 1 2371 0
 4029 019e 0123     		movs	r3, #1
 4030 01a0 39E7     		b	.L344
 4031              	.L357:
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4032              		.loc 1 2392 0
 4033 01a2 0123     		movs	r3, #1
 4034 01a4 37E7     		b	.L344
 4035              		.cfi_endproc
 4036              	.LFE157:
 4038              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 4039              		.align	1
 4040              		.global	HAL_I2C_Mem_Read
 4041              		.syntax unified
 4042              		.thumb
 4043              		.thumb_func
 4044              		.fpu fpv5-d16
 4046              	HAL_I2C_Mem_Read:
 4047              	.LFB158:
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4048              		.loc 1 2430 0
 4049              		.cfi_startproc
 4050              		@ args = 12, pretend = 0, frame = 0
 4051              		@ frame_needed = 0, uses_anonymous_args = 0
 4052              	.LVL313:
 4053 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4054              	.LCFI63:
 4055              		.cfi_def_cfa_offset 32
 4056              		.cfi_offset 4, -32
 4057              		.cfi_offset 5, -28
 4058              		.cfi_offset 6, -24
 4059              		.cfi_offset 7, -20
 4060              		.cfi_offset 8, -16
 4061              		.cfi_offset 9, -12
 4062              		.cfi_offset 10, -8
 4063              		.cfi_offset 14, -4
 4064 0004 82B0     		sub	sp, sp, #8
 4065              	.LCFI64:
 4066              		.cfi_def_cfa_offset 40
 4067 0006 BDF82C50 		ldrh	r5, [sp, #44]
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4068              		.loc 1 2436 0
 4069 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4070 000e E4B2     		uxtb	r4, r4
ARM GAS  /tmp/ccZ85PAS.s 			page 200


 4071 0010 202C     		cmp	r4, #32
 4072 0012 04D0     		beq	.L381
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4073              		.loc 1 2546 0
 4074 0014 0223     		movs	r3, #2
 4075              	.LVL314:
 4076              	.L366:
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4077              		.loc 1 2548 0
 4078 0016 1846     		mov	r0, r3
 4079 0018 02B0     		add	sp, sp, #8
 4080              	.LCFI65:
 4081              		.cfi_remember_state
 4082              		.cfi_def_cfa_offset 32
 4083              		@ sp needed
 4084 001a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4085              	.LVL315:
 4086              	.L381:
 4087              	.LCFI66:
 4088              		.cfi_restore_state
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4089              		.loc 1 2438 0
 4090 001e 0A9C     		ldr	r4, [sp, #40]
 4091 0020 002D     		cmp	r5, #0
 4092 0022 18BF     		it	ne
 4093 0024 002C     		cmpne	r4, #0
 4094 0026 05D0     		beq	.L382
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4095              		.loc 1 2445 0
 4096 0028 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4097 002c 012C     		cmp	r4, #1
 4098 002e 06D1     		bne	.L383
 4099 0030 0223     		movs	r3, #2
 4100              	.LVL316:
 4101 0032 F0E7     		b	.L366
 4102              	.LVL317:
 4103              	.L382:
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4104              		.loc 1 2440 0
 4105 0034 4FF40073 		mov	r3, #512
 4106              	.LVL318:
 4107 0038 4364     		str	r3, [r0, #68]
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4108              		.loc 1 2441 0
 4109 003a 0123     		movs	r3, #1
 4110 003c EBE7     		b	.L366
 4111              	.LVL319:
 4112              	.L383:
 4113 003e 9846     		mov	r8, r3
 4114 0040 9146     		mov	r9, r2
 4115 0042 0E46     		mov	r6, r1
 4116 0044 0446     		mov	r4, r0
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4117              		.loc 1 2445 0 discriminator 2
 4118 0046 4FF0010A 		mov	r10, #1
 4119 004a 80F840A0 		strb	r10, [r0, #64]
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 201


 4120              		.loc 1 2448 0 discriminator 2
 4121 004e FFF7FEFF 		bl	HAL_GetTick
 4122              	.LVL320:
 4123 0052 0746     		mov	r7, r0
 4124              	.LVL321:
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4125              		.loc 1 2450 0 discriminator 2
 4126 0054 0090     		str	r0, [sp]
 4127 0056 1923     		movs	r3, #25
 4128 0058 5246     		mov	r2, r10
 4129 005a 4FF40041 		mov	r1, #32768
 4130 005e 2046     		mov	r0, r4
 4131              	.LVL322:
 4132 0060 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4133              	.LVL323:
 4134 0064 08B1     		cbz	r0, .L384
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4135              		.loc 1 2452 0
 4136 0066 0123     		movs	r3, #1
 4137 0068 D5E7     		b	.L366
 4138              	.L384:
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4139              		.loc 1 2455 0
 4140 006a 2223     		movs	r3, #34
 4141 006c 84F84130 		strb	r3, [r4, #65]
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4142              		.loc 1 2456 0
 4143 0070 4023     		movs	r3, #64
 4144 0072 84F84230 		strb	r3, [r4, #66]
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4145              		.loc 1 2457 0
 4146 0076 0023     		movs	r3, #0
 4147 0078 6364     		str	r3, [r4, #68]
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4148              		.loc 1 2460 0
 4149 007a 0A9A     		ldr	r2, [sp, #40]
 4150 007c 6262     		str	r2, [r4, #36]
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4151              		.loc 1 2461 0
 4152 007e 6585     		strh	r5, [r4, #42]	@ movhi
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4153              		.loc 1 2462 0
 4154 0080 6363     		str	r3, [r4, #52]
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4155              		.loc 1 2465 0
 4156 0082 0197     		str	r7, [sp, #4]
 4157 0084 0C9B     		ldr	r3, [sp, #48]
 4158 0086 0093     		str	r3, [sp]
 4159 0088 4346     		mov	r3, r8
 4160 008a 4A46     		mov	r2, r9
 4161 008c 3146     		mov	r1, r6
 4162 008e 2046     		mov	r0, r4
 4163 0090 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4164              	.LVL324:
 4165 0094 70B9     		cbnz	r0, .L385
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4166              		.loc 1 2474 0
ARM GAS  /tmp/ccZ85PAS.s 			page 202


 4167 0096 638D     		ldrh	r3, [r4, #42]
 4168 0098 9BB2     		uxth	r3, r3
 4169 009a FF2B     		cmp	r3, #255
 4170 009c 0FD9     		bls	.L369
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 4171              		.loc 1 2476 0
 4172 009e FF22     		movs	r2, #255
 4173 00a0 2285     		strh	r2, [r4, #40]	@ movhi
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4174              		.loc 1 2477 0
 4175 00a2 414B     		ldr	r3, .L387
 4176 00a4 0093     		str	r3, [sp]
 4177 00a6 4FF08073 		mov	r3, #16777216
 4178 00aa 3146     		mov	r1, r6
 4179 00ac 2046     		mov	r0, r4
 4180 00ae FFF7FEFF 		bl	I2C_TransferConfig
 4181              	.LVL325:
 4182 00b2 21E0     		b	.L373
 4183              	.L385:
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4184              		.loc 1 2468 0
 4185 00b4 0023     		movs	r3, #0
 4186 00b6 84F84030 		strb	r3, [r4, #64]
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4187              		.loc 1 2469 0
 4188 00ba 5346     		mov	r3, r10
 4189 00bc ABE7     		b	.L366
 4190              	.L369:
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 4191              		.loc 1 2481 0
 4192 00be 628D     		ldrh	r2, [r4, #42]
 4193 00c0 92B2     		uxth	r2, r2
 4194 00c2 2285     		strh	r2, [r4, #40]	@ movhi
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4195              		.loc 1 2482 0
 4196 00c4 384B     		ldr	r3, .L387
 4197 00c6 0093     		str	r3, [sp]
 4198 00c8 4FF00073 		mov	r3, #33554432
 4199 00cc D2B2     		uxtb	r2, r2
 4200 00ce 3146     		mov	r1, r6
 4201 00d0 2046     		mov	r0, r4
 4202 00d2 FFF7FEFF 		bl	I2C_TransferConfig
 4203              	.LVL326:
 4204 00d6 0FE0     		b	.L373
 4205              	.L372:
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 4206              		.loc 1 2517 0
 4207 00d8 628D     		ldrh	r2, [r4, #42]
 4208 00da 92B2     		uxth	r2, r2
 4209 00dc 2285     		strh	r2, [r4, #40]	@ movhi
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4210              		.loc 1 2518 0
 4211 00de 0023     		movs	r3, #0
 4212 00e0 0093     		str	r3, [sp]
 4213 00e2 4FF00073 		mov	r3, #33554432
 4214 00e6 D2B2     		uxtb	r2, r2
 4215 00e8 3146     		mov	r1, r6
ARM GAS  /tmp/ccZ85PAS.s 			page 203


 4216 00ea 2046     		mov	r0, r4
 4217 00ec FFF7FEFF 		bl	I2C_TransferConfig
 4218              	.LVL327:
 4219              	.L371:
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4220              		.loc 1 2521 0
 4221 00f0 638D     		ldrh	r3, [r4, #42]
 4222 00f2 9BB2     		uxth	r3, r3
 4223 00f4 002B     		cmp	r3, #0
 4224 00f6 34D0     		beq	.L386
 4225              	.L373:
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4226              		.loc 1 2488 0
 4227 00f8 0097     		str	r7, [sp]
 4228 00fa 0C9B     		ldr	r3, [sp, #48]
 4229 00fc 0022     		movs	r2, #0
 4230 00fe 0421     		movs	r1, #4
 4231 0100 2046     		mov	r0, r4
 4232 0102 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4233              	.LVL328:
 4234 0106 0028     		cmp	r0, #0
 4235 0108 48D1     		bne	.L377
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4236              		.loc 1 2494 0
 4237 010a 636A     		ldr	r3, [r4, #36]
 4238 010c 2268     		ldr	r2, [r4]
 4239 010e 526A     		ldr	r2, [r2, #36]
 4240 0110 1A70     		strb	r2, [r3]
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4241              		.loc 1 2497 0
 4242 0112 636A     		ldr	r3, [r4, #36]
 4243 0114 0133     		adds	r3, r3, #1
 4244 0116 6362     		str	r3, [r4, #36]
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 4245              		.loc 1 2499 0
 4246 0118 228D     		ldrh	r2, [r4, #40]
 4247 011a 013A     		subs	r2, r2, #1
 4248 011c 92B2     		uxth	r2, r2
 4249 011e 2285     		strh	r2, [r4, #40]	@ movhi
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4250              		.loc 1 2500 0
 4251 0120 638D     		ldrh	r3, [r4, #42]
 4252 0122 9BB2     		uxth	r3, r3
 4253 0124 013B     		subs	r3, r3, #1
 4254 0126 9BB2     		uxth	r3, r3
 4255 0128 6385     		strh	r3, [r4, #42]	@ movhi
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4256              		.loc 1 2502 0
 4257 012a 638D     		ldrh	r3, [r4, #42]
 4258 012c 9BB2     		uxth	r3, r3
 4259 012e 002B     		cmp	r3, #0
 4260 0130 DED0     		beq	.L371
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4261              		.loc 1 2502 0 is_stmt 0 discriminator 1
 4262 0132 002A     		cmp	r2, #0
 4263 0134 DCD1     		bne	.L371
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccZ85PAS.s 			page 204


 4264              		.loc 1 2505 0 is_stmt 1
 4265 0136 0097     		str	r7, [sp]
 4266 0138 0C9B     		ldr	r3, [sp, #48]
 4267 013a 8021     		movs	r1, #128
 4268 013c 2046     		mov	r0, r4
 4269 013e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4270              	.LVL329:
 4271 0142 68BB     		cbnz	r0, .L378
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4272              		.loc 1 2510 0
 4273 0144 638D     		ldrh	r3, [r4, #42]
 4274 0146 9BB2     		uxth	r3, r3
 4275 0148 FF2B     		cmp	r3, #255
 4276 014a C5D9     		bls	.L372
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
 4277              		.loc 1 2512 0
 4278 014c FF22     		movs	r2, #255
 4279 014e 2285     		strh	r2, [r4, #40]	@ movhi
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4280              		.loc 1 2513 0
 4281 0150 0023     		movs	r3, #0
 4282 0152 0093     		str	r3, [sp]
 4283 0154 4FF08073 		mov	r3, #16777216
 4284 0158 3146     		mov	r1, r6
 4285 015a 2046     		mov	r0, r4
 4286 015c FFF7FEFF 		bl	I2C_TransferConfig
 4287              	.LVL330:
 4288 0160 C6E7     		b	.L371
 4289              	.L386:
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4290              		.loc 1 2525 0
 4291 0162 3A46     		mov	r2, r7
 4292 0164 0C99     		ldr	r1, [sp, #48]
 4293 0166 2046     		mov	r0, r4
 4294 0168 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4295              	.LVL331:
 4296 016c 0346     		mov	r3, r0
 4297 016e C8B9     		cbnz	r0, .L379
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4298              		.loc 1 2531 0
 4299 0170 2268     		ldr	r2, [r4]
 4300 0172 2021     		movs	r1, #32
 4301 0174 D161     		str	r1, [r2, #28]
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4302              		.loc 1 2534 0
 4303 0176 2068     		ldr	r0, [r4]
 4304 0178 4268     		ldr	r2, [r0, #4]
 4305 017a 22F0FF72 		bic	r2, r2, #33423360
 4306 017e 22F48B32 		bic	r2, r2, #71168
 4307 0182 22F4FF72 		bic	r2, r2, #510
 4308 0186 22F00102 		bic	r2, r2, #1
 4309 018a 4260     		str	r2, [r0, #4]
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4310              		.loc 1 2536 0
 4311 018c 84F84110 		strb	r1, [r4, #65]
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4312              		.loc 1 2537 0
ARM GAS  /tmp/ccZ85PAS.s 			page 205


 4313 0190 0022     		movs	r2, #0
 4314 0192 84F84220 		strb	r2, [r4, #66]
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4315              		.loc 1 2540 0
 4316 0196 84F84020 		strb	r2, [r4, #64]
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4317              		.loc 1 2542 0
 4318 019a 3CE7     		b	.L366
 4319              	.L377:
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4320              		.loc 1 2490 0
 4321 019c 0123     		movs	r3, #1
 4322 019e 3AE7     		b	.L366
 4323              	.L378:
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4324              		.loc 1 2507 0
 4325 01a0 0123     		movs	r3, #1
 4326 01a2 38E7     		b	.L366
 4327              	.L379:
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4328              		.loc 1 2527 0
 4329 01a4 0123     		movs	r3, #1
 4330 01a6 36E7     		b	.L366
 4331              	.L388:
 4332              		.align	2
 4333              	.L387:
 4334 01a8 00240080 		.word	-2147474432
 4335              		.cfi_endproc
 4336              	.LFE158:
 4338              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4339              		.align	1
 4340              		.global	HAL_I2C_Mem_Write_IT
 4341              		.syntax unified
 4342              		.thumb
 4343              		.thumb_func
 4344              		.fpu fpv5-d16
 4346              	HAL_I2C_Mem_Write_IT:
 4347              	.LFB159:
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4348              		.loc 1 2563 0
 4349              		.cfi_startproc
 4350              		@ args = 8, pretend = 0, frame = 0
 4351              		@ frame_needed = 0, uses_anonymous_args = 0
 4352              	.LVL332:
 4353 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4354              	.LCFI67:
 4355              		.cfi_def_cfa_offset 24
 4356              		.cfi_offset 4, -24
 4357              		.cfi_offset 5, -20
 4358              		.cfi_offset 6, -16
 4359              		.cfi_offset 7, -12
 4360              		.cfi_offset 8, -8
 4361              		.cfi_offset 14, -4
 4362 0004 82B0     		sub	sp, sp, #8
 4363              	.LCFI68:
 4364              		.cfi_def_cfa_offset 32
 4365 0006 BDF82450 		ldrh	r5, [sp, #36]
ARM GAS  /tmp/ccZ85PAS.s 			page 206


2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4366              		.loc 1 2570 0
 4367 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4368 000e E4B2     		uxtb	r4, r4
 4369 0010 202C     		cmp	r4, #32
 4370 0012 04D0     		beq	.L399
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4371              		.loc 1 2637 0
 4372 0014 0224     		movs	r4, #2
 4373              	.LVL333:
 4374              	.L390:
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4375              		.loc 1 2639 0
 4376 0016 2046     		mov	r0, r4
 4377 0018 02B0     		add	sp, sp, #8
 4378              	.LCFI69:
 4379              		.cfi_remember_state
 4380              		.cfi_def_cfa_offset 24
 4381              		@ sp needed
 4382 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4383              	.LVL334:
 4384              	.L399:
 4385              	.LCFI70:
 4386              		.cfi_restore_state
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4387              		.loc 1 2572 0
 4388 001e 089C     		ldr	r4, [sp, #32]
 4389 0020 002D     		cmp	r5, #0
 4390 0022 18BF     		it	ne
 4391 0024 002C     		cmpne	r4, #0
 4392 0026 06D0     		beq	.L400
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4393              		.loc 1 2578 0
 4394 0028 0468     		ldr	r4, [r0]
 4395 002a A469     		ldr	r4, [r4, #24]
 4396 002c 14F4004F 		tst	r4, #32768
 4397 0030 06D0     		beq	.L401
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4398              		.loc 1 2580 0
 4399 0032 0224     		movs	r4, #2
 4400 0034 EFE7     		b	.L390
 4401              	.L400:
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4402              		.loc 1 2574 0
 4403 0036 4FF40073 		mov	r3, #512
 4404              	.LVL335:
 4405 003a 4364     		str	r3, [r0, #68]
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4406              		.loc 1 2575 0
 4407 003c 0124     		movs	r4, #1
 4408 003e EAE7     		b	.L390
 4409              	.LVL336:
 4410              	.L401:
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4411              		.loc 1 2584 0
 4412 0040 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4413 0044 012C     		cmp	r4, #1
ARM GAS  /tmp/ccZ85PAS.s 			page 207


 4414 0046 01D1     		bne	.L402
 4415 0048 0224     		movs	r4, #2
 4416 004a E4E7     		b	.L390
 4417              	.L402:
 4418 004c 1F46     		mov	r7, r3
 4419 004e 1446     		mov	r4, r2
 4420 0050 0E46     		mov	r6, r1
 4421 0052 8046     		mov	r8, r0
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4422              		.loc 1 2584 0 is_stmt 0 discriminator 2
 4423 0054 0123     		movs	r3, #1
 4424              	.LVL337:
 4425 0056 80F84030 		strb	r3, [r0, #64]
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4426              		.loc 1 2587 0 is_stmt 1 discriminator 2
 4427 005a FFF7FEFF 		bl	HAL_GetTick
 4428              	.LVL338:
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4429              		.loc 1 2589 0 discriminator 2
 4430 005e 2123     		movs	r3, #33
 4431 0060 88F84130 		strb	r3, [r8, #65]
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4432              		.loc 1 2590 0 discriminator 2
 4433 0064 4023     		movs	r3, #64
 4434 0066 88F84230 		strb	r3, [r8, #66]
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4435              		.loc 1 2591 0 discriminator 2
 4436 006a 0023     		movs	r3, #0
 4437 006c C8F84430 		str	r3, [r8, #68]
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4438              		.loc 1 2594 0 discriminator 2
 4439 0070 089B     		ldr	r3, [sp, #32]
 4440 0072 C8F82430 		str	r3, [r8, #36]
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4441              		.loc 1 2595 0 discriminator 2
 4442 0076 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4443              		.loc 1 2596 0 discriminator 2
 4444 007a 1B4B     		ldr	r3, .L403
 4445 007c C8F82C30 		str	r3, [r8, #44]
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4446              		.loc 1 2597 0 discriminator 2
 4447 0080 1A4B     		ldr	r3, .L403+4
 4448 0082 C8F83430 		str	r3, [r8, #52]
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4449              		.loc 1 2599 0 discriminator 2
 4450 0086 B8F82A30 		ldrh	r3, [r8, #42]
 4451 008a 9BB2     		uxth	r3, r3
 4452 008c FF2B     		cmp	r3, #255
 4453 008e 14D9     		bls	.L392
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4454              		.loc 1 2601 0
 4455 0090 FF23     		movs	r3, #255
 4456 0092 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4457              	.LVL339:
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4458              		.loc 1 2602 0
ARM GAS  /tmp/ccZ85PAS.s 			page 208


 4459 0096 4FF08075 		mov	r5, #16777216
 4460              	.LVL340:
 4461              	.L393:
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4462              		.loc 1 2611 0
 4463 009a 0190     		str	r0, [sp, #4]
 4464 009c 1923     		movs	r3, #25
 4465 009e 0093     		str	r3, [sp]
 4466 00a0 3B46     		mov	r3, r7
 4467 00a2 2246     		mov	r2, r4
 4468 00a4 3146     		mov	r1, r6
 4469 00a6 4046     		mov	r0, r8
 4470              	.LVL341:
 4471 00a8 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4472              	.LVL342:
 4473 00ac 0446     		mov	r4, r0
 4474 00ae 58B1     		cbz	r0, .L394
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4475              		.loc 1 2614 0
 4476 00b0 0023     		movs	r3, #0
 4477 00b2 88F84030 		strb	r3, [r8, #64]
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4478              		.loc 1 2615 0
 4479 00b6 0124     		movs	r4, #1
 4480 00b8 ADE7     		b	.L390
 4481              	.LVL343:
 4482              	.L392:
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4483              		.loc 1 2606 0
 4484 00ba B8F82A30 		ldrh	r3, [r8, #42]
 4485 00be A8F82830 		strh	r3, [r8, #40]	@ movhi
 4486              	.LVL344:
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4487              		.loc 1 2607 0
 4488 00c2 4FF00075 		mov	r5, #33554432
 4489 00c6 E8E7     		b	.L393
 4490              	.LVL345:
 4491              	.L394:
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4492              		.loc 1 2619 0
 4493 00c8 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 4494 00cc 0027     		movs	r7, #0
 4495 00ce 0097     		str	r7, [sp]
 4496 00d0 2B46     		mov	r3, r5
 4497 00d2 3146     		mov	r1, r6
 4498 00d4 4046     		mov	r0, r8
 4499 00d6 FFF7FEFF 		bl	I2C_TransferConfig
 4500              	.LVL346:
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4501              		.loc 1 2622 0
 4502 00da 88F84070 		strb	r7, [r8, #64]
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4503              		.loc 1 2631 0
 4504 00de 0121     		movs	r1, #1
 4505 00e0 4046     		mov	r0, r8
 4506 00e2 FFF7FEFF 		bl	I2C_Enable_IRQ
 4507              	.LVL347:
ARM GAS  /tmp/ccZ85PAS.s 			page 209


2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4508              		.loc 1 2633 0
 4509 00e6 96E7     		b	.L390
 4510              	.L404:
 4511              		.align	2
 4512              	.L403:
 4513 00e8 0000FFFF 		.word	-65536
 4514 00ec 00000000 		.word	I2C_Master_ISR_IT
 4515              		.cfi_endproc
 4516              	.LFE159:
 4518              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4519              		.align	1
 4520              		.global	HAL_I2C_Mem_Read_IT
 4521              		.syntax unified
 4522              		.thumb
 4523              		.thumb_func
 4524              		.fpu fpv5-d16
 4526              	HAL_I2C_Mem_Read_IT:
 4527              	.LFB160:
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4528              		.loc 1 2655 0
 4529              		.cfi_startproc
 4530              		@ args = 8, pretend = 0, frame = 0
 4531              		@ frame_needed = 0, uses_anonymous_args = 0
 4532              	.LVL348:
 4533 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4534              	.LCFI71:
 4535              		.cfi_def_cfa_offset 24
 4536              		.cfi_offset 4, -24
 4537              		.cfi_offset 5, -20
 4538              		.cfi_offset 6, -16
 4539              		.cfi_offset 7, -12
 4540              		.cfi_offset 8, -8
 4541              		.cfi_offset 14, -4
 4542 0004 82B0     		sub	sp, sp, #8
 4543              	.LCFI72:
 4544              		.cfi_def_cfa_offset 32
 4545 0006 BDF82450 		ldrh	r5, [sp, #36]
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4546              		.loc 1 2662 0
 4547 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4548 000e E4B2     		uxtb	r4, r4
 4549 0010 202C     		cmp	r4, #32
 4550 0012 04D0     		beq	.L415
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4551              		.loc 1 2729 0
 4552 0014 0224     		movs	r4, #2
 4553              	.LVL349:
 4554              	.L406:
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4555              		.loc 1 2731 0
 4556 0016 2046     		mov	r0, r4
 4557 0018 02B0     		add	sp, sp, #8
 4558              	.LCFI73:
 4559              		.cfi_remember_state
 4560              		.cfi_def_cfa_offset 24
 4561              		@ sp needed
ARM GAS  /tmp/ccZ85PAS.s 			page 210


 4562 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4563              	.LVL350:
 4564              	.L415:
 4565              	.LCFI74:
 4566              		.cfi_restore_state
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4567              		.loc 1 2664 0
 4568 001e 089C     		ldr	r4, [sp, #32]
 4569 0020 002D     		cmp	r5, #0
 4570 0022 18BF     		it	ne
 4571 0024 002C     		cmpne	r4, #0
 4572 0026 06D0     		beq	.L416
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4573              		.loc 1 2670 0
 4574 0028 0468     		ldr	r4, [r0]
 4575 002a A469     		ldr	r4, [r4, #24]
 4576 002c 14F4004F 		tst	r4, #32768
 4577 0030 06D0     		beq	.L417
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4578              		.loc 1 2672 0
 4579 0032 0224     		movs	r4, #2
 4580 0034 EFE7     		b	.L406
 4581              	.L416:
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4582              		.loc 1 2666 0
 4583 0036 4FF40073 		mov	r3, #512
 4584              	.LVL351:
 4585 003a 4364     		str	r3, [r0, #68]
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4586              		.loc 1 2667 0
 4587 003c 0124     		movs	r4, #1
 4588 003e EAE7     		b	.L406
 4589              	.LVL352:
 4590              	.L417:
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4591              		.loc 1 2676 0
 4592 0040 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4593 0044 012C     		cmp	r4, #1
 4594 0046 01D1     		bne	.L418
 4595 0048 0224     		movs	r4, #2
 4596 004a E4E7     		b	.L406
 4597              	.L418:
 4598 004c 1F46     		mov	r7, r3
 4599 004e 1446     		mov	r4, r2
 4600 0050 0E46     		mov	r6, r1
 4601 0052 8046     		mov	r8, r0
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4602              		.loc 1 2676 0 is_stmt 0 discriminator 2
 4603 0054 0123     		movs	r3, #1
 4604              	.LVL353:
 4605 0056 80F84030 		strb	r3, [r0, #64]
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4606              		.loc 1 2679 0 is_stmt 1 discriminator 2
 4607 005a FFF7FEFF 		bl	HAL_GetTick
 4608              	.LVL354:
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4609              		.loc 1 2681 0 discriminator 2
ARM GAS  /tmp/ccZ85PAS.s 			page 211


 4610 005e 2223     		movs	r3, #34
 4611 0060 88F84130 		strb	r3, [r8, #65]
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4612              		.loc 1 2682 0 discriminator 2
 4613 0064 4023     		movs	r3, #64
 4614 0066 88F84230 		strb	r3, [r8, #66]
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4615              		.loc 1 2683 0 discriminator 2
 4616 006a 0023     		movs	r3, #0
 4617 006c C8F84430 		str	r3, [r8, #68]
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4618              		.loc 1 2686 0 discriminator 2
 4619 0070 089B     		ldr	r3, [sp, #32]
 4620 0072 C8F82430 		str	r3, [r8, #36]
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4621              		.loc 1 2687 0 discriminator 2
 4622 0076 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4623              		.loc 1 2688 0 discriminator 2
 4624 007a 1C4B     		ldr	r3, .L419
 4625 007c C8F82C30 		str	r3, [r8, #44]
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4626              		.loc 1 2689 0 discriminator 2
 4627 0080 1B4B     		ldr	r3, .L419+4
 4628 0082 C8F83430 		str	r3, [r8, #52]
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4629              		.loc 1 2691 0 discriminator 2
 4630 0086 B8F82A30 		ldrh	r3, [r8, #42]
 4631 008a 9BB2     		uxth	r3, r3
 4632 008c FF2B     		cmp	r3, #255
 4633 008e 14D9     		bls	.L408
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4634              		.loc 1 2693 0
 4635 0090 FF23     		movs	r3, #255
 4636 0092 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4637              	.LVL355:
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4638              		.loc 1 2694 0
 4639 0096 4FF08075 		mov	r5, #16777216
 4640              	.LVL356:
 4641              	.L409:
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4642              		.loc 1 2703 0
 4643 009a 0190     		str	r0, [sp, #4]
 4644 009c 1923     		movs	r3, #25
 4645 009e 0093     		str	r3, [sp]
 4646 00a0 3B46     		mov	r3, r7
 4647 00a2 2246     		mov	r2, r4
 4648 00a4 3146     		mov	r1, r6
 4649 00a6 4046     		mov	r0, r8
 4650              	.LVL357:
 4651 00a8 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4652              	.LVL358:
 4653 00ac 0446     		mov	r4, r0
 4654 00ae 58B1     		cbz	r0, .L410
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4655              		.loc 1 2706 0
ARM GAS  /tmp/ccZ85PAS.s 			page 212


 4656 00b0 0023     		movs	r3, #0
 4657 00b2 88F84030 		strb	r3, [r8, #64]
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4658              		.loc 1 2707 0
 4659 00b6 0124     		movs	r4, #1
 4660 00b8 ADE7     		b	.L406
 4661              	.LVL359:
 4662              	.L408:
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4663              		.loc 1 2698 0
 4664 00ba B8F82A30 		ldrh	r3, [r8, #42]
 4665 00be A8F82830 		strh	r3, [r8, #40]	@ movhi
 4666              	.LVL360:
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4667              		.loc 1 2699 0
 4668 00c2 4FF00075 		mov	r5, #33554432
 4669 00c6 E8E7     		b	.L409
 4670              	.LVL361:
 4671              	.L410:
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4672              		.loc 1 2711 0
 4673 00c8 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 4674 00cc 094B     		ldr	r3, .L419+8
 4675 00ce 0093     		str	r3, [sp]
 4676 00d0 2B46     		mov	r3, r5
 4677 00d2 3146     		mov	r1, r6
 4678 00d4 4046     		mov	r0, r8
 4679 00d6 FFF7FEFF 		bl	I2C_TransferConfig
 4680              	.LVL362:
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4681              		.loc 1 2714 0
 4682 00da 0023     		movs	r3, #0
 4683 00dc 88F84030 		strb	r3, [r8, #64]
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4684              		.loc 1 2723 0
 4685 00e0 0221     		movs	r1, #2
 4686 00e2 4046     		mov	r0, r8
 4687 00e4 FFF7FEFF 		bl	I2C_Enable_IRQ
 4688              	.LVL363:
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4689              		.loc 1 2725 0
 4690 00e8 95E7     		b	.L406
 4691              	.L420:
 4692 00ea 00BF     		.align	2
 4693              	.L419:
 4694 00ec 0000FFFF 		.word	-65536
 4695 00f0 00000000 		.word	I2C_Master_ISR_IT
 4696 00f4 00240080 		.word	-2147474432
 4697              		.cfi_endproc
 4698              	.LFE160:
 4700              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4701              		.align	1
 4702              		.global	HAL_I2C_Mem_Write_DMA
 4703              		.syntax unified
 4704              		.thumb
 4705              		.thumb_func
 4706              		.fpu fpv5-d16
ARM GAS  /tmp/ccZ85PAS.s 			page 213


 4708              	HAL_I2C_Mem_Write_DMA:
 4709              	.LFB161:
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4710              		.loc 1 2746 0
 4711              		.cfi_startproc
 4712              		@ args = 8, pretend = 0, frame = 0
 4713              		@ frame_needed = 0, uses_anonymous_args = 0
 4714              	.LVL364:
 4715 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4716              	.LCFI75:
 4717              		.cfi_def_cfa_offset 24
 4718              		.cfi_offset 4, -24
 4719              		.cfi_offset 5, -20
 4720              		.cfi_offset 6, -16
 4721              		.cfi_offset 7, -12
 4722              		.cfi_offset 8, -8
 4723              		.cfi_offset 14, -4
 4724 0004 82B0     		sub	sp, sp, #8
 4725              	.LCFI76:
 4726              		.cfi_def_cfa_offset 32
 4727 0006 BDF82450 		ldrh	r5, [sp, #36]
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4728              		.loc 1 2754 0
 4729 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4730 000e E4B2     		uxtb	r4, r4
 4731 0010 202C     		cmp	r4, #32
 4732 0012 04D0     		beq	.L435
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4733              		.loc 1 2873 0
 4734 0014 0224     		movs	r4, #2
 4735              	.LVL365:
 4736              	.L422:
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4737              		.loc 1 2875 0
 4738 0016 2046     		mov	r0, r4
 4739 0018 02B0     		add	sp, sp, #8
 4740              	.LCFI77:
 4741              		.cfi_remember_state
 4742              		.cfi_def_cfa_offset 24
 4743              		@ sp needed
 4744 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4745              	.LVL366:
 4746              	.L435:
 4747              	.LCFI78:
 4748              		.cfi_restore_state
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4749              		.loc 1 2756 0
 4750 001e 089C     		ldr	r4, [sp, #32]
 4751 0020 002D     		cmp	r5, #0
 4752 0022 18BF     		it	ne
 4753 0024 002C     		cmpne	r4, #0
 4754 0026 06D0     		beq	.L436
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4755              		.loc 1 2762 0
 4756 0028 0468     		ldr	r4, [r0]
 4757 002a A469     		ldr	r4, [r4, #24]
 4758 002c 14F4004F 		tst	r4, #32768
ARM GAS  /tmp/ccZ85PAS.s 			page 214


 4759 0030 06D0     		beq	.L437
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4760              		.loc 1 2764 0
 4761 0032 0224     		movs	r4, #2
 4762 0034 EFE7     		b	.L422
 4763              	.L436:
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4764              		.loc 1 2758 0
 4765 0036 4FF40073 		mov	r3, #512
 4766              	.LVL367:
 4767 003a 4364     		str	r3, [r0, #68]
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4768              		.loc 1 2759 0
 4769 003c 0124     		movs	r4, #1
 4770 003e EAE7     		b	.L422
 4771              	.LVL368:
 4772              	.L437:
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4773              		.loc 1 2768 0
 4774 0040 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4775 0044 012C     		cmp	r4, #1
 4776 0046 01D1     		bne	.L438
 4777 0048 0224     		movs	r4, #2
 4778 004a E4E7     		b	.L422
 4779              	.L438:
 4780 004c 1F46     		mov	r7, r3
 4781 004e 1446     		mov	r4, r2
 4782 0050 0E46     		mov	r6, r1
 4783 0052 8046     		mov	r8, r0
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4784              		.loc 1 2768 0 is_stmt 0 discriminator 2
 4785 0054 0123     		movs	r3, #1
 4786              	.LVL369:
 4787 0056 80F84030 		strb	r3, [r0, #64]
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4788              		.loc 1 2771 0 is_stmt 1 discriminator 2
 4789 005a FFF7FEFF 		bl	HAL_GetTick
 4790              	.LVL370:
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4791              		.loc 1 2773 0 discriminator 2
 4792 005e 2123     		movs	r3, #33
 4793 0060 88F84130 		strb	r3, [r8, #65]
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4794              		.loc 1 2774 0 discriminator 2
 4795 0064 4023     		movs	r3, #64
 4796 0066 88F84230 		strb	r3, [r8, #66]
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4797              		.loc 1 2775 0 discriminator 2
 4798 006a 0023     		movs	r3, #0
 4799 006c C8F84430 		str	r3, [r8, #68]
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4800              		.loc 1 2778 0 discriminator 2
 4801 0070 089B     		ldr	r3, [sp, #32]
 4802 0072 C8F82430 		str	r3, [r8, #36]
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4803              		.loc 1 2779 0 discriminator 2
 4804 0076 A8F82A50 		strh	r5, [r8, #42]	@ movhi
ARM GAS  /tmp/ccZ85PAS.s 			page 215


2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4805              		.loc 1 2780 0 discriminator 2
 4806 007a 404B     		ldr	r3, .L441
 4807 007c C8F82C30 		str	r3, [r8, #44]
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4808              		.loc 1 2781 0 discriminator 2
 4809 0080 3F4B     		ldr	r3, .L441+4
 4810 0082 C8F83430 		str	r3, [r8, #52]
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4811              		.loc 1 2783 0 discriminator 2
 4812 0086 B8F82A30 		ldrh	r3, [r8, #42]
 4813 008a 9BB2     		uxth	r3, r3
 4814 008c FF2B     		cmp	r3, #255
 4815 008e 3AD9     		bls	.L424
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4816              		.loc 1 2785 0
 4817 0090 FF23     		movs	r3, #255
 4818 0092 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4819              	.LVL371:
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4820              		.loc 1 2786 0
 4821 0096 4FF08075 		mov	r5, #16777216
 4822              	.LVL372:
 4823              	.L425:
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4824              		.loc 1 2795 0
 4825 009a 0190     		str	r0, [sp, #4]
 4826 009c 1923     		movs	r3, #25
 4827 009e 0093     		str	r3, [sp]
 4828 00a0 3B46     		mov	r3, r7
 4829 00a2 2246     		mov	r2, r4
 4830 00a4 3146     		mov	r1, r6
 4831 00a6 4046     		mov	r0, r8
 4832              	.LVL373:
 4833 00a8 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4834              	.LVL374:
 4835 00ac 90BB     		cbnz	r0, .L439
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4836              		.loc 1 2803 0
 4837 00ae D8F83830 		ldr	r3, [r8, #56]
 4838 00b2 A3B3     		cbz	r3, .L427
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4839              		.loc 1 2806 0
 4840 00b4 334A     		ldr	r2, .L441+8
 4841 00b6 DA63     		str	r2, [r3, #60]
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4842              		.loc 1 2809 0
 4843 00b8 D8F83830 		ldr	r3, [r8, #56]
 4844 00bc 324A     		ldr	r2, .L441+12
 4845 00be DA64     		str	r2, [r3, #76]
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 4846              		.loc 1 2812 0
 4847 00c0 D8F83820 		ldr	r2, [r8, #56]
 4848 00c4 0023     		movs	r3, #0
 4849 00c6 1364     		str	r3, [r2, #64]
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4850              		.loc 1 2813 0
ARM GAS  /tmp/ccZ85PAS.s 			page 216


 4851 00c8 D8F83820 		ldr	r2, [r8, #56]
 4852 00cc 1365     		str	r3, [r2, #80]
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4853              		.loc 1 2816 0
 4854 00ce D8F80020 		ldr	r2, [r8]
 4855 00d2 B8F82830 		ldrh	r3, [r8, #40]
 4856 00d6 2832     		adds	r2, r2, #40
 4857 00d8 0899     		ldr	r1, [sp, #32]
 4858 00da D8F83800 		ldr	r0, [r8, #56]
 4859 00de FFF7FEFF 		bl	HAL_DMA_Start_IT
 4860              	.LVL375:
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4861              		.loc 1 2833 0
 4862 00e2 0446     		mov	r4, r0
 4863 00e4 58B3     		cbz	r0, .L440
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4864              		.loc 1 2857 0
 4865 00e6 2023     		movs	r3, #32
 4866 00e8 88F84130 		strb	r3, [r8, #65]
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4867              		.loc 1 2858 0
 4868 00ec 0022     		movs	r2, #0
 4869 00ee 88F84220 		strb	r2, [r8, #66]
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4870              		.loc 1 2861 0
 4871 00f2 D8F84430 		ldr	r3, [r8, #68]
 4872 00f6 43F01003 		orr	r3, r3, #16
 4873 00fa C8F84430 		str	r3, [r8, #68]
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4874              		.loc 1 2864 0
 4875 00fe 88F84020 		strb	r2, [r8, #64]
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4876              		.loc 1 2866 0
 4877 0102 0124     		movs	r4, #1
 4878 0104 87E7     		b	.L422
 4879              	.LVL376:
 4880              	.L424:
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4881              		.loc 1 2790 0
 4882 0106 B8F82A30 		ldrh	r3, [r8, #42]
 4883 010a A8F82830 		strh	r3, [r8, #40]	@ movhi
 4884              	.LVL377:
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4885              		.loc 1 2791 0
 4886 010e 4FF00075 		mov	r5, #33554432
 4887 0112 C2E7     		b	.L425
 4888              	.LVL378:
 4889              	.L439:
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4890              		.loc 1 2798 0
 4891 0114 0023     		movs	r3, #0
 4892 0116 88F84030 		strb	r3, [r8, #64]
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4893              		.loc 1 2799 0
 4894 011a 0124     		movs	r4, #1
 4895 011c 7BE7     		b	.L422
 4896              	.L427:
ARM GAS  /tmp/ccZ85PAS.s 			page 217


2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4897              		.loc 1 2821 0
 4898 011e 2023     		movs	r3, #32
 4899 0120 88F84130 		strb	r3, [r8, #65]
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4900              		.loc 1 2822 0
 4901 0124 0022     		movs	r2, #0
 4902 0126 88F84220 		strb	r2, [r8, #66]
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4903              		.loc 1 2825 0
 4904 012a D8F84430 		ldr	r3, [r8, #68]
 4905 012e 43F08003 		orr	r3, r3, #128
 4906 0132 C8F84430 		str	r3, [r8, #68]
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4907              		.loc 1 2828 0
 4908 0136 88F84020 		strb	r2, [r8, #64]
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4909              		.loc 1 2830 0
 4910 013a 0124     		movs	r4, #1
 4911 013c 6BE7     		b	.L422
 4912              	.LVL379:
 4913              	.L440:
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4914              		.loc 1 2837 0
 4915 013e 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 4916 0142 0027     		movs	r7, #0
 4917 0144 0097     		str	r7, [sp]
 4918 0146 2B46     		mov	r3, r5
 4919 0148 3146     		mov	r1, r6
 4920 014a 4046     		mov	r0, r8
 4921              	.LVL380:
 4922 014c FFF7FEFF 		bl	I2C_TransferConfig
 4923              	.LVL381:
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4924              		.loc 1 2840 0
 4925 0150 B8F82A30 		ldrh	r3, [r8, #42]
 4926 0154 9BB2     		uxth	r3, r3
 4927 0156 B8F82820 		ldrh	r2, [r8, #40]
 4928 015a 9B1A     		subs	r3, r3, r2
 4929 015c 9BB2     		uxth	r3, r3
 4930 015e A8F82A30 		strh	r3, [r8, #42]	@ movhi
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4931              		.loc 1 2843 0
 4932 0162 88F84070 		strb	r7, [r8, #64]
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4933              		.loc 1 2849 0
 4934 0166 1021     		movs	r1, #16
 4935 0168 4046     		mov	r0, r8
 4936 016a FFF7FEFF 		bl	I2C_Enable_IRQ
 4937              	.LVL382:
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4938              		.loc 1 2852 0
 4939 016e D8F80020 		ldr	r2, [r8]
 4940 0172 1368     		ldr	r3, [r2]
 4941 0174 43F48043 		orr	r3, r3, #16384
 4942 0178 1360     		str	r3, [r2]
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccZ85PAS.s 			page 218


 4943              		.loc 1 2869 0
 4944 017a 4CE7     		b	.L422
 4945              	.L442:
 4946              		.align	2
 4947              	.L441:
 4948 017c 0000FFFF 		.word	-65536
 4949 0180 00000000 		.word	I2C_Master_ISR_DMA
 4950 0184 00000000 		.word	I2C_DMAMasterTransmitCplt
 4951 0188 00000000 		.word	I2C_DMAError
 4952              		.cfi_endproc
 4953              	.LFE161:
 4955              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 4956              		.align	1
 4957              		.global	HAL_I2C_Mem_Read_DMA
 4958              		.syntax unified
 4959              		.thumb
 4960              		.thumb_func
 4961              		.fpu fpv5-d16
 4963              	HAL_I2C_Mem_Read_DMA:
 4964              	.LFB162:
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4965              		.loc 1 2891 0
 4966              		.cfi_startproc
 4967              		@ args = 8, pretend = 0, frame = 0
 4968              		@ frame_needed = 0, uses_anonymous_args = 0
 4969              	.LVL383:
 4970 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4971              	.LCFI79:
 4972              		.cfi_def_cfa_offset 24
 4973              		.cfi_offset 4, -24
 4974              		.cfi_offset 5, -20
 4975              		.cfi_offset 6, -16
 4976              		.cfi_offset 7, -12
 4977              		.cfi_offset 8, -8
 4978              		.cfi_offset 14, -4
 4979 0004 82B0     		sub	sp, sp, #8
 4980              	.LCFI80:
 4981              		.cfi_def_cfa_offset 32
 4982 0006 BDF82450 		ldrh	r5, [sp, #36]
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4983              		.loc 1 2899 0
 4984 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4985 000e E4B2     		uxtb	r4, r4
 4986 0010 202C     		cmp	r4, #32
 4987 0012 04D0     		beq	.L457
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4988              		.loc 1 3016 0
 4989 0014 0224     		movs	r4, #2
 4990              	.LVL384:
 4991              	.L444:
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4992              		.loc 1 3018 0
 4993 0016 2046     		mov	r0, r4
 4994 0018 02B0     		add	sp, sp, #8
 4995              	.LCFI81:
 4996              		.cfi_remember_state
 4997              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccZ85PAS.s 			page 219


 4998              		@ sp needed
 4999 001a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5000              	.LVL385:
 5001              	.L457:
 5002              	.LCFI82:
 5003              		.cfi_restore_state
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5004              		.loc 1 2901 0
 5005 001e 089C     		ldr	r4, [sp, #32]
 5006 0020 002D     		cmp	r5, #0
 5007 0022 18BF     		it	ne
 5008 0024 002C     		cmpne	r4, #0
 5009 0026 06D0     		beq	.L458
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5010              		.loc 1 2907 0
 5011 0028 0468     		ldr	r4, [r0]
 5012 002a A469     		ldr	r4, [r4, #24]
 5013 002c 14F4004F 		tst	r4, #32768
 5014 0030 06D0     		beq	.L459
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5015              		.loc 1 2909 0
 5016 0032 0224     		movs	r4, #2
 5017 0034 EFE7     		b	.L444
 5018              	.L458:
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 5019              		.loc 1 2903 0
 5020 0036 4FF40073 		mov	r3, #512
 5021              	.LVL386:
 5022 003a 4364     		str	r3, [r0, #68]
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5023              		.loc 1 2904 0
 5024 003c 0124     		movs	r4, #1
 5025 003e EAE7     		b	.L444
 5026              	.LVL387:
 5027              	.L459:
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5028              		.loc 1 2913 0
 5029 0040 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5030 0044 012C     		cmp	r4, #1
 5031 0046 01D1     		bne	.L460
 5032 0048 0224     		movs	r4, #2
 5033 004a E4E7     		b	.L444
 5034              	.L460:
 5035 004c 1F46     		mov	r7, r3
 5036 004e 1446     		mov	r4, r2
 5037 0050 0E46     		mov	r6, r1
 5038 0052 8046     		mov	r8, r0
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5039              		.loc 1 2913 0 is_stmt 0 discriminator 2
 5040 0054 0123     		movs	r3, #1
 5041              	.LVL388:
 5042 0056 80F84030 		strb	r3, [r0, #64]
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5043              		.loc 1 2916 0 is_stmt 1 discriminator 2
 5044 005a FFF7FEFF 		bl	HAL_GetTick
 5045              	.LVL389:
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
ARM GAS  /tmp/ccZ85PAS.s 			page 220


 5046              		.loc 1 2918 0 discriminator 2
 5047 005e 2223     		movs	r3, #34
 5048 0060 88F84130 		strb	r3, [r8, #65]
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5049              		.loc 1 2919 0 discriminator 2
 5050 0064 4023     		movs	r3, #64
 5051 0066 88F84230 		strb	r3, [r8, #66]
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5052              		.loc 1 2920 0 discriminator 2
 5053 006a 0023     		movs	r3, #0
 5054 006c C8F84430 		str	r3, [r8, #68]
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5055              		.loc 1 2923 0 discriminator 2
 5056 0070 089B     		ldr	r3, [sp, #32]
 5057 0072 C8F82430 		str	r3, [r8, #36]
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5058              		.loc 1 2924 0 discriminator 2
 5059 0076 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5060              		.loc 1 2925 0 discriminator 2
 5061 007a 414B     		ldr	r3, .L463
 5062 007c C8F82C30 		str	r3, [r8, #44]
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5063              		.loc 1 2926 0 discriminator 2
 5064 0080 404B     		ldr	r3, .L463+4
 5065 0082 C8F83430 		str	r3, [r8, #52]
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5066              		.loc 1 2928 0 discriminator 2
 5067 0086 B8F82A30 		ldrh	r3, [r8, #42]
 5068 008a 9BB2     		uxth	r3, r3
 5069 008c FF2B     		cmp	r3, #255
 5070 008e 3AD9     		bls	.L446
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5071              		.loc 1 2930 0
 5072 0090 FF23     		movs	r3, #255
 5073 0092 A8F82830 		strh	r3, [r8, #40]	@ movhi
 5074              	.LVL390:
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5075              		.loc 1 2931 0
 5076 0096 4FF08075 		mov	r5, #16777216
 5077              	.LVL391:
 5078              	.L447:
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5079              		.loc 1 2940 0
 5080 009a 0190     		str	r0, [sp, #4]
 5081 009c 1923     		movs	r3, #25
 5082 009e 0093     		str	r3, [sp]
 5083 00a0 3B46     		mov	r3, r7
 5084 00a2 2246     		mov	r2, r4
 5085 00a4 3146     		mov	r1, r6
 5086 00a6 4046     		mov	r0, r8
 5087              	.LVL392:
 5088 00a8 FFF7FEFF 		bl	I2C_RequestMemoryRead
 5089              	.LVL393:
 5090 00ac 90BB     		cbnz	r0, .L461
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5091              		.loc 1 2947 0
ARM GAS  /tmp/ccZ85PAS.s 			page 221


 5092 00ae D8F83C30 		ldr	r3, [r8, #60]
 5093 00b2 A3B3     		cbz	r3, .L449
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5094              		.loc 1 2950 0
 5095 00b4 344A     		ldr	r2, .L463+8
 5096 00b6 DA63     		str	r2, [r3, #60]
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5097              		.loc 1 2953 0
 5098 00b8 D8F83C30 		ldr	r3, [r8, #60]
 5099 00bc 334A     		ldr	r2, .L463+12
 5100 00be DA64     		str	r2, [r3, #76]
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 5101              		.loc 1 2956 0
 5102 00c0 D8F83C20 		ldr	r2, [r8, #60]
 5103 00c4 0023     		movs	r3, #0
 5104 00c6 1364     		str	r3, [r2, #64]
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5105              		.loc 1 2957 0
 5106 00c8 D8F83C20 		ldr	r2, [r8, #60]
 5107 00cc 1365     		str	r3, [r2, #80]
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5108              		.loc 1 2960 0
 5109 00ce D8F80010 		ldr	r1, [r8]
 5110 00d2 B8F82830 		ldrh	r3, [r8, #40]
 5111 00d6 089A     		ldr	r2, [sp, #32]
 5112 00d8 2431     		adds	r1, r1, #36
 5113 00da D8F83C00 		ldr	r0, [r8, #60]
 5114 00de FFF7FEFF 		bl	HAL_DMA_Start_IT
 5115              	.LVL394:
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5116              		.loc 1 2977 0
 5117 00e2 0446     		mov	r4, r0
 5118 00e4 58B3     		cbz	r0, .L462
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5119              		.loc 1 3000 0
 5120 00e6 2023     		movs	r3, #32
 5121 00e8 88F84130 		strb	r3, [r8, #65]
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5122              		.loc 1 3001 0
 5123 00ec 0022     		movs	r2, #0
 5124 00ee 88F84220 		strb	r2, [r8, #66]
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5125              		.loc 1 3004 0
 5126 00f2 D8F84430 		ldr	r3, [r8, #68]
 5127 00f6 43F01003 		orr	r3, r3, #16
 5128 00fa C8F84430 		str	r3, [r8, #68]
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5129              		.loc 1 3007 0
 5130 00fe 88F84020 		strb	r2, [r8, #64]
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5131              		.loc 1 3009 0
 5132 0102 0124     		movs	r4, #1
 5133 0104 87E7     		b	.L444
 5134              	.LVL395:
 5135              	.L446:
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5136              		.loc 1 2935 0
ARM GAS  /tmp/ccZ85PAS.s 			page 222


 5137 0106 B8F82A30 		ldrh	r3, [r8, #42]
 5138 010a A8F82830 		strh	r3, [r8, #40]	@ movhi
 5139              	.LVL396:
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5140              		.loc 1 2936 0
 5141 010e 4FF00075 		mov	r5, #33554432
 5142 0112 C2E7     		b	.L447
 5143              	.LVL397:
 5144              	.L461:
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 5145              		.loc 1 2943 0
 5146 0114 0023     		movs	r3, #0
 5147 0116 88F84030 		strb	r3, [r8, #64]
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5148              		.loc 1 2944 0
 5149 011a 0124     		movs	r4, #1
 5150 011c 7BE7     		b	.L444
 5151              	.L449:
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5152              		.loc 1 2965 0
 5153 011e 2023     		movs	r3, #32
 5154 0120 88F84130 		strb	r3, [r8, #65]
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5155              		.loc 1 2966 0
 5156 0124 0022     		movs	r2, #0
 5157 0126 88F84220 		strb	r2, [r8, #66]
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5158              		.loc 1 2969 0
 5159 012a D8F84430 		ldr	r3, [r8, #68]
 5160 012e 43F08003 		orr	r3, r3, #128
 5161 0132 C8F84430 		str	r3, [r8, #68]
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5162              		.loc 1 2972 0
 5163 0136 88F84020 		strb	r2, [r8, #64]
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5164              		.loc 1 2974 0
 5165 013a 0124     		movs	r4, #1
 5166 013c 6BE7     		b	.L444
 5167              	.LVL398:
 5168              	.L462:
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5169              		.loc 1 2980 0
 5170 013e 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 5171 0142 134B     		ldr	r3, .L463+16
 5172 0144 0093     		str	r3, [sp]
 5173 0146 2B46     		mov	r3, r5
 5174 0148 3146     		mov	r1, r6
 5175 014a 4046     		mov	r0, r8
 5176              	.LVL399:
 5177 014c FFF7FEFF 		bl	I2C_TransferConfig
 5178              	.LVL400:
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5179              		.loc 1 2983 0
 5180 0150 B8F82A30 		ldrh	r3, [r8, #42]
 5181 0154 9BB2     		uxth	r3, r3
 5182 0156 B8F82820 		ldrh	r2, [r8, #40]
 5183 015a 9B1A     		subs	r3, r3, r2
ARM GAS  /tmp/ccZ85PAS.s 			page 223


 5184 015c 9BB2     		uxth	r3, r3
 5185 015e A8F82A30 		strh	r3, [r8, #42]	@ movhi
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5186              		.loc 1 2986 0
 5187 0162 0023     		movs	r3, #0
 5188 0164 88F84030 		strb	r3, [r8, #64]
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5189              		.loc 1 2992 0
 5190 0168 1021     		movs	r1, #16
 5191 016a 4046     		mov	r0, r8
 5192 016c FFF7FEFF 		bl	I2C_Enable_IRQ
 5193              	.LVL401:
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5194              		.loc 1 2995 0
 5195 0170 D8F80020 		ldr	r2, [r8]
 5196 0174 1368     		ldr	r3, [r2]
 5197 0176 43F40043 		orr	r3, r3, #32768
 5198 017a 1360     		str	r3, [r2]
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5199              		.loc 1 3012 0
 5200 017c 4BE7     		b	.L444
 5201              	.L464:
 5202 017e 00BF     		.align	2
 5203              	.L463:
 5204 0180 0000FFFF 		.word	-65536
 5205 0184 00000000 		.word	I2C_Master_ISR_DMA
 5206 0188 00000000 		.word	I2C_DMAMasterReceiveCplt
 5207 018c 00000000 		.word	I2C_DMAError
 5208 0190 00240080 		.word	-2147474432
 5209              		.cfi_endproc
 5210              	.LFE162:
 5212              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5213              		.align	1
 5214              		.global	HAL_I2C_IsDeviceReady
 5215              		.syntax unified
 5216              		.thumb
 5217              		.thumb_func
 5218              		.fpu fpv5-d16
 5220              	HAL_I2C_IsDeviceReady:
 5221              	.LFB163:
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 5222              		.loc 1 3032 0
 5223              		.cfi_startproc
 5224              		@ args = 0, pretend = 0, frame = 8
 5225              		@ frame_needed = 0, uses_anonymous_args = 0
 5226              	.LVL402:
 5227 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5228              	.LCFI83:
 5229              		.cfi_def_cfa_offset 28
 5230              		.cfi_offset 4, -28
 5231              		.cfi_offset 5, -24
 5232              		.cfi_offset 6, -20
 5233              		.cfi_offset 7, -16
 5234              		.cfi_offset 8, -12
 5235              		.cfi_offset 9, -8
 5236              		.cfi_offset 14, -4
 5237 0004 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccZ85PAS.s 			page 224


 5238              	.LCFI84:
 5239              		.cfi_def_cfa_offset 48
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5240              		.loc 1 3035 0
 5241 0006 0024     		movs	r4, #0
 5242 0008 0394     		str	r4, [sp, #12]
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5243              		.loc 1 3040 0
 5244 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5245 000e E4B2     		uxtb	r4, r4
 5246 0010 202C     		cmp	r4, #32
 5247 0012 04D0     		beq	.L483
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5248              		.loc 1 3156 0
 5249 0014 0223     		movs	r3, #2
 5250              	.LVL403:
 5251              	.L466:
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5252              		.loc 1 3158 0
 5253 0016 1846     		mov	r0, r3
 5254 0018 05B0     		add	sp, sp, #20
 5255              	.LCFI85:
 5256              		.cfi_remember_state
 5257              		.cfi_def_cfa_offset 28
 5258              		@ sp needed
 5259 001a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5260              	.LVL404:
 5261              	.L483:
 5262              	.LCFI86:
 5263              		.cfi_restore_state
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5264              		.loc 1 3042 0
 5265 001e 0468     		ldr	r4, [r0]
 5266 0020 A469     		ldr	r4, [r4, #24]
 5267 0022 14F4004F 		tst	r4, #32768
 5268 0026 01D0     		beq	.L484
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5269              		.loc 1 3044 0
 5270 0028 0223     		movs	r3, #2
 5271              	.LVL405:
 5272 002a F4E7     		b	.L466
 5273              	.LVL406:
 5274              	.L484:
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5275              		.loc 1 3048 0
 5276 002c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5277 0030 012C     		cmp	r4, #1
 5278 0032 00F09880 		beq	.L478
 5279 0036 1E46     		mov	r6, r3
 5280 0038 9046     		mov	r8, r2
 5281 003a 0F46     		mov	r7, r1
 5282 003c 0546     		mov	r5, r0
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5283              		.loc 1 3048 0 is_stmt 0 discriminator 2
 5284 003e 0123     		movs	r3, #1
 5285              	.LVL407:
 5286 0040 80F84030 		strb	r3, [r0, #64]
ARM GAS  /tmp/ccZ85PAS.s 			page 225


3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5287              		.loc 1 3050 0 is_stmt 1 discriminator 2
 5288 0044 2423     		movs	r3, #36
 5289 0046 80F84130 		strb	r3, [r0, #65]
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5290              		.loc 1 3051 0 discriminator 2
 5291 004a 0023     		movs	r3, #0
 5292 004c 4364     		str	r3, [r0, #68]
 5293              	.LVL408:
 5294              	.L475:
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5295              		.loc 1 3056 0
 5296 004e 2A68     		ldr	r2, [r5]
 5297 0050 EB68     		ldr	r3, [r5, #12]
 5298 0052 012B     		cmp	r3, #1
 5299 0054 0FD0     		beq	.L485
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5300              		.loc 1 3056 0 is_stmt 0 discriminator 2
 5301 0056 C7F30903 		ubfx	r3, r7, #0, #10
 5302 005a 43F42053 		orr	r3, r3, #10240
 5303              	.L468:
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5304              		.loc 1 3056 0 discriminator 4
 5305 005e 5360     		str	r3, [r2, #4]
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5306              		.loc 1 3060 0 is_stmt 1 discriminator 4
 5307 0060 FFF7FEFF 		bl	HAL_GetTick
 5308              	.LVL409:
 5309 0064 8146     		mov	r9, r0
 5310              	.LVL410:
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5311              		.loc 1 3062 0 discriminator 4
 5312 0066 2A68     		ldr	r2, [r5]
 5313 0068 9369     		ldr	r3, [r2, #24]
 5314 006a C3F34013 		ubfx	r3, r3, #5, #1
 5315              	.LVL411:
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5316              		.loc 1 3063 0 discriminator 4
 5317 006e 9469     		ldr	r4, [r2, #24]
 5318 0070 C4F30014 		ubfx	r4, r4, #4, #1
 5319              	.LVL412:
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5320              		.loc 1 3065 0 discriminator 4
 5321 0074 0BE0     		b	.L469
 5322              	.LVL413:
 5323              	.L485:
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5324              		.loc 1 3056 0 discriminator 1
 5325 0076 C7F30901 		ubfx	r1, r7, #0, #10
 5326 007a 3F4B     		ldr	r3, .L489
 5327 007c 0B43     		orrs	r3, r3, r1
 5328 007e EEE7     		b	.L468
 5329              	.LVL414:
 5330              	.L470:
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5331              		.loc 1 3084 0
 5332 0080 2A68     		ldr	r2, [r5]
ARM GAS  /tmp/ccZ85PAS.s 			page 226


 5333 0082 9369     		ldr	r3, [r2, #24]
 5334 0084 C3F34013 		ubfx	r3, r3, #5, #1
 5335              	.LVL415:
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5336              		.loc 1 3085 0
 5337 0088 9469     		ldr	r4, [r2, #24]
 5338 008a C4F30014 		ubfx	r4, r4, #4, #1
 5339              	.LVL416:
 5340              	.L469:
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5341              		.loc 1 3065 0
 5342 008e 83F00103 		eor	r3, r3, #1
 5343              	.LVL417:
 5344 0092 84F00104 		eor	r4, r4, #1
 5345              	.LVL418:
 5346 0096 2342     		tst	r3, r4
 5347 0098 16D0     		beq	.L486
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5348              		.loc 1 3067 0
 5349 009a B6F1FF3F 		cmp	r6, #-1
 5350 009e EFD0     		beq	.L470
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5351              		.loc 1 3069 0
 5352 00a0 FFF7FEFF 		bl	HAL_GetTick
 5353              	.LVL419:
 5354 00a4 A0EB0900 		sub	r0, r0, r9
 5355 00a8 8642     		cmp	r6, r0
 5356 00aa 01D3     		bcc	.L471
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5357              		.loc 1 3069 0 is_stmt 0 discriminator 1
 5358 00ac 002E     		cmp	r6, #0
 5359 00ae E7D1     		bne	.L470
 5360              	.L471:
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5361              		.loc 1 3072 0 is_stmt 1
 5362 00b0 2023     		movs	r3, #32
 5363 00b2 85F84130 		strb	r3, [r5, #65]
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5364              		.loc 1 3075 0
 5365 00b6 6B6C     		ldr	r3, [r5, #68]
 5366 00b8 43F02003 		orr	r3, r3, #32
 5367 00bc 6B64     		str	r3, [r5, #68]
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5368              		.loc 1 3078 0
 5369 00be 0023     		movs	r3, #0
 5370 00c0 85F84030 		strb	r3, [r5, #64]
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 5371              		.loc 1 3080 0
 5372 00c4 0123     		movs	r3, #1
 5373 00c6 A6E7     		b	.L466
 5374              	.L486:
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5375              		.loc 1 3089 0
 5376 00c8 2B68     		ldr	r3, [r5]
 5377 00ca 9B69     		ldr	r3, [r3, #24]
 5378 00cc 13F0100F 		tst	r3, #16
 5379 00d0 24D0     		beq	.L487
ARM GAS  /tmp/ccZ85PAS.s 			page 227


3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5380              		.loc 1 3111 0
 5381 00d2 CDF80090 		str	r9, [sp]
 5382 00d6 3346     		mov	r3, r6
 5383 00d8 0022     		movs	r2, #0
 5384 00da 2021     		movs	r1, #32
 5385 00dc 2846     		mov	r0, r5
 5386 00de FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5387              	.LVL420:
 5388 00e2 0028     		cmp	r0, #0
 5389 00e4 43D1     		bne	.L480
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5390              		.loc 1 3117 0
 5391 00e6 2B68     		ldr	r3, [r5]
 5392 00e8 1022     		movs	r2, #16
 5393 00ea DA61     		str	r2, [r3, #28]
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5394              		.loc 1 3120 0
 5395 00ec 2B68     		ldr	r3, [r5]
 5396 00ee 2022     		movs	r2, #32
 5397 00f0 DA61     		str	r2, [r3, #28]
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5398              		.loc 1 3124 0
 5399 00f2 039B     		ldr	r3, [sp, #12]
 5400 00f4 4345     		cmp	r3, r8
 5401 00f6 24D0     		beq	.L488
 5402              	.L474:
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     } while (I2C_Trials < Trials);
 5403              		.loc 1 3140 0
 5404 00f8 039B     		ldr	r3, [sp, #12]
 5405 00fa 0133     		adds	r3, r3, #1
 5406 00fc 0393     		str	r3, [sp, #12]
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5407              		.loc 1 3141 0
 5408 00fe 039B     		ldr	r3, [sp, #12]
 5409 0100 9845     		cmp	r8, r3
 5410 0102 A4D8     		bhi	.L475
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5411              		.loc 1 3144 0
 5412 0104 2023     		movs	r3, #32
 5413 0106 85F84130 		strb	r3, [r5, #65]
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5414              		.loc 1 3147 0
 5415 010a 6B6C     		ldr	r3, [r5, #68]
 5416 010c 43F02003 		orr	r3, r3, #32
 5417 0110 6B64     		str	r3, [r5, #68]
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5418              		.loc 1 3150 0
 5419 0112 0023     		movs	r3, #0
 5420 0114 85F84030 		strb	r3, [r5, #64]
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5421              		.loc 1 3152 0
 5422 0118 0123     		movs	r3, #1
 5423 011a 7CE7     		b	.L466
 5424              	.L487:
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5425              		.loc 1 3092 0
ARM GAS  /tmp/ccZ85PAS.s 			page 228


 5426 011c CDF80090 		str	r9, [sp]
 5427 0120 3346     		mov	r3, r6
 5428 0122 0022     		movs	r2, #0
 5429 0124 2021     		movs	r1, #32
 5430 0126 2846     		mov	r0, r5
 5431 0128 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5432              	.LVL421:
 5433 012c 0346     		mov	r3, r0
 5434 012e E0B9     		cbnz	r0, .L479
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5435              		.loc 1 3098 0
 5436 0130 2968     		ldr	r1, [r5]
 5437 0132 2022     		movs	r2, #32
 5438 0134 CA61     		str	r2, [r1, #28]
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5439              		.loc 1 3101 0
 5440 0136 85F84120 		strb	r2, [r5, #65]
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5441              		.loc 1 3104 0
 5442 013a 0022     		movs	r2, #0
 5443 013c 85F84020 		strb	r2, [r5, #64]
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5444              		.loc 1 3106 0
 5445 0140 69E7     		b	.L466
 5446              	.L488:
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5447              		.loc 1 3127 0
 5448 0142 2A68     		ldr	r2, [r5]
 5449 0144 5368     		ldr	r3, [r2, #4]
 5450 0146 43F48043 		orr	r3, r3, #16384
 5451 014a 5360     		str	r3, [r2, #4]
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5452              		.loc 1 3130 0
 5453 014c CDF80090 		str	r9, [sp]
 5454 0150 3346     		mov	r3, r6
 5455 0152 0022     		movs	r2, #0
 5456 0154 2021     		movs	r1, #32
 5457 0156 2846     		mov	r0, r5
 5458 0158 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5459              	.LVL422:
 5460 015c 48B9     		cbnz	r0, .L481
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5461              		.loc 1 3136 0
 5462 015e 2B68     		ldr	r3, [r5]
 5463 0160 2022     		movs	r2, #32
 5464 0162 DA61     		str	r2, [r3, #28]
 5465 0164 C8E7     		b	.L474
 5466              	.LVL423:
 5467              	.L478:
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5468              		.loc 1 3048 0
 5469 0166 0223     		movs	r3, #2
 5470              	.LVL424:
 5471 0168 55E7     		b	.L466
 5472              	.LVL425:
 5473              	.L479:
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
ARM GAS  /tmp/ccZ85PAS.s 			page 229


 5474              		.loc 1 3094 0
 5475 016a 0123     		movs	r3, #1
 5476 016c 53E7     		b	.L466
 5477              	.L480:
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5478              		.loc 1 3113 0
 5479 016e 0123     		movs	r3, #1
 5480 0170 51E7     		b	.L466
 5481              	.L481:
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5482              		.loc 1 3132 0
 5483 0172 0123     		movs	r3, #1
 5484 0174 4FE7     		b	.L466
 5485              	.L490:
 5486 0176 00BF     		.align	2
 5487              	.L489:
 5488 0178 00200002 		.word	33562624
 5489              		.cfi_endproc
 5490              	.LFE163:
 5492              		.section	.text.HAL_I2C_Master_Seq_Transmit_IT,"ax",%progbits
 5493              		.align	1
 5494              		.global	HAL_I2C_Master_Seq_Transmit_IT
 5495              		.syntax unified
 5496              		.thumb
 5497              		.thumb_func
 5498              		.fpu fpv5-d16
 5500              	HAL_I2C_Master_Seq_Transmit_IT:
 5501              	.LFB164:
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5502              		.loc 1 3174 0
 5503              		.cfi_startproc
 5504              		@ args = 4, pretend = 0, frame = 0
 5505              		@ frame_needed = 0, uses_anonymous_args = 0
 5506              	.LVL426:
 5507 0000 70B5     		push	{r4, r5, r6, lr}
 5508              	.LCFI87:
 5509              		.cfi_def_cfa_offset 16
 5510              		.cfi_offset 4, -16
 5511              		.cfi_offset 5, -12
 5512              		.cfi_offset 6, -8
 5513              		.cfi_offset 14, -4
 5514 0002 82B0     		sub	sp, sp, #8
 5515              	.LCFI88:
 5516              		.cfi_def_cfa_offset 24
 5517              	.LVL427:
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5518              		.loc 1 3181 0
 5519 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5520 0008 E4B2     		uxtb	r4, r4
 5521 000a 202C     		cmp	r4, #32
 5522 000c 02D0     		beq	.L502
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5523              		.loc 1 3241 0
 5524 000e 0220     		movs	r0, #2
 5525              	.LVL428:
 5526              	.L492:
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 230


 5527              		.loc 1 3243 0
 5528 0010 02B0     		add	sp, sp, #8
 5529              	.LCFI89:
 5530              		.cfi_remember_state
 5531              		.cfi_def_cfa_offset 16
 5532              		@ sp needed
 5533 0012 70BD     		pop	{r4, r5, r6, pc}
 5534              	.LVL429:
 5535              	.L502:
 5536              	.LCFI90:
 5537              		.cfi_restore_state
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5538              		.loc 1 3184 0
 5539 0014 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5540 0018 012C     		cmp	r4, #1
 5541 001a 45D0     		beq	.L498
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5542              		.loc 1 3184 0 is_stmt 0 discriminator 2
 5543 001c 0124     		movs	r4, #1
 5544 001e 80F84040 		strb	r4, [r0, #64]
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5545              		.loc 1 3186 0 is_stmt 1 discriminator 2
 5546 0022 2124     		movs	r4, #33
 5547 0024 80F84140 		strb	r4, [r0, #65]
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5548              		.loc 1 3187 0 discriminator 2
 5549 0028 1024     		movs	r4, #16
 5550 002a 80F84240 		strb	r4, [r0, #66]
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5551              		.loc 1 3188 0 discriminator 2
 5552 002e 0024     		movs	r4, #0
 5553 0030 4464     		str	r4, [r0, #68]
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5554              		.loc 1 3191 0 discriminator 2
 5555 0032 4262     		str	r2, [r0, #36]
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5556              		.loc 1 3192 0 discriminator 2
 5557 0034 4385     		strh	r3, [r0, #42]	@ movhi
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5558              		.loc 1 3193 0 discriminator 2
 5559 0036 069B     		ldr	r3, [sp, #24]
 5560              	.LVL430:
 5561 0038 C362     		str	r3, [r0, #44]
 5562              	.LVL431:
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5563              		.loc 1 3194 0 discriminator 2
 5564 003a 1C4B     		ldr	r3, .L504
 5565 003c 4363     		str	r3, [r0, #52]
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5566              		.loc 1 3197 0 discriminator 2
 5567 003e 438D     		ldrh	r3, [r0, #42]
 5568 0040 9BB2     		uxth	r3, r3
 5569 0042 FF2B     		cmp	r3, #255
 5570 0044 22D9     		bls	.L493
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5571              		.loc 1 3199 0
 5572 0046 FF23     		movs	r3, #255
ARM GAS  /tmp/ccZ85PAS.s 			page 231


 5573 0048 0385     		strh	r3, [r0, #40]	@ movhi
 5574              	.LVL432:
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5575              		.loc 1 3200 0
 5576 004a 4FF08076 		mov	r6, #16777216
 5577              	.LVL433:
 5578              	.L494:
 5579 004e 0D46     		mov	r5, r1
 5580 0050 0446     		mov	r4, r0
 5581              	.LVL434:
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5582              		.loc 1 3210 0
 5583 0052 036B     		ldr	r3, [r0, #48]
 5584 0054 112B     		cmp	r3, #17
 5585 0056 1DD0     		beq	.L503
 5586              	.L495:
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5587              		.loc 1 3217 0
 5588 0058 2046     		mov	r0, r4
 5589              	.LVL435:
 5590 005a FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5591              	.LVL436:
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5592              		.loc 1 3220 0
 5593 005e 638D     		ldrh	r3, [r4, #42]
 5594 0060 9BB2     		uxth	r3, r3
 5595 0062 FF2B     		cmp	r3, #255
 5596 0064 1ED8     		bhi	.L500
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5597              		.loc 1 3222 0
 5598 0066 E66A     		ldr	r6, [r4, #44]
 5599              	.LVL437:
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5600              		.loc 1 3176 0
 5601 0068 114B     		ldr	r3, .L504+4
 5602              	.L496:
 5603              	.LVL438:
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5604              		.loc 1 3227 0
 5605 006a 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5606 006e 0093     		str	r3, [sp]
 5607 0070 3346     		mov	r3, r6
 5608              	.LVL439:
 5609 0072 2946     		mov	r1, r5
 5610 0074 2046     		mov	r0, r4
 5611 0076 FFF7FEFF 		bl	I2C_TransferConfig
 5612              	.LVL440:
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5613              		.loc 1 3230 0
 5614 007a 0025     		movs	r5, #0
 5615 007c 84F84050 		strb	r5, [r4, #64]
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5616              		.loc 1 3235 0
 5617 0080 0121     		movs	r1, #1
 5618 0082 2046     		mov	r0, r4
 5619 0084 FFF7FEFF 		bl	I2C_Enable_IRQ
 5620              	.LVL441:
ARM GAS  /tmp/ccZ85PAS.s 			page 232


3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5621              		.loc 1 3237 0
 5622 0088 2846     		mov	r0, r5
 5623 008a C1E7     		b	.L492
 5624              	.LVL442:
 5625              	.L493:
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5626              		.loc 1 3204 0
 5627 008c 438D     		ldrh	r3, [r0, #42]
 5628 008e 0385     		strh	r3, [r0, #40]	@ movhi
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5629              		.loc 1 3205 0
 5630 0090 C66A     		ldr	r6, [r0, #44]
 5631              	.LVL443:
 5632 0092 DCE7     		b	.L494
 5633              	.L503:
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5634              		.loc 1 3210 0 discriminator 1
 5635 0094 069B     		ldr	r3, [sp, #24]
 5636 0096 B3F52A4F 		cmp	r3, #43520
 5637 009a 18BF     		it	ne
 5638 009c AA2B     		cmpne	r3, #170
 5639 009e DBD0     		beq	.L495
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5640              		.loc 1 3212 0
 5641 00a0 0023     		movs	r3, #0
 5642 00a2 E2E7     		b	.L496
 5643              	.LVL444:
 5644              	.L500:
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5645              		.loc 1 3176 0
 5646 00a4 024B     		ldr	r3, .L504+4
 5647 00a6 E0E7     		b	.L496
 5648              	.LVL445:
 5649              	.L498:
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5650              		.loc 1 3184 0
 5651 00a8 0220     		movs	r0, #2
 5652              	.LVL446:
 5653 00aa B1E7     		b	.L492
 5654              	.L505:
 5655              		.align	2
 5656              	.L504:
 5657 00ac 00000000 		.word	I2C_Master_ISR_IT
 5658 00b0 00200080 		.word	-2147475456
 5659              		.cfi_endproc
 5660              	.LFE164:
 5662              		.section	.text.HAL_I2C_Master_Seq_Transmit_DMA,"ax",%progbits
 5663              		.align	1
 5664              		.global	HAL_I2C_Master_Seq_Transmit_DMA
 5665              		.syntax unified
 5666              		.thumb
 5667              		.thumb_func
 5668              		.fpu fpv5-d16
 5670              	HAL_I2C_Master_Seq_Transmit_DMA:
 5671              	.LFB165:
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
ARM GAS  /tmp/ccZ85PAS.s 			page 233


 5672              		.loc 1 3259 0
 5673              		.cfi_startproc
 5674              		@ args = 4, pretend = 0, frame = 0
 5675              		@ frame_needed = 0, uses_anonymous_args = 0
 5676              	.LVL447:
 5677 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5678              	.LCFI91:
 5679              		.cfi_def_cfa_offset 24
 5680              		.cfi_offset 4, -24
 5681              		.cfi_offset 5, -20
 5682              		.cfi_offset 6, -16
 5683              		.cfi_offset 7, -12
 5684              		.cfi_offset 8, -8
 5685              		.cfi_offset 14, -4
 5686 0004 82B0     		sub	sp, sp, #8
 5687              	.LCFI92:
 5688              		.cfi_def_cfa_offset 32
 5689              	.LVL448:
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5690              		.loc 1 3267 0
 5691 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5692 000a E4B2     		uxtb	r4, r4
 5693 000c 202C     		cmp	r4, #32
 5694 000e 04D0     		beq	.L522
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5695              		.loc 1 3404 0
 5696 0010 0224     		movs	r4, #2
 5697              	.LVL449:
 5698              	.L507:
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5699              		.loc 1 3406 0
 5700 0012 2046     		mov	r0, r4
 5701 0014 02B0     		add	sp, sp, #8
 5702              	.LCFI93:
 5703              		.cfi_remember_state
 5704              		.cfi_def_cfa_offset 24
 5705              		@ sp needed
 5706 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5707              	.LVL450:
 5708              	.L522:
 5709              	.LCFI94:
 5710              		.cfi_restore_state
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5711              		.loc 1 3270 0
 5712 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5713 001e 012C     		cmp	r4, #1
 5714 0020 00F09980 		beq	.L517
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5715              		.loc 1 3270 0 is_stmt 0 discriminator 2
 5716 0024 0124     		movs	r4, #1
 5717 0026 80F84040 		strb	r4, [r0, #64]
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5718              		.loc 1 3272 0 is_stmt 1 discriminator 2
 5719 002a 2124     		movs	r4, #33
 5720 002c 80F84140 		strb	r4, [r0, #65]
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5721              		.loc 1 3273 0 discriminator 2
ARM GAS  /tmp/ccZ85PAS.s 			page 234


 5722 0030 1024     		movs	r4, #16
 5723 0032 80F84240 		strb	r4, [r0, #66]
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5724              		.loc 1 3274 0 discriminator 2
 5725 0036 0024     		movs	r4, #0
 5726 0038 4464     		str	r4, [r0, #68]
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5727              		.loc 1 3277 0 discriminator 2
 5728 003a 4262     		str	r2, [r0, #36]
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5729              		.loc 1 3278 0 discriminator 2
 5730 003c 4385     		strh	r3, [r0, #42]	@ movhi
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5731              		.loc 1 3279 0 discriminator 2
 5732 003e 089B     		ldr	r3, [sp, #32]
 5733              	.LVL451:
 5734 0040 C362     		str	r3, [r0, #44]
 5735              	.LVL452:
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5736              		.loc 1 3280 0 discriminator 2
 5737 0042 464B     		ldr	r3, .L525
 5738 0044 4363     		str	r3, [r0, #52]
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5739              		.loc 1 3283 0 discriminator 2
 5740 0046 438D     		ldrh	r3, [r0, #42]
 5741 0048 9BB2     		uxth	r3, r3
 5742 004a FF2B     		cmp	r3, #255
 5743 004c 39D9     		bls	.L508
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5744              		.loc 1 3285 0
 5745 004e FF23     		movs	r3, #255
 5746 0050 0385     		strh	r3, [r0, #40]	@ movhi
 5747              	.LVL453:
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5748              		.loc 1 3286 0
 5749 0052 4FF08077 		mov	r7, #16777216
 5750              	.LVL454:
 5751              	.L509:
 5752 0056 1446     		mov	r4, r2
 5753 0058 8846     		mov	r8, r1
 5754 005a 0546     		mov	r5, r0
 5755              	.LVL455:
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5756              		.loc 1 3296 0
 5757 005c 036B     		ldr	r3, [r0, #48]
 5758 005e 112B     		cmp	r3, #17
 5759 0060 33D0     		beq	.L523
 5760              	.L510:
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5761              		.loc 1 3303 0
 5762 0062 2846     		mov	r0, r5
 5763              	.LVL456:
 5764 0064 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5765              	.LVL457:
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5766              		.loc 1 3306 0
 5767 0068 6B8D     		ldrh	r3, [r5, #42]
ARM GAS  /tmp/ccZ85PAS.s 			page 235


 5768 006a 9BB2     		uxth	r3, r3
 5769 006c FF2B     		cmp	r3, #255
 5770 006e 34D8     		bhi	.L519
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5771              		.loc 1 3308 0
 5772 0070 EF6A     		ldr	r7, [r5, #44]
 5773              	.LVL458:
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5774              		.loc 1 3261 0
 5775 0072 3B4E     		ldr	r6, .L525+4
 5776              	.L511:
 5777              	.LVL459:
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5778              		.loc 1 3312 0
 5779 0074 2A8D     		ldrh	r2, [r5, #40]
 5780 0076 002A     		cmp	r2, #0
 5781 0078 5AD0     		beq	.L512
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5782              		.loc 1 3314 0
 5783 007a AB6B     		ldr	r3, [r5, #56]
 5784 007c 002B     		cmp	r3, #0
 5785 007e 2ED0     		beq	.L513
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5786              		.loc 1 3317 0
 5787 0080 384A     		ldr	r2, .L525+8
 5788 0082 DA63     		str	r2, [r3, #60]
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5789              		.loc 1 3320 0
 5790 0084 AB6B     		ldr	r3, [r5, #56]
 5791 0086 384A     		ldr	r2, .L525+12
 5792 0088 DA64     		str	r2, [r3, #76]
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 5793              		.loc 1 3323 0
 5794 008a AA6B     		ldr	r2, [r5, #56]
 5795 008c 0023     		movs	r3, #0
 5796 008e 1364     		str	r3, [r2, #64]
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5797              		.loc 1 3324 0
 5798 0090 AA6B     		ldr	r2, [r5, #56]
 5799 0092 1365     		str	r3, [r2, #80]
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5800              		.loc 1 3327 0
 5801 0094 2A68     		ldr	r2, [r5]
 5802 0096 2B8D     		ldrh	r3, [r5, #40]
 5803 0098 2832     		adds	r2, r2, #40
 5804 009a 2146     		mov	r1, r4
 5805 009c A86B     		ldr	r0, [r5, #56]
 5806 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 5807              	.LVL460:
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5808              		.loc 1 3344 0
 5809 00a2 0446     		mov	r4, r0
 5810              	.LVL461:
 5811 00a4 48B3     		cbz	r0, .L524
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5812              		.loc 1 3367 0
 5813 00a6 2023     		movs	r3, #32
ARM GAS  /tmp/ccZ85PAS.s 			page 236


 5814 00a8 85F84130 		strb	r3, [r5, #65]
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5815              		.loc 1 3368 0
 5816 00ac 0022     		movs	r2, #0
 5817 00ae 85F84220 		strb	r2, [r5, #66]
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5818              		.loc 1 3371 0
 5819 00b2 6B6C     		ldr	r3, [r5, #68]
 5820 00b4 43F01003 		orr	r3, r3, #16
 5821 00b8 6B64     		str	r3, [r5, #68]
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5822              		.loc 1 3374 0
 5823 00ba 85F84020 		strb	r2, [r5, #64]
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5824              		.loc 1 3376 0
 5825 00be 0124     		movs	r4, #1
 5826 00c0 A7E7     		b	.L507
 5827              	.LVL462:
 5828              	.L508:
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5829              		.loc 1 3290 0
 5830 00c2 438D     		ldrh	r3, [r0, #42]
 5831 00c4 0385     		strh	r3, [r0, #40]	@ movhi
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5832              		.loc 1 3291 0
 5833 00c6 C76A     		ldr	r7, [r0, #44]
 5834              	.LVL463:
 5835 00c8 C5E7     		b	.L509
 5836              	.L523:
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5837              		.loc 1 3296 0 discriminator 1
 5838 00ca 089B     		ldr	r3, [sp, #32]
 5839 00cc B3F52A4F 		cmp	r3, #43520
 5840 00d0 18BF     		it	ne
 5841 00d2 AA2B     		cmpne	r3, #170
 5842 00d4 C5D0     		beq	.L510
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5843              		.loc 1 3298 0
 5844 00d6 0026     		movs	r6, #0
 5845 00d8 CCE7     		b	.L511
 5846              	.LVL464:
 5847              	.L519:
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5848              		.loc 1 3261 0
 5849 00da 214E     		ldr	r6, .L525+4
 5850 00dc CAE7     		b	.L511
 5851              	.LVL465:
 5852              	.L513:
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5853              		.loc 1 3332 0
 5854 00de 2023     		movs	r3, #32
 5855 00e0 85F84130 		strb	r3, [r5, #65]
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5856              		.loc 1 3333 0
 5857 00e4 0022     		movs	r2, #0
 5858 00e6 85F84220 		strb	r2, [r5, #66]
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccZ85PAS.s 			page 237


 5859              		.loc 1 3336 0
 5860 00ea 6B6C     		ldr	r3, [r5, #68]
 5861 00ec 43F08003 		orr	r3, r3, #128
 5862 00f0 6B64     		str	r3, [r5, #68]
3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5863              		.loc 1 3339 0
 5864 00f2 85F84020 		strb	r2, [r5, #64]
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5865              		.loc 1 3341 0
 5866 00f6 0124     		movs	r4, #1
 5867              	.LVL466:
 5868 00f8 8BE7     		b	.L507
 5869              	.LVL467:
 5870              	.L524:
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5871              		.loc 1 3347 0
 5872 00fa 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 5873 00fe 0096     		str	r6, [sp]
 5874 0100 3B46     		mov	r3, r7
 5875 0102 4146     		mov	r1, r8
 5876 0104 2846     		mov	r0, r5
 5877              	.LVL468:
 5878 0106 FFF7FEFF 		bl	I2C_TransferConfig
 5879              	.LVL469:
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5880              		.loc 1 3350 0
 5881 010a 6B8D     		ldrh	r3, [r5, #42]
 5882 010c 9BB2     		uxth	r3, r3
 5883 010e 2A8D     		ldrh	r2, [r5, #40]
 5884 0110 9B1A     		subs	r3, r3, r2
 5885 0112 9BB2     		uxth	r3, r3
 5886 0114 6B85     		strh	r3, [r5, #42]	@ movhi
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5887              		.loc 1 3353 0
 5888 0116 0023     		movs	r3, #0
 5889 0118 85F84030 		strb	r3, [r5, #64]
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5890              		.loc 1 3359 0
 5891 011c 1021     		movs	r1, #16
 5892 011e 2846     		mov	r0, r5
 5893 0120 FFF7FEFF 		bl	I2C_Enable_IRQ
 5894              	.LVL470:
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5895              		.loc 1 3362 0
 5896 0124 2A68     		ldr	r2, [r5]
 5897 0126 1368     		ldr	r3, [r2]
 5898 0128 43F48043 		orr	r3, r3, #16384
 5899 012c 1360     		str	r3, [r2]
 5900 012e 70E7     		b	.L507
 5901              	.LVL471:
 5902              	.L512:
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5903              		.loc 1 3382 0
 5904 0130 0E4B     		ldr	r3, .L525+16
 5905 0132 6B63     		str	r3, [r5, #52]
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5906              		.loc 1 3386 0
ARM GAS  /tmp/ccZ85PAS.s 			page 238


 5907 0134 0A4B     		ldr	r3, .L525+4
 5908 0136 0093     		str	r3, [sp]
 5909 0138 4FF00073 		mov	r3, #33554432
 5910 013c D2B2     		uxtb	r2, r2
 5911 013e 4146     		mov	r1, r8
 5912 0140 2846     		mov	r0, r5
 5913 0142 FFF7FEFF 		bl	I2C_TransferConfig
 5914              	.LVL472:
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5915              		.loc 1 3389 0
 5916 0146 0024     		movs	r4, #0
 5917              	.LVL473:
 5918 0148 85F84040 		strb	r4, [r5, #64]
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5919              		.loc 1 3397 0
 5920 014c 0121     		movs	r1, #1
 5921 014e 2846     		mov	r0, r5
 5922 0150 FFF7FEFF 		bl	I2C_Enable_IRQ
 5923              	.LVL474:
 5924 0154 5DE7     		b	.L507
 5925              	.LVL475:
 5926              	.L517:
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5927              		.loc 1 3270 0
 5928 0156 0224     		movs	r4, #2
 5929 0158 5BE7     		b	.L507
 5930              	.L526:
 5931 015a 00BF     		.align	2
 5932              	.L525:
 5933 015c 00000000 		.word	I2C_Master_ISR_DMA
 5934 0160 00200080 		.word	-2147475456
 5935 0164 00000000 		.word	I2C_DMAMasterTransmitCplt
 5936 0168 00000000 		.word	I2C_DMAError
 5937 016c 00000000 		.word	I2C_Master_ISR_IT
 5938              		.cfi_endproc
 5939              	.LFE165:
 5941              		.section	.text.HAL_I2C_Master_Seq_Receive_IT,"ax",%progbits
 5942              		.align	1
 5943              		.global	HAL_I2C_Master_Seq_Receive_IT
 5944              		.syntax unified
 5945              		.thumb
 5946              		.thumb_func
 5947              		.fpu fpv5-d16
 5949              	HAL_I2C_Master_Seq_Receive_IT:
 5950              	.LFB166:
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5951              		.loc 1 3422 0
 5952              		.cfi_startproc
 5953              		@ args = 4, pretend = 0, frame = 0
 5954              		@ frame_needed = 0, uses_anonymous_args = 0
 5955              	.LVL476:
 5956 0000 70B5     		push	{r4, r5, r6, lr}
 5957              	.LCFI95:
 5958              		.cfi_def_cfa_offset 16
 5959              		.cfi_offset 4, -16
 5960              		.cfi_offset 5, -12
 5961              		.cfi_offset 6, -8
ARM GAS  /tmp/ccZ85PAS.s 			page 239


 5962              		.cfi_offset 14, -4
 5963 0002 82B0     		sub	sp, sp, #8
 5964              	.LCFI96:
 5965              		.cfi_def_cfa_offset 24
 5966              	.LVL477:
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5967              		.loc 1 3429 0
 5968 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5969 0008 E4B2     		uxtb	r4, r4
 5970 000a 202C     		cmp	r4, #32
 5971 000c 02D0     		beq	.L538
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5972              		.loc 1 3489 0
 5973 000e 0220     		movs	r0, #2
 5974              	.LVL478:
 5975              	.L528:
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5976              		.loc 1 3491 0
 5977 0010 02B0     		add	sp, sp, #8
 5978              	.LCFI97:
 5979              		.cfi_remember_state
 5980              		.cfi_def_cfa_offset 16
 5981              		@ sp needed
 5982 0012 70BD     		pop	{r4, r5, r6, pc}
 5983              	.LVL479:
 5984              	.L538:
 5985              	.LCFI98:
 5986              		.cfi_restore_state
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5987              		.loc 1 3432 0
 5988 0014 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5989 0018 012C     		cmp	r4, #1
 5990 001a 45D0     		beq	.L534
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5991              		.loc 1 3432 0 is_stmt 0 discriminator 2
 5992 001c 0124     		movs	r4, #1
 5993 001e 80F84040 		strb	r4, [r0, #64]
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5994              		.loc 1 3434 0 is_stmt 1 discriminator 2
 5995 0022 2224     		movs	r4, #34
 5996 0024 80F84140 		strb	r4, [r0, #65]
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5997              		.loc 1 3435 0 discriminator 2
 5998 0028 1024     		movs	r4, #16
 5999 002a 80F84240 		strb	r4, [r0, #66]
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6000              		.loc 1 3436 0 discriminator 2
 6001 002e 0024     		movs	r4, #0
 6002 0030 4464     		str	r4, [r0, #68]
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6003              		.loc 1 3439 0 discriminator 2
 6004 0032 4262     		str	r2, [r0, #36]
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6005              		.loc 1 3440 0 discriminator 2
 6006 0034 4385     		strh	r3, [r0, #42]	@ movhi
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 6007              		.loc 1 3441 0 discriminator 2
ARM GAS  /tmp/ccZ85PAS.s 			page 240


 6008 0036 069B     		ldr	r3, [sp, #24]
 6009              	.LVL480:
 6010 0038 C362     		str	r3, [r0, #44]
 6011              	.LVL481:
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6012              		.loc 1 3442 0 discriminator 2
 6013 003a 1C4B     		ldr	r3, .L540
 6014 003c 4363     		str	r3, [r0, #52]
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6015              		.loc 1 3445 0 discriminator 2
 6016 003e 438D     		ldrh	r3, [r0, #42]
 6017 0040 9BB2     		uxth	r3, r3
 6018 0042 FF2B     		cmp	r3, #255
 6019 0044 22D9     		bls	.L529
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6020              		.loc 1 3447 0
 6021 0046 FF23     		movs	r3, #255
 6022 0048 0385     		strh	r3, [r0, #40]	@ movhi
 6023              	.LVL482:
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6024              		.loc 1 3448 0
 6025 004a 4FF08076 		mov	r6, #16777216
 6026              	.LVL483:
 6027              	.L530:
 6028 004e 0D46     		mov	r5, r1
 6029 0050 0446     		mov	r4, r0
 6030              	.LVL484:
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6031              		.loc 1 3458 0
 6032 0052 036B     		ldr	r3, [r0, #48]
 6033 0054 122B     		cmp	r3, #18
 6034 0056 1DD0     		beq	.L539
 6035              	.L531:
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6036              		.loc 1 3465 0
 6037 0058 2046     		mov	r0, r4
 6038              	.LVL485:
 6039 005a FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6040              	.LVL486:
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6041              		.loc 1 3468 0
 6042 005e 638D     		ldrh	r3, [r4, #42]
 6043 0060 9BB2     		uxth	r3, r3
 6044 0062 FF2B     		cmp	r3, #255
 6045 0064 1ED8     		bhi	.L536
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6046              		.loc 1 3470 0
 6047 0066 E66A     		ldr	r6, [r4, #44]
 6048              	.LVL487:
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6049              		.loc 1 3424 0
 6050 0068 114B     		ldr	r3, .L540+4
 6051              	.L532:
 6052              	.LVL488:
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6053              		.loc 1 3475 0
 6054 006a 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
ARM GAS  /tmp/ccZ85PAS.s 			page 241


 6055 006e 0093     		str	r3, [sp]
 6056 0070 3346     		mov	r3, r6
 6057              	.LVL489:
 6058 0072 2946     		mov	r1, r5
 6059 0074 2046     		mov	r0, r4
 6060 0076 FFF7FEFF 		bl	I2C_TransferConfig
 6061              	.LVL490:
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6062              		.loc 1 3478 0
 6063 007a 0025     		movs	r5, #0
 6064 007c 84F84050 		strb	r5, [r4, #64]
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6065              		.loc 1 3483 0
 6066 0080 0221     		movs	r1, #2
 6067 0082 2046     		mov	r0, r4
 6068 0084 FFF7FEFF 		bl	I2C_Enable_IRQ
 6069              	.LVL491:
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6070              		.loc 1 3485 0
 6071 0088 2846     		mov	r0, r5
 6072 008a C1E7     		b	.L528
 6073              	.LVL492:
 6074              	.L529:
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6075              		.loc 1 3452 0
 6076 008c 438D     		ldrh	r3, [r0, #42]
 6077 008e 0385     		strh	r3, [r0, #40]	@ movhi
3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6078              		.loc 1 3453 0
 6079 0090 C66A     		ldr	r6, [r0, #44]
 6080              	.LVL493:
 6081 0092 DCE7     		b	.L530
 6082              	.L539:
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6083              		.loc 1 3458 0 discriminator 1
 6084 0094 069B     		ldr	r3, [sp, #24]
 6085 0096 B3F52A4F 		cmp	r3, #43520
 6086 009a 18BF     		it	ne
 6087 009c AA2B     		cmpne	r3, #170
 6088 009e DBD0     		beq	.L531
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6089              		.loc 1 3460 0
 6090 00a0 0023     		movs	r3, #0
 6091 00a2 E2E7     		b	.L532
 6092              	.LVL494:
 6093              	.L536:
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6094              		.loc 1 3424 0
 6095 00a4 024B     		ldr	r3, .L540+4
 6096 00a6 E0E7     		b	.L532
 6097              	.LVL495:
 6098              	.L534:
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6099              		.loc 1 3432 0
 6100 00a8 0220     		movs	r0, #2
 6101              	.LVL496:
 6102 00aa B1E7     		b	.L528
ARM GAS  /tmp/ccZ85PAS.s 			page 242


 6103              	.L541:
 6104              		.align	2
 6105              	.L540:
 6106 00ac 00000000 		.word	I2C_Master_ISR_IT
 6107 00b0 00240080 		.word	-2147474432
 6108              		.cfi_endproc
 6109              	.LFE166:
 6111              		.section	.text.HAL_I2C_Master_Seq_Receive_DMA,"ax",%progbits
 6112              		.align	1
 6113              		.global	HAL_I2C_Master_Seq_Receive_DMA
 6114              		.syntax unified
 6115              		.thumb
 6116              		.thumb_func
 6117              		.fpu fpv5-d16
 6119              	HAL_I2C_Master_Seq_Receive_DMA:
 6120              	.LFB167:
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 6121              		.loc 1 3507 0
 6122              		.cfi_startproc
 6123              		@ args = 4, pretend = 0, frame = 0
 6124              		@ frame_needed = 0, uses_anonymous_args = 0
 6125              	.LVL497:
 6126 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6127              	.LCFI99:
 6128              		.cfi_def_cfa_offset 24
 6129              		.cfi_offset 4, -24
 6130              		.cfi_offset 5, -20
 6131              		.cfi_offset 6, -16
 6132              		.cfi_offset 7, -12
 6133              		.cfi_offset 8, -8
 6134              		.cfi_offset 14, -4
 6135 0004 82B0     		sub	sp, sp, #8
 6136              	.LCFI100:
 6137              		.cfi_def_cfa_offset 32
 6138              	.LVL498:
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6139              		.loc 1 3515 0
 6140 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6141 000a E4B2     		uxtb	r4, r4
 6142 000c 202C     		cmp	r4, #32
 6143 000e 04D0     		beq	.L558
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6144              		.loc 1 3652 0
 6145 0010 0224     		movs	r4, #2
 6146              	.LVL499:
 6147              	.L543:
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6148              		.loc 1 3654 0
 6149 0012 2046     		mov	r0, r4
 6150 0014 02B0     		add	sp, sp, #8
 6151              	.LCFI101:
 6152              		.cfi_remember_state
 6153              		.cfi_def_cfa_offset 24
 6154              		@ sp needed
 6155 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6156              	.LVL500:
 6157              	.L558:
ARM GAS  /tmp/ccZ85PAS.s 			page 243


 6158              	.LCFI102:
 6159              		.cfi_restore_state
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6160              		.loc 1 3518 0
 6161 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6162 001e 012C     		cmp	r4, #1
 6163 0020 00F09980 		beq	.L553
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6164              		.loc 1 3518 0 is_stmt 0 discriminator 2
 6165 0024 0124     		movs	r4, #1
 6166 0026 80F84040 		strb	r4, [r0, #64]
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6167              		.loc 1 3520 0 is_stmt 1 discriminator 2
 6168 002a 2224     		movs	r4, #34
 6169 002c 80F84140 		strb	r4, [r0, #65]
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6170              		.loc 1 3521 0 discriminator 2
 6171 0030 1024     		movs	r4, #16
 6172 0032 80F84240 		strb	r4, [r0, #66]
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6173              		.loc 1 3522 0 discriminator 2
 6174 0036 0024     		movs	r4, #0
 6175 0038 4464     		str	r4, [r0, #68]
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6176              		.loc 1 3525 0 discriminator 2
 6177 003a 4262     		str	r2, [r0, #36]
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6178              		.loc 1 3526 0 discriminator 2
 6179 003c 4385     		strh	r3, [r0, #42]	@ movhi
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 6180              		.loc 1 3527 0 discriminator 2
 6181 003e 089B     		ldr	r3, [sp, #32]
 6182              	.LVL501:
 6183 0040 C362     		str	r3, [r0, #44]
 6184              	.LVL502:
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6185              		.loc 1 3528 0 discriminator 2
 6186 0042 464B     		ldr	r3, .L561
 6187 0044 4363     		str	r3, [r0, #52]
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6188              		.loc 1 3531 0 discriminator 2
 6189 0046 438D     		ldrh	r3, [r0, #42]
 6190 0048 9BB2     		uxth	r3, r3
 6191 004a FF2B     		cmp	r3, #255
 6192 004c 39D9     		bls	.L544
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6193              		.loc 1 3533 0
 6194 004e FF23     		movs	r3, #255
 6195 0050 0385     		strh	r3, [r0, #40]	@ movhi
 6196              	.LVL503:
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6197              		.loc 1 3534 0
 6198 0052 4FF08077 		mov	r7, #16777216
 6199              	.LVL504:
 6200              	.L545:
 6201 0056 1446     		mov	r4, r2
 6202 0058 8846     		mov	r8, r1
ARM GAS  /tmp/ccZ85PAS.s 			page 244


 6203 005a 0546     		mov	r5, r0
 6204              	.LVL505:
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6205              		.loc 1 3544 0
 6206 005c 036B     		ldr	r3, [r0, #48]
 6207 005e 122B     		cmp	r3, #18
 6208 0060 33D0     		beq	.L559
 6209              	.L546:
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6210              		.loc 1 3551 0
 6211 0062 2846     		mov	r0, r5
 6212              	.LVL506:
 6213 0064 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6214              	.LVL507:
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6215              		.loc 1 3554 0
 6216 0068 6B8D     		ldrh	r3, [r5, #42]
 6217 006a 9BB2     		uxth	r3, r3
 6218 006c FF2B     		cmp	r3, #255
 6219 006e 34D8     		bhi	.L555
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6220              		.loc 1 3556 0
 6221 0070 EF6A     		ldr	r7, [r5, #44]
 6222              	.LVL508:
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6223              		.loc 1 3509 0
 6224 0072 3B4E     		ldr	r6, .L561+4
 6225              	.L547:
 6226              	.LVL509:
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6227              		.loc 1 3560 0
 6228 0074 2A8D     		ldrh	r2, [r5, #40]
 6229 0076 002A     		cmp	r2, #0
 6230 0078 5AD0     		beq	.L548
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6231              		.loc 1 3562 0
 6232 007a EB6B     		ldr	r3, [r5, #60]
 6233 007c 002B     		cmp	r3, #0
 6234 007e 2ED0     		beq	.L549
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6235              		.loc 1 3565 0
 6236 0080 384A     		ldr	r2, .L561+8
 6237 0082 DA63     		str	r2, [r3, #60]
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6238              		.loc 1 3568 0
 6239 0084 EB6B     		ldr	r3, [r5, #60]
 6240 0086 384A     		ldr	r2, .L561+12
 6241 0088 DA64     		str	r2, [r3, #76]
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 6242              		.loc 1 3571 0
 6243 008a EA6B     		ldr	r2, [r5, #60]
 6244 008c 0023     		movs	r3, #0
 6245 008e 1364     		str	r3, [r2, #64]
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6246              		.loc 1 3572 0
 6247 0090 EA6B     		ldr	r2, [r5, #60]
 6248 0092 1365     		str	r3, [r2, #80]
ARM GAS  /tmp/ccZ85PAS.s 			page 245


3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6249              		.loc 1 3575 0
 6250 0094 2968     		ldr	r1, [r5]
 6251 0096 2B8D     		ldrh	r3, [r5, #40]
 6252 0098 2246     		mov	r2, r4
 6253 009a 2431     		adds	r1, r1, #36
 6254 009c E86B     		ldr	r0, [r5, #60]
 6255 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 6256              	.LVL510:
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6257              		.loc 1 3592 0
 6258 00a2 0446     		mov	r4, r0
 6259              	.LVL511:
 6260 00a4 48B3     		cbz	r0, .L560
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6261              		.loc 1 3615 0
 6262 00a6 2023     		movs	r3, #32
 6263 00a8 85F84130 		strb	r3, [r5, #65]
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6264              		.loc 1 3616 0
 6265 00ac 0022     		movs	r2, #0
 6266 00ae 85F84220 		strb	r2, [r5, #66]
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6267              		.loc 1 3619 0
 6268 00b2 6B6C     		ldr	r3, [r5, #68]
 6269 00b4 43F01003 		orr	r3, r3, #16
 6270 00b8 6B64     		str	r3, [r5, #68]
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6271              		.loc 1 3622 0
 6272 00ba 85F84020 		strb	r2, [r5, #64]
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6273              		.loc 1 3624 0
 6274 00be 0124     		movs	r4, #1
 6275 00c0 A7E7     		b	.L543
 6276              	.LVL512:
 6277              	.L544:
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6278              		.loc 1 3538 0
 6279 00c2 438D     		ldrh	r3, [r0, #42]
 6280 00c4 0385     		strh	r3, [r0, #40]	@ movhi
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6281              		.loc 1 3539 0
 6282 00c6 C76A     		ldr	r7, [r0, #44]
 6283              	.LVL513:
 6284 00c8 C5E7     		b	.L545
 6285              	.L559:
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6286              		.loc 1 3544 0 discriminator 1
 6287 00ca 089B     		ldr	r3, [sp, #32]
 6288 00cc B3F52A4F 		cmp	r3, #43520
 6289 00d0 18BF     		it	ne
 6290 00d2 AA2B     		cmpne	r3, #170
 6291 00d4 C5D0     		beq	.L546
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6292              		.loc 1 3546 0
 6293 00d6 0026     		movs	r6, #0
 6294 00d8 CCE7     		b	.L547
ARM GAS  /tmp/ccZ85PAS.s 			page 246


 6295              	.LVL514:
 6296              	.L555:
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6297              		.loc 1 3509 0
 6298 00da 214E     		ldr	r6, .L561+4
 6299 00dc CAE7     		b	.L547
 6300              	.LVL515:
 6301              	.L549:
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6302              		.loc 1 3580 0
 6303 00de 2023     		movs	r3, #32
 6304 00e0 85F84130 		strb	r3, [r5, #65]
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6305              		.loc 1 3581 0
 6306 00e4 0022     		movs	r2, #0
 6307 00e6 85F84220 		strb	r2, [r5, #66]
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6308              		.loc 1 3584 0
 6309 00ea 6B6C     		ldr	r3, [r5, #68]
 6310 00ec 43F08003 		orr	r3, r3, #128
 6311 00f0 6B64     		str	r3, [r5, #68]
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6312              		.loc 1 3587 0
 6313 00f2 85F84020 		strb	r2, [r5, #64]
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6314              		.loc 1 3589 0
 6315 00f6 0124     		movs	r4, #1
 6316              	.LVL516:
 6317 00f8 8BE7     		b	.L543
 6318              	.LVL517:
 6319              	.L560:
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6320              		.loc 1 3595 0
 6321 00fa 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 6322 00fe 0096     		str	r6, [sp]
 6323 0100 3B46     		mov	r3, r7
 6324 0102 4146     		mov	r1, r8
 6325 0104 2846     		mov	r0, r5
 6326              	.LVL518:
 6327 0106 FFF7FEFF 		bl	I2C_TransferConfig
 6328              	.LVL519:
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6329              		.loc 1 3598 0
 6330 010a 6B8D     		ldrh	r3, [r5, #42]
 6331 010c 9BB2     		uxth	r3, r3
 6332 010e 2A8D     		ldrh	r2, [r5, #40]
 6333 0110 9B1A     		subs	r3, r3, r2
 6334 0112 9BB2     		uxth	r3, r3
 6335 0114 6B85     		strh	r3, [r5, #42]	@ movhi
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6336              		.loc 1 3601 0
 6337 0116 0023     		movs	r3, #0
 6338 0118 85F84030 		strb	r3, [r5, #64]
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6339              		.loc 1 3607 0
 6340 011c 1021     		movs	r1, #16
 6341 011e 2846     		mov	r0, r5
ARM GAS  /tmp/ccZ85PAS.s 			page 247


 6342 0120 FFF7FEFF 		bl	I2C_Enable_IRQ
 6343              	.LVL520:
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6344              		.loc 1 3610 0
 6345 0124 2A68     		ldr	r2, [r5]
 6346 0126 1368     		ldr	r3, [r2]
 6347 0128 43F40043 		orr	r3, r3, #32768
 6348 012c 1360     		str	r3, [r2]
 6349 012e 70E7     		b	.L543
 6350              	.LVL521:
 6351              	.L548:
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6352              		.loc 1 3630 0
 6353 0130 0E4B     		ldr	r3, .L561+16
 6354 0132 6B63     		str	r3, [r5, #52]
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6355              		.loc 1 3634 0
 6356 0134 0A4B     		ldr	r3, .L561+4
 6357 0136 0093     		str	r3, [sp]
 6358 0138 4FF00073 		mov	r3, #33554432
 6359 013c D2B2     		uxtb	r2, r2
 6360 013e 4146     		mov	r1, r8
 6361 0140 2846     		mov	r0, r5
 6362 0142 FFF7FEFF 		bl	I2C_TransferConfig
 6363              	.LVL522:
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6364              		.loc 1 3637 0
 6365 0146 0024     		movs	r4, #0
 6366              	.LVL523:
 6367 0148 85F84040 		strb	r4, [r5, #64]
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6368              		.loc 1 3645 0
 6369 014c 0121     		movs	r1, #1
 6370 014e 2846     		mov	r0, r5
 6371 0150 FFF7FEFF 		bl	I2C_Enable_IRQ
 6372              	.LVL524:
 6373 0154 5DE7     		b	.L543
 6374              	.LVL525:
 6375              	.L553:
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6376              		.loc 1 3518 0
 6377 0156 0224     		movs	r4, #2
 6378 0158 5BE7     		b	.L543
 6379              	.L562:
 6380 015a 00BF     		.align	2
 6381              	.L561:
 6382 015c 00000000 		.word	I2C_Master_ISR_DMA
 6383 0160 00240080 		.word	-2147474432
 6384 0164 00000000 		.word	I2C_DMAMasterReceiveCplt
 6385 0168 00000000 		.word	I2C_DMAError
 6386 016c 00000000 		.word	I2C_Master_ISR_IT
 6387              		.cfi_endproc
 6388              	.LFE167:
 6390              		.section	.text.HAL_I2C_Slave_Seq_Transmit_IT,"ax",%progbits
 6391              		.align	1
 6392              		.global	HAL_I2C_Slave_Seq_Transmit_IT
 6393              		.syntax unified
ARM GAS  /tmp/ccZ85PAS.s 			page 248


 6394              		.thumb
 6395              		.thumb_func
 6396              		.fpu fpv5-d16
 6398              	HAL_I2C_Slave_Seq_Transmit_IT:
 6399              	.LFB168:
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 6400              		.loc 1 3668 0
 6401              		.cfi_startproc
 6402              		@ args = 0, pretend = 0, frame = 0
 6403              		@ frame_needed = 0, uses_anonymous_args = 0
 6404              	.LVL526:
 6405 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6406              	.LCFI103:
 6407              		.cfi_def_cfa_offset 24
 6408              		.cfi_offset 3, -24
 6409              		.cfi_offset 4, -20
 6410              		.cfi_offset 5, -16
 6411              		.cfi_offset 6, -12
 6412              		.cfi_offset 7, -8
 6413              		.cfi_offset 14, -4
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6414              		.loc 1 3672 0
 6415 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6416 0006 04F02804 		and	r4, r4, #40
 6417 000a 282C     		cmp	r4, #40
 6418 000c 01D0     		beq	.L571
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6419              		.loc 1 3748 0
 6420 000e 0120     		movs	r0, #1
 6421              	.LVL527:
 6422 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6423              	.LVL528:
 6424              	.L571:
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6425              		.loc 1 3674 0
 6426 0012 002A     		cmp	r2, #0
 6427 0014 18BF     		it	ne
 6428 0016 0029     		cmpne	r1, #0
 6429 0018 04D1     		bne	.L565
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6430              		.loc 1 3676 0
 6431 001a 4FF40073 		mov	r3, #512
 6432              	.LVL529:
 6433 001e 4364     		str	r3, [r0, #68]
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6434              		.loc 1 3677 0
 6435 0020 0120     		movs	r0, #1
 6436              	.LVL530:
 6437 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6438              	.LVL531:
 6439              	.L565:
 6440 0024 1F46     		mov	r7, r3
 6441 0026 1646     		mov	r6, r2
 6442 0028 0D46     		mov	r5, r1
 6443 002a 0446     		mov	r4, r0
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6444              		.loc 1 3681 0
ARM GAS  /tmp/ccZ85PAS.s 			page 249


 6445 002c 48F20101 		movw	r1, #32769
 6446              	.LVL532:
 6447 0030 FFF7FEFF 		bl	I2C_Disable_IRQ
 6448              	.LVL533:
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6449              		.loc 1 3684 0
 6450 0034 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6451 0038 012B     		cmp	r3, #1
 6452 003a 47D0     		beq	.L569
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6453              		.loc 1 3684 0 is_stmt 0 discriminator 2
 6454 003c 0123     		movs	r3, #1
 6455 003e 84F84030 		strb	r3, [r4, #64]
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6456              		.loc 1 3688 0 is_stmt 1 discriminator 2
 6457 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6458 0046 DBB2     		uxtb	r3, r3
 6459 0048 2A2B     		cmp	r3, #42
 6460 004a 24D0     		beq	.L572
 6461              	.L566:
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6462              		.loc 1 3714 0
 6463 004c 2923     		movs	r3, #41
 6464 004e 84F84130 		strb	r3, [r4, #65]
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6465              		.loc 1 3715 0
 6466 0052 2023     		movs	r3, #32
 6467 0054 84F84230 		strb	r3, [r4, #66]
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6468              		.loc 1 3716 0
 6469 0058 0023     		movs	r3, #0
 6470 005a 6364     		str	r3, [r4, #68]
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6471              		.loc 1 3719 0
 6472 005c 2268     		ldr	r2, [r4]
 6473 005e 5368     		ldr	r3, [r2, #4]
 6474 0060 23F40043 		bic	r3, r3, #32768
 6475 0064 5360     		str	r3, [r2, #4]
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6476              		.loc 1 3722 0
 6477 0066 6562     		str	r5, [r4, #36]
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6478              		.loc 1 3723 0
 6479 0068 6685     		strh	r6, [r4, #42]	@ movhi
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6480              		.loc 1 3724 0
 6481 006a 638D     		ldrh	r3, [r4, #42]
 6482 006c 2385     		strh	r3, [r4, #40]	@ movhi
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6483              		.loc 1 3725 0
 6484 006e E762     		str	r7, [r4, #44]
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6485              		.loc 1 3726 0
 6486 0070 174B     		ldr	r3, .L573
 6487 0072 6363     		str	r3, [r4, #52]
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6488              		.loc 1 3728 0
ARM GAS  /tmp/ccZ85PAS.s 			page 250


 6489 0074 2368     		ldr	r3, [r4]
 6490 0076 9A69     		ldr	r2, [r3, #24]
 6491 0078 12F4803F 		tst	r2, #65536
 6492 007c 01D0     		beq	.L567
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6493              		.loc 1 3732 0
 6494 007e 0822     		movs	r2, #8
 6495 0080 DA61     		str	r2, [r3, #28]
 6496              	.L567:
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6497              		.loc 1 3736 0
 6498 0082 0025     		movs	r5, #0
 6499              	.LVL534:
 6500 0084 84F84050 		strb	r5, [r4, #64]
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6501              		.loc 1 3742 0
 6502 0088 48F20101 		movw	r1, #32769
 6503 008c 2046     		mov	r0, r4
 6504 008e FFF7FEFF 		bl	I2C_Enable_IRQ
 6505              	.LVL535:
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6506              		.loc 1 3744 0
 6507 0092 2846     		mov	r0, r5
 6508 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6509              	.LVL536:
 6510              	.L572:
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6511              		.loc 1 3691 0
 6512 0096 0221     		movs	r1, #2
 6513 0098 2046     		mov	r0, r4
 6514 009a FFF7FEFF 		bl	I2C_Disable_IRQ
 6515              	.LVL537:
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6516              		.loc 1 3694 0
 6517 009e 2368     		ldr	r3, [r4]
 6518 00a0 1A68     		ldr	r2, [r3]
 6519 00a2 12F4004F 		tst	r2, #32768
 6520 00a6 D1D0     		beq	.L566
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6521              		.loc 1 3696 0
 6522 00a8 1A68     		ldr	r2, [r3]
 6523 00aa 22F40042 		bic	r2, r2, #32768
 6524 00ae 1A60     		str	r2, [r3]
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6525              		.loc 1 3698 0
 6526 00b0 E36B     		ldr	r3, [r4, #60]
 6527 00b2 002B     		cmp	r3, #0
 6528 00b4 CAD0     		beq	.L566
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6529              		.loc 1 3702 0
 6530 00b6 074A     		ldr	r2, .L573+4
 6531 00b8 1A65     		str	r2, [r3, #80]
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6532              		.loc 1 3705 0
 6533 00ba E06B     		ldr	r0, [r4, #60]
 6534 00bc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6535              	.LVL538:
ARM GAS  /tmp/ccZ85PAS.s 			page 251


 6536 00c0 0028     		cmp	r0, #0
 6537 00c2 C3D0     		beq	.L566
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6538              		.loc 1 3708 0
 6539 00c4 E06B     		ldr	r0, [r4, #60]
 6540 00c6 036D     		ldr	r3, [r0, #80]
 6541 00c8 9847     		blx	r3
 6542              	.LVL539:
 6543 00ca BFE7     		b	.L566
 6544              	.L569:
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6545              		.loc 1 3684 0
 6546 00cc 0220     		movs	r0, #2
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6547              		.loc 1 3750 0
 6548 00ce F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6549              	.LVL540:
 6550              	.L574:
 6551              		.align	2
 6552              	.L573:
 6553 00d0 00000000 		.word	I2C_Slave_ISR_IT
 6554 00d4 00000000 		.word	I2C_DMAAbort
 6555              		.cfi_endproc
 6556              	.LFE168:
 6558              		.section	.text.HAL_I2C_Slave_Seq_Transmit_DMA,"ax",%progbits
 6559              		.align	1
 6560              		.global	HAL_I2C_Slave_Seq_Transmit_DMA
 6561              		.syntax unified
 6562              		.thumb
 6563              		.thumb_func
 6564              		.fpu fpv5-d16
 6566              	HAL_I2C_Slave_Seq_Transmit_DMA:
 6567              	.LFB169:
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6568              		.loc 1 3764 0
 6569              		.cfi_startproc
 6570              		@ args = 0, pretend = 0, frame = 0
 6571              		@ frame_needed = 0, uses_anonymous_args = 0
 6572              	.LVL541:
 6573 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6574              	.LCFI104:
 6575              		.cfi_def_cfa_offset 24
 6576              		.cfi_offset 3, -24
 6577              		.cfi_offset 4, -20
 6578              		.cfi_offset 5, -16
 6579              		.cfi_offset 6, -12
 6580              		.cfi_offset 7, -8
 6581              		.cfi_offset 14, -4
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6582              		.loc 1 3770 0
 6583 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6584 0006 04F02804 		and	r4, r4, #40
 6585 000a 282C     		cmp	r4, #40
 6586 000c 02D0     		beq	.L589
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6587              		.loc 1 3928 0
 6588 000e 0125     		movs	r5, #1
ARM GAS  /tmp/ccZ85PAS.s 			page 252


 6589              	.LVL542:
 6590              	.L576:
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6591              		.loc 1 3930 0
 6592 0010 2846     		mov	r0, r5
 6593 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6594              	.LVL543:
 6595              	.L589:
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6596              		.loc 1 3772 0
 6597 0014 002A     		cmp	r2, #0
 6598 0016 18BF     		it	ne
 6599 0018 0029     		cmpne	r1, #0
 6600 001a 05D0     		beq	.L590
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6601              		.loc 1 3779 0
 6602 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6603 0020 012C     		cmp	r4, #1
 6604 0022 06D1     		bne	.L591
 6605 0024 0225     		movs	r5, #2
 6606 0026 F3E7     		b	.L576
 6607              	.L590:
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6608              		.loc 1 3774 0
 6609 0028 4FF40073 		mov	r3, #512
 6610              	.LVL544:
 6611 002c 4364     		str	r3, [r0, #68]
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6612              		.loc 1 3775 0
 6613 002e 0125     		movs	r5, #1
 6614 0030 EEE7     		b	.L576
 6615              	.LVL545:
 6616              	.L591:
 6617 0032 1F46     		mov	r7, r3
 6618 0034 1646     		mov	r6, r2
 6619 0036 0D46     		mov	r5, r1
 6620 0038 0446     		mov	r4, r0
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6621              		.loc 1 3779 0 discriminator 2
 6622 003a 0123     		movs	r3, #1
 6623              	.LVL546:
 6624 003c 80F84030 		strb	r3, [r0, #64]
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6625              		.loc 1 3782 0 discriminator 2
 6626 0040 48F20101 		movw	r1, #32769
 6627              	.LVL547:
 6628 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 6629              	.LVL548:
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6630              		.loc 1 3786 0 discriminator 2
 6631 0048 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6632 004c DBB2     		uxtb	r3, r3
 6633 004e 2A2B     		cmp	r3, #42
 6634 0050 4AD0     		beq	.L592
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6635              		.loc 1 3811 0
 6636 0052 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
ARM GAS  /tmp/ccZ85PAS.s 			page 253


 6637 0056 DBB2     		uxtb	r3, r3
 6638 0058 292B     		cmp	r3, #41
 6639 005a 61D0     		beq	.L593
 6640              	.L579:
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6641              		.loc 1 3838 0
 6642 005c 2923     		movs	r3, #41
 6643 005e 84F84130 		strb	r3, [r4, #65]
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6644              		.loc 1 3839 0
 6645 0062 2023     		movs	r3, #32
 6646 0064 84F84230 		strb	r3, [r4, #66]
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6647              		.loc 1 3840 0
 6648 0068 0023     		movs	r3, #0
 6649 006a 6364     		str	r3, [r4, #68]
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6650              		.loc 1 3843 0
 6651 006c 2268     		ldr	r2, [r4]
 6652 006e 5368     		ldr	r3, [r2, #4]
 6653 0070 23F40043 		bic	r3, r3, #32768
 6654 0074 5360     		str	r3, [r2, #4]
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6655              		.loc 1 3846 0
 6656 0076 6562     		str	r5, [r4, #36]
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6657              		.loc 1 3847 0
 6658 0078 6685     		strh	r6, [r4, #42]	@ movhi
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6659              		.loc 1 3848 0
 6660 007a 638D     		ldrh	r3, [r4, #42]
 6661 007c 2385     		strh	r3, [r4, #40]	@ movhi
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 6662              		.loc 1 3849 0
 6663 007e E762     		str	r7, [r4, #44]
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6664              		.loc 1 3850 0
 6665 0080 424B     		ldr	r3, .L595
 6666 0082 6363     		str	r3, [r4, #52]
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6667              		.loc 1 3852 0
 6668 0084 A36B     		ldr	r3, [r4, #56]
 6669 0086 002B     		cmp	r3, #0
 6670 0088 61D0     		beq	.L580
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6671              		.loc 1 3855 0
 6672 008a 414A     		ldr	r2, .L595+4
 6673 008c DA63     		str	r2, [r3, #60]
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6674              		.loc 1 3858 0
 6675 008e A36B     		ldr	r3, [r4, #56]
 6676 0090 404A     		ldr	r2, .L595+8
 6677 0092 DA64     		str	r2, [r3, #76]
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 6678              		.loc 1 3861 0
 6679 0094 A26B     		ldr	r2, [r4, #56]
 6680 0096 0023     		movs	r3, #0
ARM GAS  /tmp/ccZ85PAS.s 			page 254


 6681 0098 1364     		str	r3, [r2, #64]
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6682              		.loc 1 3862 0
 6683 009a A26B     		ldr	r2, [r4, #56]
 6684 009c 1365     		str	r3, [r2, #80]
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6685              		.loc 1 3865 0
 6686 009e 2268     		ldr	r2, [r4]
 6687 00a0 238D     		ldrh	r3, [r4, #40]
 6688 00a2 2832     		adds	r2, r2, #40
 6689 00a4 2946     		mov	r1, r5
 6690 00a6 A06B     		ldr	r0, [r4, #56]
 6691 00a8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6692              	.LVL549:
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6693              		.loc 1 3882 0
 6694 00ac 0546     		mov	r5, r0
 6695              	.LVL550:
 6696 00ae 0028     		cmp	r0, #0
 6697 00b0 5BD1     		bne	.L594
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6698              		.loc 1 3885 0
 6699 00b2 638D     		ldrh	r3, [r4, #42]
 6700 00b4 9BB2     		uxth	r3, r3
 6701 00b6 228D     		ldrh	r2, [r4, #40]
 6702 00b8 9B1A     		subs	r3, r3, r2
 6703 00ba 9BB2     		uxth	r3, r3
 6704 00bc 6385     		strh	r3, [r4, #42]	@ movhi
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6705              		.loc 1 3888 0
 6706 00be 0023     		movs	r3, #0
 6707 00c0 2385     		strh	r3, [r4, #40]	@ movhi
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6708              		.loc 1 3905 0
 6709 00c2 2368     		ldr	r3, [r4]
 6710 00c4 9A69     		ldr	r2, [r3, #24]
 6711 00c6 12F4803F 		tst	r2, #65536
 6712 00ca 5CD1     		bne	.L583
 6713              	.L584:
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6714              		.loc 1 3913 0
 6715 00cc 0023     		movs	r3, #0
 6716 00ce 84F84030 		strb	r3, [r4, #64]
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6717              		.loc 1 3919 0
 6718 00d2 4FF40041 		mov	r1, #32768
 6719 00d6 2046     		mov	r0, r4
 6720              	.LVL551:
 6721 00d8 FFF7FEFF 		bl	I2C_Enable_IRQ
 6722              	.LVL552:
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6723              		.loc 1 3922 0
 6724 00dc 2268     		ldr	r2, [r4]
 6725 00de 1368     		ldr	r3, [r2]
 6726 00e0 43F48043 		orr	r3, r3, #16384
 6727 00e4 1360     		str	r3, [r2]
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccZ85PAS.s 			page 255


 6728              		.loc 1 3924 0
 6729 00e6 93E7     		b	.L576
 6730              	.LVL553:
 6731              	.L592:
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6732              		.loc 1 3789 0
 6733 00e8 0221     		movs	r1, #2
 6734 00ea 2046     		mov	r0, r4
 6735 00ec FFF7FEFF 		bl	I2C_Disable_IRQ
 6736              	.LVL554:
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6737              		.loc 1 3791 0
 6738 00f0 2368     		ldr	r3, [r4]
 6739 00f2 1A68     		ldr	r2, [r3]
 6740 00f4 12F4004F 		tst	r2, #32768
 6741 00f8 B0D0     		beq	.L579
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6742              		.loc 1 3794 0
 6743 00fa E26B     		ldr	r2, [r4, #60]
 6744 00fc 002A     		cmp	r2, #0
 6745 00fe ADD0     		beq	.L579
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6746              		.loc 1 3796 0
 6747 0100 1A68     		ldr	r2, [r3]
 6748 0102 22F40042 		bic	r2, r2, #32768
 6749 0106 1A60     		str	r2, [r3]
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6750              		.loc 1 3800 0
 6751 0108 E36B     		ldr	r3, [r4, #60]
 6752 010a 234A     		ldr	r2, .L595+12
 6753 010c 1A65     		str	r2, [r3, #80]
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6754              		.loc 1 3803 0
 6755 010e E06B     		ldr	r0, [r4, #60]
 6756 0110 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6757              	.LVL555:
 6758 0114 0028     		cmp	r0, #0
 6759 0116 A1D0     		beq	.L579
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6760              		.loc 1 3806 0
 6761 0118 E06B     		ldr	r0, [r4, #60]
 6762 011a 036D     		ldr	r3, [r0, #80]
 6763 011c 9847     		blx	r3
 6764              	.LVL556:
 6765 011e 9DE7     		b	.L579
 6766              	.L593:
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6767              		.loc 1 3813 0
 6768 0120 2368     		ldr	r3, [r4]
 6769 0122 1A68     		ldr	r2, [r3]
 6770 0124 12F4804F 		tst	r2, #16384
 6771 0128 98D0     		beq	.L579
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6772              		.loc 1 3815 0
 6773 012a 1A68     		ldr	r2, [r3]
 6774 012c 22F48042 		bic	r2, r2, #16384
 6775 0130 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccZ85PAS.s 			page 256


3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6776              		.loc 1 3818 0
 6777 0132 A36B     		ldr	r3, [r4, #56]
 6778 0134 002B     		cmp	r3, #0
 6779 0136 91D0     		beq	.L579
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6780              		.loc 1 3822 0
 6781 0138 174A     		ldr	r2, .L595+12
 6782 013a 1A65     		str	r2, [r3, #80]
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6783              		.loc 1 3825 0
 6784 013c A06B     		ldr	r0, [r4, #56]
 6785 013e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6786              	.LVL557:
 6787 0142 0028     		cmp	r0, #0
 6788 0144 8AD0     		beq	.L579
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6789              		.loc 1 3828 0
 6790 0146 A06B     		ldr	r0, [r4, #56]
 6791 0148 036D     		ldr	r3, [r0, #80]
 6792 014a 9847     		blx	r3
 6793              	.LVL558:
 6794 014c 86E7     		b	.L579
 6795              	.L580:
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6796              		.loc 1 3870 0
 6797 014e 2823     		movs	r3, #40
 6798 0150 84F84130 		strb	r3, [r4, #65]
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6799              		.loc 1 3871 0
 6800 0154 0022     		movs	r2, #0
 6801 0156 84F84220 		strb	r2, [r4, #66]
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6802              		.loc 1 3874 0
 6803 015a 636C     		ldr	r3, [r4, #68]
 6804 015c 43F08003 		orr	r3, r3, #128
 6805 0160 6364     		str	r3, [r4, #68]
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6806              		.loc 1 3877 0
 6807 0162 84F84020 		strb	r2, [r4, #64]
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6808              		.loc 1 3879 0
 6809 0166 0125     		movs	r5, #1
 6810              	.LVL559:
 6811 0168 52E7     		b	.L576
 6812              	.LVL560:
 6813              	.L594:
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6814              		.loc 1 3893 0
 6815 016a 2823     		movs	r3, #40
 6816 016c 84F84130 		strb	r3, [r4, #65]
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6817              		.loc 1 3894 0
 6818 0170 0022     		movs	r2, #0
 6819 0172 84F84220 		strb	r2, [r4, #66]
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6820              		.loc 1 3897 0
ARM GAS  /tmp/ccZ85PAS.s 			page 257


 6821 0176 636C     		ldr	r3, [r4, #68]
 6822 0178 43F01003 		orr	r3, r3, #16
 6823 017c 6364     		str	r3, [r4, #68]
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6824              		.loc 1 3900 0
 6825 017e 84F84020 		strb	r2, [r4, #64]
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6826              		.loc 1 3902 0
 6827 0182 0125     		movs	r5, #1
 6828 0184 44E7     		b	.L576
 6829              	.L583:
3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6830              		.loc 1 3909 0
 6831 0186 0822     		movs	r2, #8
 6832 0188 DA61     		str	r2, [r3, #28]
 6833 018a 9FE7     		b	.L584
 6834              	.L596:
 6835              		.align	2
 6836              	.L595:
 6837 018c 00000000 		.word	I2C_Slave_ISR_DMA
 6838 0190 00000000 		.word	I2C_DMASlaveTransmitCplt
 6839 0194 00000000 		.word	I2C_DMAError
 6840 0198 00000000 		.word	I2C_DMAAbort
 6841              		.cfi_endproc
 6842              	.LFE169:
 6844              		.section	.text.HAL_I2C_Slave_Seq_Receive_IT,"ax",%progbits
 6845              		.align	1
 6846              		.global	HAL_I2C_Slave_Seq_Receive_IT
 6847              		.syntax unified
 6848              		.thumb
 6849              		.thumb_func
 6850              		.fpu fpv5-d16
 6852              	HAL_I2C_Slave_Seq_Receive_IT:
 6853              	.LFB170:
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 6854              		.loc 1 3944 0
 6855              		.cfi_startproc
 6856              		@ args = 0, pretend = 0, frame = 0
 6857              		@ frame_needed = 0, uses_anonymous_args = 0
 6858              	.LVL561:
 6859 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6860              	.LCFI105:
 6861              		.cfi_def_cfa_offset 24
 6862              		.cfi_offset 3, -24
 6863              		.cfi_offset 4, -20
 6864              		.cfi_offset 5, -16
 6865              		.cfi_offset 6, -12
 6866              		.cfi_offset 7, -8
 6867              		.cfi_offset 14, -4
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6868              		.loc 1 3948 0
 6869 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6870 0006 04F02804 		and	r4, r4, #40
 6871 000a 282C     		cmp	r4, #40
 6872 000c 01D0     		beq	.L605
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6873              		.loc 1 4024 0
ARM GAS  /tmp/ccZ85PAS.s 			page 258


 6874 000e 0120     		movs	r0, #1
 6875              	.LVL562:
 6876 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6877              	.LVL563:
 6878              	.L605:
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6879              		.loc 1 3950 0
 6880 0012 002A     		cmp	r2, #0
 6881 0014 18BF     		it	ne
 6882 0016 0029     		cmpne	r1, #0
 6883 0018 04D1     		bne	.L599
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6884              		.loc 1 3952 0
 6885 001a 4FF40073 		mov	r3, #512
 6886              	.LVL564:
 6887 001e 4364     		str	r3, [r0, #68]
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6888              		.loc 1 3953 0
 6889 0020 0120     		movs	r0, #1
 6890              	.LVL565:
 6891 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6892              	.LVL566:
 6893              	.L599:
 6894 0024 1F46     		mov	r7, r3
 6895 0026 1646     		mov	r6, r2
 6896 0028 0D46     		mov	r5, r1
 6897 002a 0446     		mov	r4, r0
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6898              		.loc 1 3957 0
 6899 002c 48F20201 		movw	r1, #32770
 6900              	.LVL567:
 6901 0030 FFF7FEFF 		bl	I2C_Disable_IRQ
 6902              	.LVL568:
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6903              		.loc 1 3960 0
 6904 0034 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6905 0038 012B     		cmp	r3, #1
 6906 003a 47D0     		beq	.L603
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6907              		.loc 1 3960 0 is_stmt 0 discriminator 2
 6908 003c 0123     		movs	r3, #1
 6909 003e 84F84030 		strb	r3, [r4, #64]
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6910              		.loc 1 3964 0 is_stmt 1 discriminator 2
 6911 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6912 0046 DBB2     		uxtb	r3, r3
 6913 0048 292B     		cmp	r3, #41
 6914 004a 24D0     		beq	.L606
 6915              	.L600:
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6916              		.loc 1 3990 0
 6917 004c 2A23     		movs	r3, #42
 6918 004e 84F84130 		strb	r3, [r4, #65]
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6919              		.loc 1 3991 0
 6920 0052 2023     		movs	r3, #32
 6921 0054 84F84230 		strb	r3, [r4, #66]
ARM GAS  /tmp/ccZ85PAS.s 			page 259


3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6922              		.loc 1 3992 0
 6923 0058 0023     		movs	r3, #0
 6924 005a 6364     		str	r3, [r4, #68]
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6925              		.loc 1 3995 0
 6926 005c 2268     		ldr	r2, [r4]
 6927 005e 5368     		ldr	r3, [r2, #4]
 6928 0060 23F40043 		bic	r3, r3, #32768
 6929 0064 5360     		str	r3, [r2, #4]
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6930              		.loc 1 3998 0
 6931 0066 6562     		str	r5, [r4, #36]
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6932              		.loc 1 3999 0
 6933 0068 6685     		strh	r6, [r4, #42]	@ movhi
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6934              		.loc 1 4000 0
 6935 006a 638D     		ldrh	r3, [r4, #42]
 6936 006c 2385     		strh	r3, [r4, #40]	@ movhi
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6937              		.loc 1 4001 0
 6938 006e E762     		str	r7, [r4, #44]
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6939              		.loc 1 4002 0
 6940 0070 174B     		ldr	r3, .L607
 6941 0072 6363     		str	r3, [r4, #52]
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6942              		.loc 1 4004 0
 6943 0074 2368     		ldr	r3, [r4]
 6944 0076 9A69     		ldr	r2, [r3, #24]
 6945 0078 12F4803F 		tst	r2, #65536
 6946 007c 01D1     		bne	.L601
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6947              		.loc 1 4008 0
 6948 007e 0822     		movs	r2, #8
 6949 0080 DA61     		str	r2, [r3, #28]
 6950              	.L601:
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6951              		.loc 1 4012 0
 6952 0082 0025     		movs	r5, #0
 6953              	.LVL569:
 6954 0084 84F84050 		strb	r5, [r4, #64]
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6955              		.loc 1 4018 0
 6956 0088 48F20201 		movw	r1, #32770
 6957 008c 2046     		mov	r0, r4
 6958 008e FFF7FEFF 		bl	I2C_Enable_IRQ
 6959              	.LVL570:
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6960              		.loc 1 4020 0
 6961 0092 2846     		mov	r0, r5
 6962 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6963              	.LVL571:
 6964              	.L606:
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6965              		.loc 1 3967 0
ARM GAS  /tmp/ccZ85PAS.s 			page 260


 6966 0096 0121     		movs	r1, #1
 6967 0098 2046     		mov	r0, r4
 6968 009a FFF7FEFF 		bl	I2C_Disable_IRQ
 6969              	.LVL572:
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6970              		.loc 1 3969 0
 6971 009e 2368     		ldr	r3, [r4]
 6972 00a0 1A68     		ldr	r2, [r3]
 6973 00a2 12F4804F 		tst	r2, #16384
 6974 00a6 D1D0     		beq	.L600
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6975              		.loc 1 3971 0
 6976 00a8 1A68     		ldr	r2, [r3]
 6977 00aa 22F48042 		bic	r2, r2, #16384
 6978 00ae 1A60     		str	r2, [r3]
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6979              		.loc 1 3974 0
 6980 00b0 A36B     		ldr	r3, [r4, #56]
 6981 00b2 002B     		cmp	r3, #0
 6982 00b4 CAD0     		beq	.L600
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6983              		.loc 1 3978 0
 6984 00b6 074A     		ldr	r2, .L607+4
 6985 00b8 1A65     		str	r2, [r3, #80]
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6986              		.loc 1 3981 0
 6987 00ba A06B     		ldr	r0, [r4, #56]
 6988 00bc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6989              	.LVL573:
 6990 00c0 0028     		cmp	r0, #0
 6991 00c2 C3D0     		beq	.L600
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6992              		.loc 1 3984 0
 6993 00c4 A06B     		ldr	r0, [r4, #56]
 6994 00c6 036D     		ldr	r3, [r0, #80]
 6995 00c8 9847     		blx	r3
 6996              	.LVL574:
 6997 00ca BFE7     		b	.L600
 6998              	.L603:
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6999              		.loc 1 3960 0
 7000 00cc 0220     		movs	r0, #2
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7001              		.loc 1 4026 0
 7002 00ce F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7003              	.LVL575:
 7004              	.L608:
 7005              		.align	2
 7006              	.L607:
 7007 00d0 00000000 		.word	I2C_Slave_ISR_IT
 7008 00d4 00000000 		.word	I2C_DMAAbort
 7009              		.cfi_endproc
 7010              	.LFE170:
 7012              		.section	.text.HAL_I2C_Slave_Seq_Receive_DMA,"ax",%progbits
 7013              		.align	1
 7014              		.global	HAL_I2C_Slave_Seq_Receive_DMA
 7015              		.syntax unified
ARM GAS  /tmp/ccZ85PAS.s 			page 261


 7016              		.thumb
 7017              		.thumb_func
 7018              		.fpu fpv5-d16
 7020              	HAL_I2C_Slave_Seq_Receive_DMA:
 7021              	.LFB171:
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 7022              		.loc 1 4040 0
 7023              		.cfi_startproc
 7024              		@ args = 0, pretend = 0, frame = 0
 7025              		@ frame_needed = 0, uses_anonymous_args = 0
 7026              	.LVL576:
 7027 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7028              	.LCFI106:
 7029              		.cfi_def_cfa_offset 24
 7030              		.cfi_offset 3, -24
 7031              		.cfi_offset 4, -20
 7032              		.cfi_offset 5, -16
 7033              		.cfi_offset 6, -12
 7034              		.cfi_offset 7, -8
 7035              		.cfi_offset 14, -4
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7036              		.loc 1 4046 0
 7037 0002 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 7038 0006 05F02805 		and	r5, r5, #40
 7039 000a 282D     		cmp	r5, #40
 7040 000c 02D0     		beq	.L623
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7041              		.loc 1 4204 0
 7042 000e 0125     		movs	r5, #1
 7043              	.LVL577:
 7044              	.L610:
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7045              		.loc 1 4206 0
 7046 0010 2846     		mov	r0, r5
 7047 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7048              	.LVL578:
 7049              	.L623:
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7050              		.loc 1 4048 0
 7051 0014 002A     		cmp	r2, #0
 7052 0016 18BF     		it	ne
 7053 0018 0029     		cmpne	r1, #0
 7054 001a 04D1     		bne	.L611
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 7055              		.loc 1 4050 0
 7056 001c 4FF40073 		mov	r3, #512
 7057              	.LVL579:
 7058 0020 4364     		str	r3, [r0, #68]
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7059              		.loc 1 4051 0
 7060 0022 0125     		movs	r5, #1
 7061 0024 F4E7     		b	.L610
 7062              	.LVL580:
 7063              	.L611:
 7064 0026 1F46     		mov	r7, r3
 7065 0028 1646     		mov	r6, r2
 7066 002a 0D46     		mov	r5, r1
ARM GAS  /tmp/ccZ85PAS.s 			page 262


 7067 002c 0446     		mov	r4, r0
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7068              		.loc 1 4055 0
 7069 002e 48F20201 		movw	r1, #32770
 7070              	.LVL581:
 7071 0032 FFF7FEFF 		bl	I2C_Disable_IRQ
 7072              	.LVL582:
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7073              		.loc 1 4058 0
 7074 0036 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 7075 003a 012B     		cmp	r3, #1
 7076 003c 00F0A580 		beq	.L620
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7077              		.loc 1 4058 0 is_stmt 0 discriminator 2
 7078 0040 0123     		movs	r3, #1
 7079 0042 84F84030 		strb	r3, [r4, #64]
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7080              		.loc 1 4062 0 is_stmt 1 discriminator 2
 7081 0046 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7082 004a DBB2     		uxtb	r3, r3
 7083 004c 292B     		cmp	r3, #41
 7084 004e 4AD0     		beq	.L624
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7085              		.loc 1 4087 0
 7086 0050 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7087 0054 DBB2     		uxtb	r3, r3
 7088 0056 2A2B     		cmp	r3, #42
 7089 0058 61D0     		beq	.L625
 7090              	.L613:
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 7091              		.loc 1 4114 0
 7092 005a 2A23     		movs	r3, #42
 7093 005c 84F84130 		strb	r3, [r4, #65]
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 7094              		.loc 1 4115 0
 7095 0060 2023     		movs	r3, #32
 7096 0062 84F84230 		strb	r3, [r4, #66]
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7097              		.loc 1 4116 0
 7098 0066 0023     		movs	r3, #0
 7099 0068 6364     		str	r3, [r4, #68]
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7100              		.loc 1 4119 0
 7101 006a 2268     		ldr	r2, [r4]
 7102 006c 5368     		ldr	r3, [r2, #4]
 7103 006e 23F40043 		bic	r3, r3, #32768
 7104 0072 5360     		str	r3, [r2, #4]
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 7105              		.loc 1 4122 0
 7106 0074 6562     		str	r5, [r4, #36]
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 7107              		.loc 1 4123 0
 7108 0076 6685     		strh	r6, [r4, #42]	@ movhi
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 7109              		.loc 1 4124 0
 7110 0078 638D     		ldrh	r3, [r4, #42]
 7111 007a 2385     		strh	r3, [r4, #40]	@ movhi
ARM GAS  /tmp/ccZ85PAS.s 			page 263


4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 7112              		.loc 1 4125 0
 7113 007c E762     		str	r7, [r4, #44]
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7114              		.loc 1 4126 0
 7115 007e 444B     		ldr	r3, .L627
 7116 0080 6363     		str	r3, [r4, #52]
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7117              		.loc 1 4128 0
 7118 0082 E36B     		ldr	r3, [r4, #60]
 7119 0084 002B     		cmp	r3, #0
 7120 0086 61D0     		beq	.L614
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7121              		.loc 1 4131 0
 7122 0088 424A     		ldr	r2, .L627+4
 7123 008a DA63     		str	r2, [r3, #60]
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7124              		.loc 1 4134 0
 7125 008c E36B     		ldr	r3, [r4, #60]
 7126 008e 424A     		ldr	r2, .L627+8
 7127 0090 DA64     		str	r2, [r3, #76]
4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 7128              		.loc 1 4137 0
 7129 0092 E26B     		ldr	r2, [r4, #60]
 7130 0094 0023     		movs	r3, #0
 7131 0096 1364     		str	r3, [r2, #64]
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7132              		.loc 1 4138 0
 7133 0098 E26B     		ldr	r2, [r4, #60]
 7134 009a 1365     		str	r3, [r2, #80]
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7135              		.loc 1 4141 0
 7136 009c 2168     		ldr	r1, [r4]
 7137 009e 238D     		ldrh	r3, [r4, #40]
 7138 00a0 2A46     		mov	r2, r5
 7139 00a2 2431     		adds	r1, r1, #36
 7140 00a4 E06B     		ldr	r0, [r4, #60]
 7141 00a6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7142              	.LVL583:
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7143              		.loc 1 4158 0
 7144 00aa 0546     		mov	r5, r0
 7145              	.LVL584:
 7146 00ac 0028     		cmp	r0, #0
 7147 00ae 5BD1     		bne	.L626
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7148              		.loc 1 4161 0
 7149 00b0 638D     		ldrh	r3, [r4, #42]
 7150 00b2 9BB2     		uxth	r3, r3
 7151 00b4 228D     		ldrh	r2, [r4, #40]
 7152 00b6 9B1A     		subs	r3, r3, r2
 7153 00b8 9BB2     		uxth	r3, r3
 7154 00ba 6385     		strh	r3, [r4, #42]	@ movhi
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7155              		.loc 1 4164 0
 7156 00bc 0023     		movs	r3, #0
 7157 00be 2385     		strh	r3, [r4, #40]	@ movhi
ARM GAS  /tmp/ccZ85PAS.s 			page 264


4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7158              		.loc 1 4181 0
 7159 00c0 2368     		ldr	r3, [r4]
 7160 00c2 9A69     		ldr	r2, [r3, #24]
 7161 00c4 12F4803F 		tst	r2, #65536
 7162 00c8 5CD0     		beq	.L617
 7163              	.L618:
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7164              		.loc 1 4189 0
 7165 00ca 0023     		movs	r3, #0
 7166 00cc 84F84030 		strb	r3, [r4, #64]
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7167              		.loc 1 4195 0
 7168 00d0 48F20201 		movw	r1, #32770
 7169 00d4 2046     		mov	r0, r4
 7170              	.LVL585:
 7171 00d6 FFF7FEFF 		bl	I2C_Enable_IRQ
 7172              	.LVL586:
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7173              		.loc 1 4198 0
 7174 00da 2268     		ldr	r2, [r4]
 7175 00dc 1368     		ldr	r3, [r2]
 7176 00de 43F40043 		orr	r3, r3, #32768
 7177 00e2 1360     		str	r3, [r2]
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7178              		.loc 1 4200 0
 7179 00e4 94E7     		b	.L610
 7180              	.LVL587:
 7181              	.L624:
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7182              		.loc 1 4065 0
 7183 00e6 0121     		movs	r1, #1
 7184 00e8 2046     		mov	r0, r4
 7185 00ea FFF7FEFF 		bl	I2C_Disable_IRQ
 7186              	.LVL588:
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7187              		.loc 1 4067 0
 7188 00ee 2368     		ldr	r3, [r4]
 7189 00f0 1A68     		ldr	r2, [r3]
 7190 00f2 12F4804F 		tst	r2, #16384
 7191 00f6 B0D0     		beq	.L613
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7192              		.loc 1 4070 0
 7193 00f8 A26B     		ldr	r2, [r4, #56]
 7194 00fa 002A     		cmp	r2, #0
 7195 00fc ADD0     		beq	.L613
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7196              		.loc 1 4072 0
 7197 00fe 1A68     		ldr	r2, [r3]
 7198 0100 22F48042 		bic	r2, r2, #16384
 7199 0104 1A60     		str	r2, [r3]
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7200              		.loc 1 4076 0
 7201 0106 A36B     		ldr	r3, [r4, #56]
 7202 0108 244A     		ldr	r2, .L627+12
 7203 010a 1A65     		str	r2, [r3, #80]
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
ARM GAS  /tmp/ccZ85PAS.s 			page 265


 7204              		.loc 1 4079 0
 7205 010c A06B     		ldr	r0, [r4, #56]
 7206 010e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7207              	.LVL589:
 7208 0112 0028     		cmp	r0, #0
 7209 0114 A1D0     		beq	.L613
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7210              		.loc 1 4082 0
 7211 0116 A06B     		ldr	r0, [r4, #56]
 7212 0118 036D     		ldr	r3, [r0, #80]
 7213 011a 9847     		blx	r3
 7214              	.LVL590:
 7215 011c 9DE7     		b	.L613
 7216              	.L625:
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7217              		.loc 1 4089 0
 7218 011e 2368     		ldr	r3, [r4]
 7219 0120 1A68     		ldr	r2, [r3]
 7220 0122 12F4004F 		tst	r2, #32768
 7221 0126 98D0     		beq	.L613
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7222              		.loc 1 4091 0
 7223 0128 1A68     		ldr	r2, [r3]
 7224 012a 22F40042 		bic	r2, r2, #32768
 7225 012e 1A60     		str	r2, [r3]
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7226              		.loc 1 4094 0
 7227 0130 E36B     		ldr	r3, [r4, #60]
 7228 0132 002B     		cmp	r3, #0
 7229 0134 91D0     		beq	.L613
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7230              		.loc 1 4098 0
 7231 0136 194A     		ldr	r2, .L627+12
 7232 0138 1A65     		str	r2, [r3, #80]
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 7233              		.loc 1 4101 0
 7234 013a E06B     		ldr	r0, [r4, #60]
 7235 013c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7236              	.LVL591:
 7237 0140 0028     		cmp	r0, #0
 7238 0142 8AD0     		beq	.L613
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7239              		.loc 1 4104 0
 7240 0144 E06B     		ldr	r0, [r4, #60]
 7241 0146 036D     		ldr	r3, [r0, #80]
 7242 0148 9847     		blx	r3
 7243              	.LVL592:
 7244 014a 86E7     		b	.L613
 7245              	.L614:
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7246              		.loc 1 4146 0
 7247 014c 2823     		movs	r3, #40
 7248 014e 84F84130 		strb	r3, [r4, #65]
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7249              		.loc 1 4147 0
 7250 0152 0022     		movs	r2, #0
 7251 0154 84F84220 		strb	r2, [r4, #66]
ARM GAS  /tmp/ccZ85PAS.s 			page 266


4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7252              		.loc 1 4150 0
 7253 0158 636C     		ldr	r3, [r4, #68]
 7254 015a 43F08003 		orr	r3, r3, #128
 7255 015e 6364     		str	r3, [r4, #68]
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7256              		.loc 1 4153 0
 7257 0160 84F84020 		strb	r2, [r4, #64]
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7258              		.loc 1 4155 0
 7259 0164 0125     		movs	r5, #1
 7260              	.LVL593:
 7261 0166 53E7     		b	.L610
 7262              	.LVL594:
 7263              	.L626:
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7264              		.loc 1 4169 0
 7265 0168 2823     		movs	r3, #40
 7266 016a 84F84130 		strb	r3, [r4, #65]
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7267              		.loc 1 4170 0
 7268 016e 0022     		movs	r2, #0
 7269 0170 84F84220 		strb	r2, [r4, #66]
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7270              		.loc 1 4173 0
 7271 0174 636C     		ldr	r3, [r4, #68]
 7272 0176 43F01003 		orr	r3, r3, #16
 7273 017a 6364     		str	r3, [r4, #68]
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7274              		.loc 1 4176 0
 7275 017c 84F84020 		strb	r2, [r4, #64]
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7276              		.loc 1 4178 0
 7277 0180 0125     		movs	r5, #1
 7278 0182 45E7     		b	.L610
 7279              	.L617:
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7280              		.loc 1 4185 0
 7281 0184 0822     		movs	r2, #8
 7282 0186 DA61     		str	r2, [r3, #28]
 7283 0188 9FE7     		b	.L618
 7284              	.LVL595:
 7285              	.L620:
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7286              		.loc 1 4058 0
 7287 018a 0225     		movs	r5, #2
 7288              	.LVL596:
 7289 018c 40E7     		b	.L610
 7290              	.L628:
 7291 018e 00BF     		.align	2
 7292              	.L627:
 7293 0190 00000000 		.word	I2C_Slave_ISR_DMA
 7294 0194 00000000 		.word	I2C_DMASlaveReceiveCplt
 7295 0198 00000000 		.word	I2C_DMAError
 7296 019c 00000000 		.word	I2C_DMAAbort
 7297              		.cfi_endproc
 7298              	.LFE171:
ARM GAS  /tmp/ccZ85PAS.s 			page 267


 7300              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 7301              		.align	1
 7302              		.global	HAL_I2C_EnableListen_IT
 7303              		.syntax unified
 7304              		.thumb
 7305              		.thumb_func
 7306              		.fpu fpv5-d16
 7308              	HAL_I2C_EnableListen_IT:
 7309              	.LFB172:
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 7310              		.loc 1 4215 0
 7311              		.cfi_startproc
 7312              		@ args = 0, pretend = 0, frame = 0
 7313              		@ frame_needed = 0, uses_anonymous_args = 0
 7314              	.LVL597:
 7315 0000 08B5     		push	{r3, lr}
 7316              	.LCFI107:
 7317              		.cfi_def_cfa_offset 8
 7318              		.cfi_offset 3, -8
 7319              		.cfi_offset 14, -4
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7320              		.loc 1 4216 0
 7321 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7322 0006 DBB2     		uxtb	r3, r3
 7323 0008 202B     		cmp	r3, #32
 7324 000a 01D0     		beq	.L633
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7325              		.loc 1 4228 0
 7326 000c 0220     		movs	r0, #2
 7327              	.LVL598:
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7328              		.loc 1 4230 0
 7329 000e 08BD     		pop	{r3, pc}
 7330              	.LVL599:
 7331              	.L633:
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 7332              		.loc 1 4218 0
 7333 0010 2823     		movs	r3, #40
 7334 0012 80F84130 		strb	r3, [r0, #65]
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7335              		.loc 1 4219 0
 7336 0016 044B     		ldr	r3, .L634
 7337 0018 4363     		str	r3, [r0, #52]
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7338              		.loc 1 4222 0
 7339 001a 4FF40041 		mov	r1, #32768
 7340 001e FFF7FEFF 		bl	I2C_Enable_IRQ
 7341              	.LVL600:
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7342              		.loc 1 4224 0
 7343 0022 0020     		movs	r0, #0
 7344 0024 08BD     		pop	{r3, pc}
 7345              	.L635:
 7346 0026 00BF     		.align	2
 7347              	.L634:
 7348 0028 00000000 		.word	I2C_Slave_ISR_IT
 7349              		.cfi_endproc
ARM GAS  /tmp/ccZ85PAS.s 			page 268


 7350              	.LFE172:
 7352              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 7353              		.align	1
 7354              		.global	HAL_I2C_DisableListen_IT
 7355              		.syntax unified
 7356              		.thumb
 7357              		.thumb_func
 7358              		.fpu fpv5-d16
 7360              	HAL_I2C_DisableListen_IT:
 7361              	.LFB173:
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7362              		.loc 1 4239 0
 7363              		.cfi_startproc
 7364              		@ args = 0, pretend = 0, frame = 0
 7365              		@ frame_needed = 0, uses_anonymous_args = 0
 7366              	.LVL601:
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7367              		.loc 1 4244 0
 7368 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7369 0004 DBB2     		uxtb	r3, r3
 7370 0006 282B     		cmp	r3, #40
 7371 0008 01D0     		beq	.L643
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7372              		.loc 1 4259 0
 7373 000a 0220     		movs	r0, #2
 7374              	.LVL602:
 7375 000c 7047     		bx	lr
 7376              	.LVL603:
 7377              	.L643:
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7378              		.loc 1 4239 0
 7379 000e 10B5     		push	{r4, lr}
 7380              	.LCFI108:
 7381              		.cfi_def_cfa_offset 8
 7382              		.cfi_offset 4, -8
 7383              		.cfi_offset 14, -4
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 7384              		.loc 1 4246 0
 7385 0010 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 7386              	.LVL604:
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7387              		.loc 1 4247 0
 7388 0014 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7389 0018 02F00302 		and	r2, r2, #3
 7390              	.LVL605:
 7391 001c 1343     		orrs	r3, r3, r2
 7392 001e 0363     		str	r3, [r0, #48]
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 7393              		.loc 1 4248 0
 7394 0020 2023     		movs	r3, #32
 7395 0022 80F84130 		strb	r3, [r0, #65]
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 7396              		.loc 1 4249 0
 7397 0026 0024     		movs	r4, #0
 7398 0028 80F84240 		strb	r4, [r0, #66]
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7399              		.loc 1 4250 0
ARM GAS  /tmp/ccZ85PAS.s 			page 269


 7400 002c 4463     		str	r4, [r0, #52]
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7401              		.loc 1 4253 0
 7402 002e 4FF40041 		mov	r1, #32768
 7403 0032 FFF7FEFF 		bl	I2C_Disable_IRQ
 7404              	.LVL606:
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7405              		.loc 1 4255 0
 7406 0036 2046     		mov	r0, r4
 7407 0038 10BD     		pop	{r4, pc}
 7408              		.cfi_endproc
 7409              	.LFE173:
 7411              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 7412              		.align	1
 7413              		.global	HAL_I2C_Master_Abort_IT
 7414              		.syntax unified
 7415              		.thumb
 7416              		.thumb_func
 7417              		.fpu fpv5-d16
 7419              	HAL_I2C_Master_Abort_IT:
 7420              	.LFB174:
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7421              		.loc 1 4272 0
 7422              		.cfi_startproc
 7423              		@ args = 0, pretend = 0, frame = 0
 7424              		@ frame_needed = 0, uses_anonymous_args = 0
 7425              	.LVL607:
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7426              		.loc 1 4273 0
 7427 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7428 0004 DBB2     		uxtb	r3, r3
 7429 0006 102B     		cmp	r3, #16
 7430 0008 01D0     		beq	.L654
4315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7431              		.loc 1 4315 0
 7432 000a 0120     		movs	r0, #1
 7433              	.LVL608:
 7434 000c 7047     		bx	lr
 7435              	.LVL609:
 7436              	.L654:
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7437              		.loc 1 4276 0
 7438 000e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7439 0012 012B     		cmp	r3, #1
 7440 0014 32D0     		beq	.L649
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7441              		.loc 1 4272 0 discriminator 2
 7442 0016 30B5     		push	{r4, r5, lr}
 7443              	.LCFI109:
 7444              		.cfi_def_cfa_offset 12
 7445              		.cfi_offset 4, -12
 7446              		.cfi_offset 5, -8
 7447              		.cfi_offset 14, -4
 7448 0018 83B0     		sub	sp, sp, #12
 7449              	.LCFI110:
 7450              		.cfi_def_cfa_offset 24
 7451 001a 0C46     		mov	r4, r1
ARM GAS  /tmp/ccZ85PAS.s 			page 270


 7452 001c 0546     		mov	r5, r0
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7453              		.loc 1 4276 0 discriminator 2
 7454 001e 0123     		movs	r3, #1
 7455 0020 80F84030 		strb	r3, [r0, #64]
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7456              		.loc 1 4279 0 discriminator 2
 7457 0024 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7458 0028 DBB2     		uxtb	r3, r3
 7459 002a 212B     		cmp	r3, #33
 7460 002c 1AD0     		beq	.L655
4284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7461              		.loc 1 4284 0
 7462 002e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7463 0032 DBB2     		uxtb	r3, r3
 7464 0034 222B     		cmp	r3, #34
 7465 0036 1BD0     		beq	.L656
 7466              	.LVL610:
 7467              	.L647:
4295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7468              		.loc 1 4295 0
 7469 0038 6023     		movs	r3, #96
 7470 003a 85F84130 		strb	r3, [r5, #65]
4299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7471              		.loc 1 4299 0
 7472 003e 104B     		ldr	r3, .L657
 7473 0040 0093     		str	r3, [sp]
 7474 0042 4FF00073 		mov	r3, #33554432
 7475 0046 0122     		movs	r2, #1
 7476 0048 2146     		mov	r1, r4
 7477 004a 2846     		mov	r0, r5
 7478 004c FFF7FEFF 		bl	I2C_TransferConfig
 7479              	.LVL611:
4302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7480              		.loc 1 4302 0
 7481 0050 0024     		movs	r4, #0
 7482 0052 85F84040 		strb	r4, [r5, #64]
4307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7483              		.loc 1 4307 0
 7484 0056 2021     		movs	r1, #32
 7485 0058 2846     		mov	r0, r5
 7486 005a FFF7FEFF 		bl	I2C_Enable_IRQ
 7487              	.LVL612:
4309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7488              		.loc 1 4309 0
 7489 005e 2046     		mov	r0, r4
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7490              		.loc 1 4317 0
 7491 0060 03B0     		add	sp, sp, #12
 7492              	.LCFI111:
 7493              		.cfi_remember_state
 7494              		.cfi_def_cfa_offset 12
 7495              		@ sp needed
 7496 0062 30BD     		pop	{r4, r5, pc}
 7497              	.LVL613:
 7498              	.L655:
 7499              	.LCFI112:
ARM GAS  /tmp/ccZ85PAS.s 			page 271


 7500              		.cfi_restore_state
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7501              		.loc 1 4281 0
 7502 0064 0121     		movs	r1, #1
 7503              	.LVL614:
 7504 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
 7505              	.LVL615:
4282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7506              		.loc 1 4282 0
 7507 006a 1123     		movs	r3, #17
 7508 006c 2B63     		str	r3, [r5, #48]
 7509 006e E3E7     		b	.L647
 7510              	.LVL616:
 7511              	.L656:
4286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7512              		.loc 1 4286 0
 7513 0070 0221     		movs	r1, #2
 7514              	.LVL617:
 7515 0072 FFF7FEFF 		bl	I2C_Disable_IRQ
 7516              	.LVL618:
4287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7517              		.loc 1 4287 0
 7518 0076 1223     		movs	r3, #18
 7519 0078 2B63     		str	r3, [r5, #48]
 7520 007a DDE7     		b	.L647
 7521              	.LVL619:
 7522              	.L649:
 7523              	.LCFI113:
 7524              		.cfi_def_cfa_offset 0
 7525              		.cfi_restore 4
 7526              		.cfi_restore 5
 7527              		.cfi_restore 14
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7528              		.loc 1 4276 0
 7529 007c 0220     		movs	r0, #2
 7530              	.LVL620:
 7531 007e 7047     		bx	lr
 7532              	.L658:
 7533              		.align	2
 7534              	.L657:
 7535 0080 00400080 		.word	-2147467264
 7536              		.cfi_endproc
 7537              	.LFE174:
 7539              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 7540              		.align	1
 7541              		.global	HAL_I2C_EV_IRQHandler
 7542              		.syntax unified
 7543              		.thumb
 7544              		.thumb_func
 7545              		.fpu fpv5-d16
 7547              	HAL_I2C_EV_IRQHandler:
 7548              	.LFB175:
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
 7549              		.loc 1 4334 0
 7550              		.cfi_startproc
 7551              		@ args = 0, pretend = 0, frame = 0
 7552              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccZ85PAS.s 			page 272


 7553              	.LVL621:
 7554 0000 08B5     		push	{r3, lr}
 7555              	.LCFI114:
 7556              		.cfi_def_cfa_offset 8
 7557              		.cfi_offset 3, -8
 7558              		.cfi_offset 14, -4
4336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 7559              		.loc 1 4336 0
 7560 0002 0368     		ldr	r3, [r0]
 7561 0004 9969     		ldr	r1, [r3, #24]
 7562              	.LVL622:
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7563              		.loc 1 4337 0
 7564 0006 1A68     		ldr	r2, [r3]
 7565              	.LVL623:
4340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7566              		.loc 1 4340 0
 7567 0008 436B     		ldr	r3, [r0, #52]
 7568 000a 03B1     		cbz	r3, .L659
4342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7569              		.loc 1 4342 0
 7570 000c 9847     		blx	r3
 7571              	.LVL624:
 7572              	.L659:
 7573 000e 08BD     		pop	{r3, pc}
 7574              		.cfi_endproc
 7575              	.LFE175:
 7577              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 7578              		.align	1
 7579              		.weak	HAL_I2C_MasterTxCpltCallback
 7580              		.syntax unified
 7581              		.thumb
 7582              		.thumb_func
 7583              		.fpu fpv5-d16
 7585              	HAL_I2C_MasterTxCpltCallback:
 7586              	.LFB177:
4402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7587              		.loc 1 4402 0
 7588              		.cfi_startproc
 7589              		@ args = 0, pretend = 0, frame = 0
 7590              		@ frame_needed = 0, uses_anonymous_args = 0
 7591              		@ link register save eliminated.
 7592              	.LVL625:
 7593 0000 7047     		bx	lr
 7594              		.cfi_endproc
 7595              	.LFE177:
 7597              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 7598              		.align	1
 7599              		.weak	HAL_I2C_MasterRxCpltCallback
 7600              		.syntax unified
 7601              		.thumb
 7602              		.thumb_func
 7603              		.fpu fpv5-d16
 7605              	HAL_I2C_MasterRxCpltCallback:
 7606              	.LFB178:
4418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7607              		.loc 1 4418 0
ARM GAS  /tmp/ccZ85PAS.s 			page 273


 7608              		.cfi_startproc
 7609              		@ args = 0, pretend = 0, frame = 0
 7610              		@ frame_needed = 0, uses_anonymous_args = 0
 7611              		@ link register save eliminated.
 7612              	.LVL626:
 7613 0000 7047     		bx	lr
 7614              		.cfi_endproc
 7615              	.LFE178:
 7617              		.section	.text.I2C_ITMasterSeqCplt,"ax",%progbits
 7618              		.align	1
 7619              		.syntax unified
 7620              		.thumb
 7621              		.thumb_func
 7622              		.fpu fpv5-d16
 7624              	I2C_ITMasterSeqCplt:
 7625              	.LFB197:
5376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7626              		.loc 1 5376 0
 7627              		.cfi_startproc
 7628              		@ args = 0, pretend = 0, frame = 0
 7629              		@ frame_needed = 0, uses_anonymous_args = 0
 7630              	.LVL627:
5376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7631              		.loc 1 5376 0
 7632 0000 38B5     		push	{r3, r4, r5, lr}
 7633              	.LCFI115:
 7634              		.cfi_def_cfa_offset 16
 7635              		.cfi_offset 3, -16
 7636              		.cfi_offset 4, -12
 7637              		.cfi_offset 5, -8
 7638              		.cfi_offset 14, -4
 7639 0002 0446     		mov	r4, r0
5378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7640              		.loc 1 5378 0
 7641 0004 0023     		movs	r3, #0
 7642 0006 80F84230 		strb	r3, [r0, #66]
5382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7643              		.loc 1 5382 0
 7644 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7645 000e DBB2     		uxtb	r3, r3
 7646 0010 212B     		cmp	r3, #33
 7647 0012 0FD0     		beq	.L668
5404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7648              		.loc 1 5404 0
 7649 0014 2023     		movs	r3, #32
 7650 0016 80F84130 		strb	r3, [r0, #65]
5405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7651              		.loc 1 5405 0
 7652 001a 1223     		movs	r3, #18
 7653 001c 0363     		str	r3, [r0, #48]
5406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7654              		.loc 1 5406 0
 7655 001e 0025     		movs	r5, #0
 7656 0020 4563     		str	r5, [r0, #52]
5409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7657              		.loc 1 5409 0
 7658 0022 0221     		movs	r1, #2
ARM GAS  /tmp/ccZ85PAS.s 			page 274


 7659 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
 7660              	.LVL628:
5412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7661              		.loc 1 5412 0
 7662 0028 84F84050 		strb	r5, [r4, #64]
5418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7663              		.loc 1 5418 0
 7664 002c 2046     		mov	r0, r4
 7665 002e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7666              	.LVL629:
 7667 0032 38BD     		pop	{r3, r4, r5, pc}
 7668              	.LVL630:
 7669              	.L668:
5384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7670              		.loc 1 5384 0
 7671 0034 2023     		movs	r3, #32
 7672 0036 80F84130 		strb	r3, [r0, #65]
5385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7673              		.loc 1 5385 0
 7674 003a 1123     		movs	r3, #17
 7675 003c 0363     		str	r3, [r0, #48]
5386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7676              		.loc 1 5386 0
 7677 003e 0025     		movs	r5, #0
 7678 0040 4563     		str	r5, [r0, #52]
5389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7679              		.loc 1 5389 0
 7680 0042 0121     		movs	r1, #1
 7681 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 7682              	.LVL631:
5392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7683              		.loc 1 5392 0
 7684 0048 84F84050 		strb	r5, [r4, #64]
5398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7685              		.loc 1 5398 0
 7686 004c 2046     		mov	r0, r4
 7687 004e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7688              	.LVL632:
 7689 0052 38BD     		pop	{r3, r4, r5, pc}
 7690              		.cfi_endproc
 7691              	.LFE197:
 7693              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 7694              		.align	1
 7695              		.weak	HAL_I2C_SlaveTxCpltCallback
 7696              		.syntax unified
 7697              		.thumb
 7698              		.thumb_func
 7699              		.fpu fpv5-d16
 7701              	HAL_I2C_SlaveTxCpltCallback:
 7702              	.LFB179:
4433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7703              		.loc 1 4433 0
 7704              		.cfi_startproc
 7705              		@ args = 0, pretend = 0, frame = 0
 7706              		@ frame_needed = 0, uses_anonymous_args = 0
 7707              		@ link register save eliminated.
 7708              	.LVL633:
ARM GAS  /tmp/ccZ85PAS.s 			page 275


 7709 0000 7047     		bx	lr
 7710              		.cfi_endproc
 7711              	.LFE179:
 7713              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 7714              		.align	1
 7715              		.weak	HAL_I2C_SlaveRxCpltCallback
 7716              		.syntax unified
 7717              		.thumb
 7718              		.thumb_func
 7719              		.fpu fpv5-d16
 7721              	HAL_I2C_SlaveRxCpltCallback:
 7722              	.LFB180:
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7723              		.loc 1 4449 0
 7724              		.cfi_startproc
 7725              		@ args = 0, pretend = 0, frame = 0
 7726              		@ frame_needed = 0, uses_anonymous_args = 0
 7727              		@ link register save eliminated.
 7728              	.LVL634:
 7729 0000 7047     		bx	lr
 7730              		.cfi_endproc
 7731              	.LFE180:
 7733              		.section	.text.I2C_ITSlaveSeqCplt,"ax",%progbits
 7734              		.align	1
 7735              		.syntax unified
 7736              		.thumb
 7737              		.thumb_func
 7738              		.fpu fpv5-d16
 7740              	I2C_ITSlaveSeqCplt:
 7741              	.LFB198:
5429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 7742              		.loc 1 5429 0
 7743              		.cfi_startproc
 7744              		@ args = 0, pretend = 0, frame = 0
 7745              		@ frame_needed = 0, uses_anonymous_args = 0
 7746              	.LVL635:
5429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 7747              		.loc 1 5429 0
 7748 0000 10B5     		push	{r4, lr}
 7749              	.LCFI116:
 7750              		.cfi_def_cfa_offset 8
 7751              		.cfi_offset 4, -8
 7752              		.cfi_offset 14, -4
 7753 0002 0446     		mov	r4, r0
5430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7754              		.loc 1 5430 0
 7755 0004 0368     		ldr	r3, [r0]
 7756 0006 1A68     		ldr	r2, [r3]
 7757              	.LVL636:
5433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7758              		.loc 1 5433 0
 7759 0008 0021     		movs	r1, #0
 7760 000a 80F84210 		strb	r1, [r0, #66]
5436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7761              		.loc 1 5436 0
 7762 000e 12F4804F 		tst	r2, #16384
 7763 0012 0ED0     		beq	.L672
ARM GAS  /tmp/ccZ85PAS.s 			page 276


5439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7764              		.loc 1 5439 0
 7765 0014 1A68     		ldr	r2, [r3]
 7766              	.LVL637:
 7767 0016 22F48042 		bic	r2, r2, #16384
 7768 001a 1A60     		str	r2, [r3]
 7769              	.L673:
5451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7770              		.loc 1 5451 0
 7771 001c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7772 0020 DBB2     		uxtb	r3, r3
 7773 0022 292B     		cmp	r3, #41
 7774 0024 0DD0     		beq	.L677
5471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7775              		.loc 1 5471 0
 7776 0026 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7777 002a DBB2     		uxtb	r3, r3
 7778 002c 2A2B     		cmp	r3, #42
 7779 002e 18D0     		beq	.L678
 7780              	.LVL638:
 7781              	.L671:
 7782 0030 10BD     		pop	{r4, pc}
 7783              	.LVL639:
 7784              	.L672:
5441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7785              		.loc 1 5441 0
 7786 0032 12F4004F 		tst	r2, #32768
 7787 0036 F1D0     		beq	.L673
5444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7788              		.loc 1 5444 0
 7789 0038 1A68     		ldr	r2, [r3]
 7790              	.LVL640:
 7791 003a 22F40042 		bic	r2, r2, #32768
 7792 003e 1A60     		str	r2, [r3]
 7793 0040 ECE7     		b	.L673
 7794              	.L677:
5454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 7795              		.loc 1 5454 0
 7796 0042 2823     		movs	r3, #40
 7797 0044 84F84130 		strb	r3, [r4, #65]
5455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7798              		.loc 1 5455 0
 7799 0048 2123     		movs	r3, #33
 7800 004a 2363     		str	r3, [r4, #48]
5458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7801              		.loc 1 5458 0
 7802 004c 0121     		movs	r1, #1
 7803 004e 2046     		mov	r0, r4
 7804              	.LVL641:
 7805 0050 FFF7FEFF 		bl	I2C_Disable_IRQ
 7806              	.LVL642:
5461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7807              		.loc 1 5461 0
 7808 0054 0023     		movs	r3, #0
 7809 0056 84F84030 		strb	r3, [r4, #64]
5467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7810              		.loc 1 5467 0
ARM GAS  /tmp/ccZ85PAS.s 			page 277


 7811 005a 2046     		mov	r0, r4
 7812 005c FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7813              	.LVL643:
 7814 0060 10BD     		pop	{r4, pc}
 7815              	.LVL644:
 7816              	.L678:
5474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 7817              		.loc 1 5474 0
 7818 0062 2823     		movs	r3, #40
 7819 0064 84F84130 		strb	r3, [r4, #65]
5475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7820              		.loc 1 5475 0
 7821 0068 2223     		movs	r3, #34
 7822 006a 2363     		str	r3, [r4, #48]
5478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7823              		.loc 1 5478 0
 7824 006c 0221     		movs	r1, #2
 7825 006e 2046     		mov	r0, r4
 7826              	.LVL645:
 7827 0070 FFF7FEFF 		bl	I2C_Disable_IRQ
 7828              	.LVL646:
5481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7829              		.loc 1 5481 0
 7830 0074 0023     		movs	r3, #0
 7831 0076 84F84030 		strb	r3, [r4, #64]
5487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7832              		.loc 1 5487 0
 7833 007a 2046     		mov	r0, r4
 7834 007c FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7835              	.LVL647:
5494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7836              		.loc 1 5494 0
 7837 0080 D6E7     		b	.L671
 7838              		.cfi_endproc
 7839              	.LFE198:
 7841              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
 7842              		.align	1
 7843              		.syntax unified
 7844              		.thumb
 7845              		.thumb_func
 7846              		.fpu fpv5-d16
 7848              	I2C_DMASlaveTransmitCplt:
 7849              	.LFB206:
6075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7850              		.loc 1 6075 0
 7851              		.cfi_startproc
 7852              		@ args = 0, pretend = 0, frame = 0
 7853              		@ frame_needed = 0, uses_anonymous_args = 0
 7854              	.LVL648:
 7855 0000 08B5     		push	{r3, lr}
 7856              	.LCFI117:
 7857              		.cfi_def_cfa_offset 8
 7858              		.cfi_offset 3, -8
 7859              		.cfi_offset 14, -4
6076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7860              		.loc 1 6076 0
 7861 0002 806B     		ldr	r0, [r0, #56]
ARM GAS  /tmp/ccZ85PAS.s 			page 278


 7862              	.LVL649:
6077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7863              		.loc 1 6077 0
 7864 0004 C36A     		ldr	r3, [r0, #44]
 7865              	.LVL650:
6079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7866              		.loc 1 6079 0
 7867 0006 002B     		cmp	r3, #0
 7868 0008 18BF     		it	ne
 7869 000a B3F1807F 		cmpne	r3, #16777216
 7870 000e 00D0     		beq	.L682
 7871              	.LVL651:
 7872              	.L679:
 7873 0010 08BD     		pop	{r3, pc}
 7874              	.LVL652:
 7875              	.L682:
6082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7876              		.loc 1 6082 0
 7877 0012 0268     		ldr	r2, [r0]
 7878 0014 1368     		ldr	r3, [r2]
 7879              	.LVL653:
 7880 0016 23F48043 		bic	r3, r3, #16384
 7881 001a 1360     		str	r3, [r2]
6086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7882              		.loc 1 6086 0
 7883 001c FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7884              	.LVL654:
6094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7885              		.loc 1 6094 0
 7886 0020 F6E7     		b	.L679
 7887              		.cfi_endproc
 7888              	.LFE206:
 7890              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
 7891              		.align	1
 7892              		.syntax unified
 7893              		.thumb
 7894              		.thumb_func
 7895              		.fpu fpv5-d16
 7897              	I2C_DMASlaveReceiveCplt:
 7898              	.LFB208:
6150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7899              		.loc 1 6150 0
 7900              		.cfi_startproc
 7901              		@ args = 0, pretend = 0, frame = 0
 7902              		@ frame_needed = 0, uses_anonymous_args = 0
 7903              	.LVL655:
 7904 0000 08B5     		push	{r3, lr}
 7905              	.LCFI118:
 7906              		.cfi_def_cfa_offset 8
 7907              		.cfi_offset 3, -8
 7908              		.cfi_offset 14, -4
6151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7909              		.loc 1 6151 0
 7910 0002 806B     		ldr	r0, [r0, #56]
 7911              	.LVL656:
6152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7912              		.loc 1 6152 0
ARM GAS  /tmp/ccZ85PAS.s 			page 279


 7913 0004 C26A     		ldr	r2, [r0, #44]
 7914              	.LVL657:
6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7915              		.loc 1 6154 0
 7916 0006 C36B     		ldr	r3, [r0, #60]
 7917 0008 1B68     		ldr	r3, [r3]
 7918 000a 5B68     		ldr	r3, [r3, #4]
 7919 000c 4BB9     		cbnz	r3, .L683
6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7920              		.loc 1 6154 0 is_stmt 0 discriminator 1
 7921 000e 12F5803F 		cmn	r2, #65536
 7922 0012 06D0     		beq	.L683
6158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7923              		.loc 1 6158 0 is_stmt 1
 7924 0014 0268     		ldr	r2, [r0]
 7925              	.LVL658:
 7926 0016 1368     		ldr	r3, [r2]
 7927 0018 23F40043 		bic	r3, r3, #32768
 7928 001c 1360     		str	r3, [r2]
6161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7929              		.loc 1 6161 0
 7930 001e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7931              	.LVL659:
 7932              	.L683:
 7933 0022 08BD     		pop	{r3, pc}
 7934              		.cfi_endproc
 7935              	.LFE208:
 7937              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 7938              		.align	1
 7939              		.weak	HAL_I2C_AddrCallback
 7940              		.syntax unified
 7941              		.thumb
 7942              		.thumb_func
 7943              		.fpu fpv5-d16
 7945              	HAL_I2C_AddrCallback:
 7946              	.LFB181:
4467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7947              		.loc 1 4467 0
 7948              		.cfi_startproc
 7949              		@ args = 0, pretend = 0, frame = 0
 7950              		@ frame_needed = 0, uses_anonymous_args = 0
 7951              		@ link register save eliminated.
 7952              	.LVL660:
 7953 0000 7047     		bx	lr
 7954              		.cfi_endproc
 7955              	.LFE181:
 7957              		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 7958              		.align	1
 7959              		.syntax unified
 7960              		.thumb
 7961              		.thumb_func
 7962              		.fpu fpv5-d16
 7964              	I2C_ITAddrCplt:
 7965              	.LFB196:
5281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
 7966              		.loc 1 5281 0
 7967              		.cfi_startproc
ARM GAS  /tmp/ccZ85PAS.s 			page 280


 7968              		@ args = 0, pretend = 0, frame = 0
 7969              		@ frame_needed = 0, uses_anonymous_args = 0
 7970              	.LVL661:
5281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
 7971              		.loc 1 5281 0
 7972 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7973              	.LCFI119:
 7974              		.cfi_def_cfa_offset 24
 7975              		.cfi_offset 3, -24
 7976              		.cfi_offset 4, -20
 7977              		.cfi_offset 5, -16
 7978              		.cfi_offset 6, -12
 7979              		.cfi_offset 7, -8
 7980              		.cfi_offset 14, -4
5291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7981              		.loc 1 5291 0
 7982 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7983 0006 03F02803 		and	r3, r3, #40
 7984 000a 282B     		cmp	r3, #40
 7985 000c 06D0     		beq	.L693
5363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7986              		.loc 1 5363 0
 7987 000e 0368     		ldr	r3, [r0]
 7988 0010 0822     		movs	r2, #8
 7989 0012 DA61     		str	r2, [r3, #28]
5366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7990              		.loc 1 5366 0
 7991 0014 0023     		movs	r3, #0
 7992 0016 80F84030 		strb	r3, [r0, #64]
 7993              	.LVL662:
 7994              	.L687:
 7995 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7996              	.LVL663:
 7997              	.L693:
 7998 001c 0446     		mov	r4, r0
5293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 7999              		.loc 1 5293 0
 8000 001e 0368     		ldr	r3, [r0]
 8001 0020 9E69     		ldr	r6, [r3, #24]
 8002 0022 C6F30046 		ubfx	r6, r6, #16, #1
 8003              	.LVL664:
5294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 8004              		.loc 1 5294 0
 8005 0026 9A69     		ldr	r2, [r3, #24]
 8006 0028 120C     		lsrs	r2, r2, #16
 8007 002a 02F0FE05 		and	r5, r2, #254
 8008              	.LVL665:
5295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 8009              		.loc 1 5295 0
 8010 002e 9A68     		ldr	r2, [r3, #8]
 8011 0030 C2F30902 		ubfx	r2, r2, #0, #10
 8012              	.LVL666:
5296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8013              		.loc 1 5296 0
 8014 0034 DF68     		ldr	r7, [r3, #12]
 8015 0036 07F0FE07 		and	r7, r7, #254
 8016              	.LVL667:
ARM GAS  /tmp/ccZ85PAS.s 			page 281


5299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8017              		.loc 1 5299 0
 8018 003a C168     		ldr	r1, [r0, #12]
 8019              	.LVL668:
 8020 003c 0229     		cmp	r1, #2
 8021 003e 22D1     		bne	.L689
5301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8022              		.loc 1 5301 0
 8023 0040 85EAD215 		eor	r5, r5, r2, lsr #7
 8024              	.LVL669:
 8025 0044 15F0060F 		tst	r5, #6
 8026 0048 10D1     		bne	.L690
 8027              	.LVL670:
5304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 8028              		.loc 1 5304 0
 8029 004a 816C     		ldr	r1, [r0, #72]
 8030 004c 0131     		adds	r1, r1, #1
 8031 004e 8164     		str	r1, [r0, #72]
5305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 8032              		.loc 1 5305 0
 8033 0050 816C     		ldr	r1, [r0, #72]
 8034 0052 0229     		cmp	r1, #2
 8035 0054 E1D1     		bne	.L687
5308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8036              		.loc 1 5308 0
 8037 0056 0021     		movs	r1, #0
 8038 0058 8164     		str	r1, [r0, #72]
5311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8039              		.loc 1 5311 0
 8040 005a 0820     		movs	r0, #8
 8041              	.LVL671:
 8042 005c D861     		str	r0, [r3, #28]
5314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8043              		.loc 1 5314 0
 8044 005e 84F84010 		strb	r1, [r4, #64]
5320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8045              		.loc 1 5320 0
 8046 0062 3146     		mov	r1, r6
 8047 0064 2046     		mov	r0, r4
 8048 0066 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8049              	.LVL672:
 8050 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8051              	.LVL673:
 8052              	.L690:
5329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8053              		.loc 1 5329 0
 8054 006c 4FF40041 		mov	r1, #32768
 8055 0070 FFF7FEFF 		bl	I2C_Disable_IRQ
 8056              	.LVL674:
5332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8057              		.loc 1 5332 0
 8058 0074 0023     		movs	r3, #0
 8059 0076 84F84030 		strb	r3, [r4, #64]
5338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8060              		.loc 1 5338 0
 8061 007a 3A46     		mov	r2, r7
 8062 007c 3146     		mov	r1, r6
ARM GAS  /tmp/ccZ85PAS.s 			page 282


 8063 007e 2046     		mov	r0, r4
 8064 0080 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8065              	.LVL675:
 8066 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8067              	.LVL676:
 8068              	.L689:
5346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8069              		.loc 1 5346 0
 8070 0086 4FF40041 		mov	r1, #32768
 8071 008a FFF7FEFF 		bl	I2C_Disable_IRQ
 8072              	.LVL677:
5349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8073              		.loc 1 5349 0
 8074 008e 0023     		movs	r3, #0
 8075 0090 84F84030 		strb	r3, [r4, #64]
5355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8076              		.loc 1 5355 0
 8077 0094 2A46     		mov	r2, r5
 8078 0096 3146     		mov	r1, r6
 8079 0098 2046     		mov	r0, r4
 8080 009a FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8081              	.LVL678:
 8082 009e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8083              		.cfi_endproc
 8084              	.LFE196:
 8086              		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 8087              		.align	1
 8088              		.weak	HAL_I2C_ListenCpltCallback
 8089              		.syntax unified
 8090              		.thumb
 8091              		.thumb_func
 8092              		.fpu fpv5-d16
 8094              	HAL_I2C_ListenCpltCallback:
 8095              	.LFB182:
4485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8096              		.loc 1 4485 0
 8097              		.cfi_startproc
 8098              		@ args = 0, pretend = 0, frame = 0
 8099              		@ frame_needed = 0, uses_anonymous_args = 0
 8100              		@ link register save eliminated.
 8101              	.LVL679:
 8102 0000 7047     		bx	lr
 8103              		.cfi_endproc
 8104              	.LFE182:
 8106              		.section	.text.I2C_ITListenCplt,"ax",%progbits
 8107              		.align	1
 8108              		.syntax unified
 8109              		.thumb
 8110              		.thumb_func
 8111              		.fpu fpv5-d16
 8113              	I2C_ITListenCplt:
 8114              	.LFB201:
5805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
 8115              		.loc 1 5805 0
 8116              		.cfi_startproc
 8117              		@ args = 0, pretend = 0, frame = 0
 8118              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccZ85PAS.s 			page 283


 8119              	.LVL680:
5805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
 8120              		.loc 1 5805 0
 8121 0000 10B5     		push	{r4, lr}
 8122              	.LCFI120:
 8123              		.cfi_def_cfa_offset 8
 8124              		.cfi_offset 4, -8
 8125              		.cfi_offset 14, -4
 8126 0002 0446     		mov	r4, r0
5807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8127              		.loc 1 5807 0
 8128 0004 174B     		ldr	r3, .L698
 8129 0006 C362     		str	r3, [r0, #44]
5808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 8130              		.loc 1 5808 0
 8131 0008 0023     		movs	r3, #0
 8132 000a 0363     		str	r3, [r0, #48]
5809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8133              		.loc 1 5809 0
 8134 000c 2022     		movs	r2, #32
 8135 000e 80F84120 		strb	r2, [r0, #65]
5810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8136              		.loc 1 5810 0
 8137 0012 80F84230 		strb	r3, [r0, #66]
5811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8138              		.loc 1 5811 0
 8139 0016 4363     		str	r3, [r0, #52]
5814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8140              		.loc 1 5814 0
 8141 0018 11F0040F 		tst	r1, #4
 8142 001c 13D0     		beq	.L696
5817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8143              		.loc 1 5817 0
 8144 001e 436A     		ldr	r3, [r0, #36]
 8145 0020 0268     		ldr	r2, [r0]
 8146 0022 526A     		ldr	r2, [r2, #36]
 8147 0024 1A70     		strb	r2, [r3]
5820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8148              		.loc 1 5820 0
 8149 0026 436A     		ldr	r3, [r0, #36]
 8150 0028 0133     		adds	r3, r3, #1
 8151 002a 4362     		str	r3, [r0, #36]
5822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8152              		.loc 1 5822 0
 8153 002c 038D     		ldrh	r3, [r0, #40]
 8154 002e 53B1     		cbz	r3, .L696
5824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8155              		.loc 1 5824 0
 8156 0030 013B     		subs	r3, r3, #1
 8157 0032 0385     		strh	r3, [r0, #40]	@ movhi
5825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8158              		.loc 1 5825 0
 8159 0034 438D     		ldrh	r3, [r0, #42]
 8160 0036 9BB2     		uxth	r3, r3
 8161 0038 013B     		subs	r3, r3, #1
 8162 003a 9BB2     		uxth	r3, r3
 8163 003c 4385     		strh	r3, [r0, #42]	@ movhi
ARM GAS  /tmp/ccZ85PAS.s 			page 284


5828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8164              		.loc 1 5828 0
 8165 003e 436C     		ldr	r3, [r0, #68]
 8166 0040 43F00403 		orr	r3, r3, #4
 8167 0044 4364     		str	r3, [r0, #68]
 8168              	.L696:
5833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8169              		.loc 1 5833 0
 8170 0046 48F20301 		movw	r1, #32771
 8171              	.LVL681:
 8172 004a 2046     		mov	r0, r4
 8173              	.LVL682:
 8174 004c FFF7FEFF 		bl	I2C_Disable_IRQ
 8175              	.LVL683:
5836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8176              		.loc 1 5836 0
 8177 0050 2368     		ldr	r3, [r4]
 8178 0052 1022     		movs	r2, #16
 8179 0054 DA61     		str	r2, [r3, #28]
5839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8180              		.loc 1 5839 0
 8181 0056 0023     		movs	r3, #0
 8182 0058 84F84030 		strb	r3, [r4, #64]
5845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8183              		.loc 1 5845 0
 8184 005c 2046     		mov	r0, r4
 8185 005e FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8186              	.LVL684:
 8187 0062 10BD     		pop	{r4, pc}
 8188              	.LVL685:
 8189              	.L699:
 8190              		.align	2
 8191              	.L698:
 8192 0064 0000FFFF 		.word	-65536
 8193              		.cfi_endproc
 8194              	.LFE201:
 8196              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 8197              		.align	1
 8198              		.weak	HAL_I2C_MemTxCpltCallback
 8199              		.syntax unified
 8200              		.thumb
 8201              		.thumb_func
 8202              		.fpu fpv5-d16
 8204              	HAL_I2C_MemTxCpltCallback:
 8205              	.LFB183:
4501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8206              		.loc 1 4501 0
 8207              		.cfi_startproc
 8208              		@ args = 0, pretend = 0, frame = 0
 8209              		@ frame_needed = 0, uses_anonymous_args = 0
 8210              		@ link register save eliminated.
 8211              	.LVL686:
 8212 0000 7047     		bx	lr
 8213              		.cfi_endproc
 8214              	.LFE183:
 8216              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 8217              		.align	1
ARM GAS  /tmp/ccZ85PAS.s 			page 285


 8218              		.weak	HAL_I2C_MemRxCpltCallback
 8219              		.syntax unified
 8220              		.thumb
 8221              		.thumb_func
 8222              		.fpu fpv5-d16
 8224              	HAL_I2C_MemRxCpltCallback:
 8225              	.LFB184:
4517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8226              		.loc 1 4517 0
 8227              		.cfi_startproc
 8228              		@ args = 0, pretend = 0, frame = 0
 8229              		@ frame_needed = 0, uses_anonymous_args = 0
 8230              		@ link register save eliminated.
 8231              	.LVL687:
 8232 0000 7047     		bx	lr
 8233              		.cfi_endproc
 8234              	.LFE184:
 8236              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 8237              		.align	1
 8238              		.weak	HAL_I2C_ErrorCallback
 8239              		.syntax unified
 8240              		.thumb
 8241              		.thumb_func
 8242              		.fpu fpv5-d16
 8244              	HAL_I2C_ErrorCallback:
 8245              	.LFB185:
4533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8246              		.loc 1 4533 0
 8247              		.cfi_startproc
 8248              		@ args = 0, pretend = 0, frame = 0
 8249              		@ frame_needed = 0, uses_anonymous_args = 0
 8250              		@ link register save eliminated.
 8251              	.LVL688:
 8252 0000 7047     		bx	lr
 8253              		.cfi_endproc
 8254              	.LFE185:
 8256              		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 8257              		.align	1
 8258              		.weak	HAL_I2C_AbortCpltCallback
 8259              		.syntax unified
 8260              		.thumb
 8261              		.thumb_func
 8262              		.fpu fpv5-d16
 8264              	HAL_I2C_AbortCpltCallback:
 8265              	.LFB186:
4549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8266              		.loc 1 4549 0
 8267              		.cfi_startproc
 8268              		@ args = 0, pretend = 0, frame = 0
 8269              		@ frame_needed = 0, uses_anonymous_args = 0
 8270              		@ link register save eliminated.
 8271              	.LVL689:
 8272 0000 7047     		bx	lr
 8273              		.cfi_endproc
 8274              	.LFE186:
 8276              		.section	.text.I2C_TreatErrorCallback,"ax",%progbits
 8277              		.align	1
ARM GAS  /tmp/ccZ85PAS.s 			page 286


 8278              		.syntax unified
 8279              		.thumb
 8280              		.thumb_func
 8281              		.fpu fpv5-d16
 8283              	I2C_TreatErrorCallback:
 8284              	.LFB203:
5968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
 8285              		.loc 1 5968 0
 8286              		.cfi_startproc
 8287              		@ args = 0, pretend = 0, frame = 0
 8288              		@ frame_needed = 0, uses_anonymous_args = 0
 8289              	.LVL690:
5968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
 8290              		.loc 1 5968 0
 8291 0000 08B5     		push	{r3, lr}
 8292              	.LCFI121:
 8293              		.cfi_def_cfa_offset 8
 8294              		.cfi_offset 3, -8
 8295              		.cfi_offset 14, -4
5969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8296              		.loc 1 5969 0
 8297 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8298 0006 DBB2     		uxtb	r3, r3
 8299 0008 602B     		cmp	r3, #96
 8300 000a 06D0     		beq	.L708
5986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8301              		.loc 1 5986 0
 8302 000c 0023     		movs	r3, #0
 8303 000e 0363     		str	r3, [r0, #48]
5989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8304              		.loc 1 5989 0
 8305 0010 80F84030 		strb	r3, [r0, #64]
5995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8306              		.loc 1 5995 0
 8307 0014 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8308              	.LVL691:
 8309 0018 08BD     		pop	{r3, pc}
 8310              	.LVL692:
 8311              	.L708:
5971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8312              		.loc 1 5971 0
 8313 001a 2023     		movs	r3, #32
 8314 001c 80F84130 		strb	r3, [r0, #65]
5972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8315              		.loc 1 5972 0
 8316 0020 0023     		movs	r3, #0
 8317 0022 0363     		str	r3, [r0, #48]
5975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8318              		.loc 1 5975 0
 8319 0024 80F84030 		strb	r3, [r0, #64]
5981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8320              		.loc 1 5981 0
 8321 0028 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8322              	.LVL693:
 8323 002c 08BD     		pop	{r3, pc}
 8324              		.cfi_endproc
 8325              	.LFE203:
ARM GAS  /tmp/ccZ85PAS.s 			page 287


 8327              		.section	.text.I2C_ITError,"ax",%progbits
 8328              		.align	1
 8329              		.syntax unified
 8330              		.thumb
 8331              		.thumb_func
 8332              		.fpu fpv5-d16
 8334              	I2C_ITError:
 8335              	.LFB202:
5856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8336              		.loc 1 5856 0
 8337              		.cfi_startproc
 8338              		@ args = 0, pretend = 0, frame = 0
 8339              		@ frame_needed = 0, uses_anonymous_args = 0
 8340              	.LVL694:
 8341 0000 10B5     		push	{r4, lr}
 8342              	.LCFI122:
 8343              		.cfi_def_cfa_offset 8
 8344              		.cfi_offset 4, -8
 8345              		.cfi_offset 14, -4
 8346 0002 0446     		mov	r4, r0
5857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmppreviousstate;
 8347              		.loc 1 5857 0
 8348 0004 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8349              	.LVL695:
5861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8350              		.loc 1 5861 0
 8351 0008 0022     		movs	r2, #0
 8352 000a 80F84220 		strb	r2, [r0, #66]
5862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 8353              		.loc 1 5862 0
 8354 000e 3B48     		ldr	r0, .L721
 8355              	.LVL696:
 8356 0010 E062     		str	r0, [r4, #44]
5863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8357              		.loc 1 5863 0
 8358 0012 6285     		strh	r2, [r4, #42]	@ movhi
5866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8359              		.loc 1 5866 0
 8360 0014 626C     		ldr	r2, [r4, #68]
 8361 0016 1143     		orrs	r1, r1, r2
 8362              	.LVL697:
 8363 0018 6164     		str	r1, [r4, #68]
5870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8364              		.loc 1 5870 0
 8365 001a 283B     		subs	r3, r3, #40
 8366              	.LVL698:
 8367 001c DBB2     		uxtb	r3, r3
5869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 8368              		.loc 1 5869 0
 8369 001e 022B     		cmp	r3, #2
 8370 0020 2DD8     		bhi	.L710
5874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8371              		.loc 1 5874 0
 8372 0022 0321     		movs	r1, #3
 8373 0024 2046     		mov	r0, r4
 8374 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 8375              	.LVL699:
ARM GAS  /tmp/ccZ85PAS.s 			page 288


5877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 8376              		.loc 1 5877 0
 8377 002a 2823     		movs	r3, #40
 8378 002c 84F84130 		strb	r3, [r4, #65]
5878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8379              		.loc 1 5878 0
 8380 0030 334B     		ldr	r3, .L721+4
 8381 0032 6363     		str	r3, [r4, #52]
 8382              	.L711:
5896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || \
 8383              		.loc 1 5896 0
 8384 0034 236B     		ldr	r3, [r4, #48]
 8385              	.LVL700:
5897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
 8386              		.loc 1 5897 0
 8387 0036 A26B     		ldr	r2, [r4, #56]
 8388 0038 002A     		cmp	r2, #0
 8389 003a 34D0     		beq	.L713
5897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
 8390              		.loc 1 5897 0 is_stmt 0 discriminator 1
 8391 003c 212B     		cmp	r3, #33
 8392 003e 18BF     		it	ne
 8393 0040 112B     		cmpne	r3, #17
 8394 0042 30D1     		bne	.L713
5900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8395              		.loc 1 5900 0 is_stmt 1
 8396 0044 2368     		ldr	r3, [r4]
 8397              	.LVL701:
 8398 0046 1A68     		ldr	r2, [r3]
 8399 0048 12F4804F 		tst	r2, #16384
 8400 004c 03D0     		beq	.L714
5902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8401              		.loc 1 5902 0
 8402 004e 1A68     		ldr	r2, [r3]
 8403 0050 22F48042 		bic	r2, r2, #16384
 8404 0054 1A60     		str	r2, [r3]
 8405              	.L714:
5905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8406              		.loc 1 5905 0
 8407 0056 A06B     		ldr	r0, [r4, #56]
 8408 0058 FFF7FEFF 		bl	HAL_DMA_GetState
 8409              	.LVL702:
 8410 005c 0128     		cmp	r0, #1
 8411 005e 1ED0     		beq	.L715
5909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8412              		.loc 1 5909 0
 8413 0060 A36B     		ldr	r3, [r4, #56]
 8414 0062 284A     		ldr	r2, .L721+8
 8415 0064 1A65     		str	r2, [r3, #80]
5912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8416              		.loc 1 5912 0
 8417 0066 0023     		movs	r3, #0
 8418 0068 84F84030 		strb	r3, [r4, #64]
5915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8419              		.loc 1 5915 0
 8420 006c A06B     		ldr	r0, [r4, #56]
 8421 006e FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /tmp/ccZ85PAS.s 			page 289


 8422              	.LVL703:
 8423 0072 0028     		cmp	r0, #0
 8424 0074 40D0     		beq	.L709
5918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8425              		.loc 1 5918 0
 8426 0076 A06B     		ldr	r0, [r4, #56]
 8427 0078 036D     		ldr	r3, [r0, #80]
 8428 007a 9847     		blx	r3
 8429              	.LVL704:
 8430 007c 10BD     		pop	{r4, pc}
 8431              	.LVL705:
 8432              	.L710:
5883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8433              		.loc 1 5883 0
 8434 007e 48F20301 		movw	r1, #32771
 8435 0082 2046     		mov	r0, r4
 8436 0084 FFF7FEFF 		bl	I2C_Disable_IRQ
 8437              	.LVL706:
5887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8438              		.loc 1 5887 0
 8439 0088 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8440 008c DBB2     		uxtb	r3, r3
 8441 008e 602B     		cmp	r3, #96
 8442 0090 02D0     		beq	.L712
5890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8443              		.loc 1 5890 0
 8444 0092 2023     		movs	r3, #32
 8445 0094 84F84130 		strb	r3, [r4, #65]
 8446              	.L712:
5892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8447              		.loc 1 5892 0
 8448 0098 0023     		movs	r3, #0
 8449 009a 6363     		str	r3, [r4, #52]
 8450 009c CAE7     		b	.L711
 8451              	.L715:
5923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8452              		.loc 1 5923 0
 8453 009e 2046     		mov	r0, r4
 8454 00a0 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8455              	.LVL707:
 8456 00a4 10BD     		pop	{r4, pc}
 8457              	.LVL708:
 8458              	.L713:
5927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
 8459              		.loc 1 5927 0
 8460 00a6 E26B     		ldr	r2, [r4, #60]
 8461 00a8 1AB3     		cbz	r2, .L717
5927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
 8462              		.loc 1 5927 0 is_stmt 0 discriminator 1
 8463 00aa 222B     		cmp	r3, #34
 8464 00ac 18BF     		it	ne
 8465 00ae 122B     		cmpne	r3, #18
 8466 00b0 1FD1     		bne	.L717
5930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8467              		.loc 1 5930 0 is_stmt 1
 8468 00b2 2368     		ldr	r3, [r4]
 8469              	.LVL709:
ARM GAS  /tmp/ccZ85PAS.s 			page 290


 8470 00b4 1A68     		ldr	r2, [r3]
 8471 00b6 12F4004F 		tst	r2, #32768
 8472 00ba 03D0     		beq	.L718
5932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8473              		.loc 1 5932 0
 8474 00bc 1A68     		ldr	r2, [r3]
 8475 00be 22F40042 		bic	r2, r2, #32768
 8476 00c2 1A60     		str	r2, [r3]
 8477              	.L718:
5935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8478              		.loc 1 5935 0
 8479 00c4 E06B     		ldr	r0, [r4, #60]
 8480 00c6 FFF7FEFF 		bl	HAL_DMA_GetState
 8481              	.LVL710:
 8482 00ca 0128     		cmp	r0, #1
 8483 00cc 0DD0     		beq	.L719
5939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8484              		.loc 1 5939 0
 8485 00ce E36B     		ldr	r3, [r4, #60]
 8486 00d0 0C4A     		ldr	r2, .L721+8
 8487 00d2 1A65     		str	r2, [r3, #80]
5942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8488              		.loc 1 5942 0
 8489 00d4 0023     		movs	r3, #0
 8490 00d6 84F84030 		strb	r3, [r4, #64]
5945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8491              		.loc 1 5945 0
 8492 00da E06B     		ldr	r0, [r4, #60]
 8493 00dc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8494              	.LVL711:
 8495 00e0 50B1     		cbz	r0, .L709
5948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8496              		.loc 1 5948 0
 8497 00e2 E06B     		ldr	r0, [r4, #60]
 8498 00e4 036D     		ldr	r3, [r0, #80]
 8499 00e6 9847     		blx	r3
 8500              	.LVL712:
 8501 00e8 10BD     		pop	{r4, pc}
 8502              	.LVL713:
 8503              	.L719:
5953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8504              		.loc 1 5953 0
 8505 00ea 2046     		mov	r0, r4
 8506 00ec FFF7FEFF 		bl	I2C_TreatErrorCallback
 8507              	.LVL714:
 8508 00f0 10BD     		pop	{r4, pc}
 8509              	.LVL715:
 8510              	.L717:
5958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8511              		.loc 1 5958 0
 8512 00f2 2046     		mov	r0, r4
 8513 00f4 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8514              	.LVL716:
 8515              	.L709:
 8516 00f8 10BD     		pop	{r4, pc}
 8517              	.LVL717:
 8518              	.L722:
ARM GAS  /tmp/ccZ85PAS.s 			page 291


 8519 00fa 00BF     		.align	2
 8520              	.L721:
 8521 00fc 0000FFFF 		.word	-65536
 8522 0100 00000000 		.word	I2C_Slave_ISR_IT
 8523 0104 00000000 		.word	I2C_DMAAbort
 8524              		.cfi_endproc
 8525              	.LFE202:
 8527              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 8528              		.align	1
 8529              		.syntax unified
 8530              		.thumb
 8531              		.thumb_func
 8532              		.fpu fpv5-d16
 8534              	I2C_ITSlaveCplt:
 8535              	.LFB200:
5646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 8536              		.loc 1 5646 0
 8537              		.cfi_startproc
 8538              		@ args = 0, pretend = 0, frame = 0
 8539              		@ frame_needed = 0, uses_anonymous_args = 0
 8540              	.LVL718:
 8541 0000 70B5     		push	{r4, r5, r6, lr}
 8542              	.LCFI123:
 8543              		.cfi_def_cfa_offset 16
 8544              		.cfi_offset 4, -16
 8545              		.cfi_offset 5, -12
 8546              		.cfi_offset 6, -8
 8547              		.cfi_offset 14, -4
 8548 0002 0446     		mov	r4, r0
 8549 0004 0D46     		mov	r5, r1
5647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8550              		.loc 1 5647 0
 8551 0006 0268     		ldr	r2, [r0]
 8552 0008 1668     		ldr	r6, [r2]
 8553              	.LVL719:
5649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8554              		.loc 1 5649 0
 8555 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8556 000e DBB2     		uxtb	r3, r3
 8557              	.LVL720:
5652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8558              		.loc 1 5652 0
 8559 0010 2021     		movs	r1, #32
 8560              	.LVL721:
 8561 0012 D161     		str	r1, [r2, #28]
5655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8562              		.loc 1 5655 0
 8563 0014 292B     		cmp	r3, #41
 8564 0016 18BF     		it	ne
 8565 0018 212B     		cmpne	r3, #33
 8566 001a 5BD0     		beq	.L735
5660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8567              		.loc 1 5660 0
 8568 001c 2A2B     		cmp	r3, #42
 8569 001e 18BF     		it	ne
 8570 0020 222B     		cmpne	r3, #34
 8571 0022 5ED0     		beq	.L736
ARM GAS  /tmp/ccZ85PAS.s 			page 292


 8572              	.LVL722:
 8573              	.L725:
5671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8574              		.loc 1 5671 0
 8575 0024 2268     		ldr	r2, [r4]
 8576 0026 5368     		ldr	r3, [r2, #4]
 8577 0028 43F40043 		orr	r3, r3, #32768
 8578 002c 5360     		str	r3, [r2, #4]
5674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8579              		.loc 1 5674 0
 8580 002e 2268     		ldr	r2, [r4]
 8581 0030 5368     		ldr	r3, [r2, #4]
 8582 0032 23F0FF73 		bic	r3, r3, #33423360
 8583 0036 23F48B33 		bic	r3, r3, #71168
 8584 003a 23F4FF73 		bic	r3, r3, #510
 8585 003e 23F00103 		bic	r3, r3, #1
 8586 0042 5360     		str	r3, [r2, #4]
5677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8587              		.loc 1 5677 0
 8588 0044 2046     		mov	r0, r4
 8589 0046 FFF7FEFF 		bl	I2C_Flush_TXDR
 8590              	.LVL723:
5680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8591              		.loc 1 5680 0
 8592 004a 16F4804F 		tst	r6, #16384
 8593 004e 4FD0     		beq	.L726
5683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8594              		.loc 1 5683 0
 8595 0050 2268     		ldr	r2, [r4]
 8596 0052 1368     		ldr	r3, [r2]
 8597 0054 23F48043 		bic	r3, r3, #16384
 8598 0058 1360     		str	r3, [r2]
5685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8599              		.loc 1 5685 0
 8600 005a A36B     		ldr	r3, [r4, #56]
 8601 005c 1BB1     		cbz	r3, .L727
5687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8602              		.loc 1 5687 0
 8603 005e 1B68     		ldr	r3, [r3]
 8604 0060 5B68     		ldr	r3, [r3, #4]
 8605 0062 9BB2     		uxth	r3, r3
 8606 0064 6385     		strh	r3, [r4, #42]	@ movhi
 8607              	.L727:
5706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8608              		.loc 1 5706 0
 8609 0066 15F0040F 		tst	r5, #4
 8610 006a 11D0     		beq	.L728
5709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8611              		.loc 1 5709 0
 8612 006c 25F00405 		bic	r5, r5, #4
 8613              	.LVL724:
5712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8614              		.loc 1 5712 0
 8615 0070 636A     		ldr	r3, [r4, #36]
 8616 0072 2268     		ldr	r2, [r4]
 8617 0074 526A     		ldr	r2, [r2, #36]
 8618 0076 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccZ85PAS.s 			page 293


5715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8619              		.loc 1 5715 0
 8620 0078 636A     		ldr	r3, [r4, #36]
 8621 007a 0133     		adds	r3, r3, #1
 8622 007c 6362     		str	r3, [r4, #36]
5717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8623              		.loc 1 5717 0
 8624 007e 238D     		ldrh	r3, [r4, #40]
 8625 0080 33B1     		cbz	r3, .L728
5719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8626              		.loc 1 5719 0
 8627 0082 013B     		subs	r3, r3, #1
 8628 0084 2385     		strh	r3, [r4, #40]	@ movhi
5720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8629              		.loc 1 5720 0
 8630 0086 638D     		ldrh	r3, [r4, #42]
 8631 0088 9BB2     		uxth	r3, r3
 8632 008a 013B     		subs	r3, r3, #1
 8633 008c 9BB2     		uxth	r3, r3
 8634 008e 6385     		strh	r3, [r4, #42]	@ movhi
 8635              	.L728:
5725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8636              		.loc 1 5725 0
 8637 0090 638D     		ldrh	r3, [r4, #42]
 8638 0092 9BB2     		uxth	r3, r3
 8639 0094 1BB1     		cbz	r3, .L729
5728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8640              		.loc 1 5728 0
 8641 0096 636C     		ldr	r3, [r4, #68]
 8642 0098 43F00403 		orr	r3, r3, #4
 8643 009c 6364     		str	r3, [r4, #68]
 8644              	.L729:
5731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8645              		.loc 1 5731 0
 8646 009e 0023     		movs	r3, #0
 8647 00a0 84F84230 		strb	r3, [r4, #66]
5732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8648              		.loc 1 5732 0
 8649 00a4 6363     		str	r3, [r4, #52]
5734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8650              		.loc 1 5734 0
 8651 00a6 636C     		ldr	r3, [r4, #68]
 8652 00a8 002B     		cmp	r3, #0
 8653 00aa 31D1     		bne	.L737
5746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8654              		.loc 1 5746 0
 8655 00ac E36A     		ldr	r3, [r4, #44]
 8656 00ae 13F5803F 		cmn	r3, #65536
 8657 00b2 3BD1     		bne	.L738
5766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8658              		.loc 1 5766 0
 8659 00b4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8660 00b8 DBB2     		uxtb	r3, r3
 8661 00ba 222B     		cmp	r3, #34
 8662 00bc 46D0     		beq	.L739
5783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8663              		.loc 1 5783 0
ARM GAS  /tmp/ccZ85PAS.s 			page 294


 8664 00be 2023     		movs	r3, #32
 8665 00c0 84F84130 		strb	r3, [r4, #65]
5784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8666              		.loc 1 5784 0
 8667 00c4 0023     		movs	r3, #0
 8668 00c6 2363     		str	r3, [r4, #48]
5787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8669              		.loc 1 5787 0
 8670 00c8 84F84030 		strb	r3, [r4, #64]
5793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8671              		.loc 1 5793 0
 8672 00cc 2046     		mov	r0, r4
 8673 00ce FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 8674              	.LVL725:
 8675              	.L723:
 8676 00d2 70BD     		pop	{r4, r5, r6, pc}
 8677              	.LVL726:
 8678              	.L735:
5657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8679              		.loc 1 5657 0
 8680 00d4 48F20101 		movw	r1, #32769
 8681 00d8 FFF7FEFF 		bl	I2C_Disable_IRQ
 8682              	.LVL727:
5658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8683              		.loc 1 5658 0
 8684 00dc 2123     		movs	r3, #33
 8685 00de 2363     		str	r3, [r4, #48]
 8686 00e0 A0E7     		b	.L725
 8687              	.LVL728:
 8688              	.L736:
5662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8689              		.loc 1 5662 0
 8690 00e2 48F20201 		movw	r1, #32770
 8691 00e6 FFF7FEFF 		bl	I2C_Disable_IRQ
 8692              	.LVL729:
5663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8693              		.loc 1 5663 0
 8694 00ea 2223     		movs	r3, #34
 8695 00ec 2363     		str	r3, [r4, #48]
 8696 00ee 99E7     		b	.L725
 8697              	.L726:
5690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8698              		.loc 1 5690 0
 8699 00f0 16F4004F 		tst	r6, #32768
 8700 00f4 B7D0     		beq	.L727
5693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8701              		.loc 1 5693 0
 8702 00f6 2268     		ldr	r2, [r4]
 8703 00f8 1368     		ldr	r3, [r2]
 8704 00fa 23F40043 		bic	r3, r3, #32768
 8705 00fe 1360     		str	r3, [r2]
5695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8706              		.loc 1 5695 0
 8707 0100 E36B     		ldr	r3, [r4, #60]
 8708 0102 002B     		cmp	r3, #0
 8709 0104 AFD0     		beq	.L727
5697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccZ85PAS.s 			page 295


 8710              		.loc 1 5697 0
 8711 0106 1B68     		ldr	r3, [r3]
 8712 0108 5B68     		ldr	r3, [r3, #4]
 8713 010a 9BB2     		uxth	r3, r3
 8714 010c 6385     		strh	r3, [r4, #42]	@ movhi
 8715 010e AAE7     		b	.L727
 8716              	.LVL730:
 8717              	.L737:
5737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8718              		.loc 1 5737 0
 8719 0110 616C     		ldr	r1, [r4, #68]
 8720 0112 2046     		mov	r0, r4
 8721 0114 FFF7FEFF 		bl	I2C_ITError
 8722              	.LVL731:
5740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8723              		.loc 1 5740 0
 8724 0118 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8725 011c DBB2     		uxtb	r3, r3
 8726 011e 282B     		cmp	r3, #40
 8727 0120 D7D1     		bne	.L723
5743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8728              		.loc 1 5743 0
 8729 0122 2946     		mov	r1, r5
 8730 0124 2046     		mov	r0, r4
 8731 0126 FFF7FEFF 		bl	I2C_ITListenCplt
 8732              	.LVL732:
 8733 012a 70BD     		pop	{r4, r5, r6, pc}
 8734              	.LVL733:
 8735              	.L738:
5749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8736              		.loc 1 5749 0
 8737 012c 2046     		mov	r0, r4
 8738 012e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8739              	.LVL734:
5751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8740              		.loc 1 5751 0
 8741 0132 0C4B     		ldr	r3, .L740
 8742 0134 E362     		str	r3, [r4, #44]
5752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8743              		.loc 1 5752 0
 8744 0136 2023     		movs	r3, #32
 8745 0138 84F84130 		strb	r3, [r4, #65]
5753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8746              		.loc 1 5753 0
 8747 013c 0023     		movs	r3, #0
 8748 013e 2363     		str	r3, [r4, #48]
5756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8749              		.loc 1 5756 0
 8750 0140 84F84030 		strb	r3, [r4, #64]
5762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8751              		.loc 1 5762 0
 8752 0144 2046     		mov	r0, r4
 8753 0146 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8754              	.LVL735:
 8755 014a 70BD     		pop	{r4, r5, r6, pc}
 8756              	.LVL736:
 8757              	.L739:
ARM GAS  /tmp/ccZ85PAS.s 			page 296


5768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8758              		.loc 1 5768 0
 8759 014c 2023     		movs	r3, #32
 8760 014e 84F84130 		strb	r3, [r4, #65]
5769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8761              		.loc 1 5769 0
 8762 0152 0023     		movs	r3, #0
 8763 0154 2363     		str	r3, [r4, #48]
5772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8764              		.loc 1 5772 0
 8765 0156 84F84030 		strb	r3, [r4, #64]
5778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8766              		.loc 1 5778 0
 8767 015a 2046     		mov	r0, r4
 8768 015c FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 8769              	.LVL737:
 8770 0160 70BD     		pop	{r4, r5, r6, pc}
 8771              	.LVL738:
 8772              	.L741:
 8773 0162 00BF     		.align	2
 8774              	.L740:
 8775 0164 0000FFFF 		.word	-65536
 8776              		.cfi_endproc
 8777              	.LFE200:
 8779              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 8780              		.align	1
 8781              		.syntax unified
 8782              		.thumb
 8783              		.thumb_func
 8784              		.fpu fpv5-d16
 8786              	I2C_Slave_ISR_IT:
 8787              	.LFB191:
4769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 8788              		.loc 1 4769 0
 8789              		.cfi_startproc
 8790              		@ args = 0, pretend = 0, frame = 0
 8791              		@ frame_needed = 0, uses_anonymous_args = 0
 8792              	.LVL739:
 8793 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8794              	.LCFI124:
 8795              		.cfi_def_cfa_offset 24
 8796              		.cfi_offset 3, -24
 8797              		.cfi_offset 4, -20
 8798              		.cfi_offset 5, -16
 8799              		.cfi_offset 6, -12
 8800              		.cfi_offset 7, -8
 8801              		.cfi_offset 14, -4
4770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8802              		.loc 1 4770 0
 8803 0002 C76A     		ldr	r7, [r0, #44]
 8804              	.LVL740:
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8805              		.loc 1 4774 0
 8806 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 8807 0008 012B     		cmp	r3, #1
 8808 000a 00F09F80 		beq	.L754
 8809 000e 1646     		mov	r6, r2
ARM GAS  /tmp/ccZ85PAS.s 			page 297


 8810 0010 0C46     		mov	r4, r1
 8811 0012 0546     		mov	r5, r0
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8812              		.loc 1 4774 0 is_stmt 0 discriminator 2
 8813 0014 0123     		movs	r3, #1
 8814 0016 80F84030 		strb	r3, [r0, #64]
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8815              		.loc 1 4777 0 is_stmt 1 discriminator 2
 8816 001a 11F0200F 		tst	r1, #32
 8817 001e 02D0     		beq	.L744
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8818              		.loc 1 4777 0 is_stmt 0 discriminator 1
 8819 0020 12F0200F 		tst	r2, #32
 8820 0024 19D1     		bne	.L756
 8821              	.LVL741:
 8822              	.L744:
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8823              		.loc 1 4783 0 is_stmt 1
 8824 0026 14F0100F 		tst	r4, #16
 8825 002a 3FD0     		beq	.L745
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8826              		.loc 1 4783 0 is_stmt 0 discriminator 1
 8827 002c 16F0100F 		tst	r6, #16
 8828 0030 3CD0     		beq	.L745
4789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8829              		.loc 1 4789 0 is_stmt 1
 8830 0032 6B8D     		ldrh	r3, [r5, #42]
 8831 0034 9BB2     		uxth	r3, r3
 8832 0036 43BB     		cbnz	r3, .L746
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8833              		.loc 1 4792 0
 8834 0038 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 8835 003c DBB2     		uxtb	r3, r3
 8836 003e 282B     		cmp	r3, #40
 8837 0040 0ED0     		beq	.L757
 8838              	.L747:
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8839              		.loc 1 4797 0
 8840 0042 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 8841 0046 DBB2     		uxtb	r3, r3
 8842 0048 292B     		cmp	r3, #41
 8843 004a 11D0     		beq	.L758
 8844              	.L749:
4812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8845              		.loc 1 4812 0
 8846 004c 2B68     		ldr	r3, [r5]
 8847 004e 1022     		movs	r2, #16
 8848 0050 DA61     		str	r2, [r3, #28]
 8849              	.L748:
4890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8850              		.loc 1 4890 0
 8851 0052 0020     		movs	r0, #0
 8852 0054 85F84000 		strb	r0, [r5, #64]
4892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 8853              		.loc 1 4892 0
 8854 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8855              	.LVL742:
ARM GAS  /tmp/ccZ85PAS.s 			page 298


 8856              	.L756:
4780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8857              		.loc 1 4780 0
 8858 005a FFF7FEFF 		bl	I2C_ITSlaveCplt
 8859              	.LVL743:
 8860 005e E2E7     		b	.L744
 8861              	.L757:
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8862              		.loc 1 4792 0 discriminator 1
 8863 0060 B7F1007F 		cmp	r7, #33554432
 8864 0064 EDD1     		bne	.L747
4795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8865              		.loc 1 4795 0
 8866 0066 2146     		mov	r1, r4
 8867 0068 2846     		mov	r0, r5
 8868 006a FFF7FEFF 		bl	I2C_ITListenCplt
 8869              	.LVL744:
 8870 006e F0E7     		b	.L748
 8871              	.L758:
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8872              		.loc 1 4797 0 discriminator 1
 8873 0070 17F5803F 		cmn	r7, #65536
 8874 0074 EAD0     		beq	.L749
4800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8875              		.loc 1 4800 0
 8876 0076 2B68     		ldr	r3, [r5]
 8877 0078 1022     		movs	r2, #16
 8878 007a DA61     		str	r2, [r3, #28]
4803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8879              		.loc 1 4803 0
 8880 007c 2846     		mov	r0, r5
 8881 007e FFF7FEFF 		bl	I2C_Flush_TXDR
 8882              	.LVL745:
4807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8883              		.loc 1 4807 0
 8884 0082 2846     		mov	r0, r5
 8885 0084 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8886              	.LVL746:
 8887 0088 E3E7     		b	.L748
 8888              	.L746:
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8889              		.loc 1 4819 0
 8890 008a 2B68     		ldr	r3, [r5]
 8891 008c 1022     		movs	r2, #16
 8892 008e DA61     		str	r2, [r3, #28]
4822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8893              		.loc 1 4822 0
 8894 0090 6B6C     		ldr	r3, [r5, #68]
 8895 0092 43F00403 		orr	r3, r3, #4
 8896 0096 6B64     		str	r3, [r5, #68]
4824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8897              		.loc 1 4824 0
 8898 0098 B7F1807F 		cmp	r7, #16777216
 8899 009c 18BF     		it	ne
 8900 009e 002F     		cmpne	r7, #0
 8901 00a0 D7D1     		bne	.L748
4827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
ARM GAS  /tmp/ccZ85PAS.s 			page 299


 8902              		.loc 1 4827 0
 8903 00a2 696C     		ldr	r1, [r5, #68]
 8904 00a4 2846     		mov	r0, r5
 8905 00a6 FFF7FEFF 		bl	I2C_ITError
 8906              	.LVL747:
 8907 00aa D2E7     		b	.L748
 8908              	.L745:
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8909              		.loc 1 4831 0
 8910 00ac 14F0040F 		tst	r4, #4
 8911 00b0 1FD0     		beq	.L750
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8912              		.loc 1 4831 0 is_stmt 0 discriminator 1
 8913 00b2 16F0040F 		tst	r6, #4
 8914 00b6 1CD0     		beq	.L750
4833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8915              		.loc 1 4833 0 is_stmt 1
 8916 00b8 6B8D     		ldrh	r3, [r5, #42]
 8917 00ba 9BB2     		uxth	r3, r3
 8918 00bc 73B1     		cbz	r3, .L751
4836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8919              		.loc 1 4836 0
 8920 00be 6B6A     		ldr	r3, [r5, #36]
 8921 00c0 2A68     		ldr	r2, [r5]
 8922 00c2 526A     		ldr	r2, [r2, #36]
 8923 00c4 1A70     		strb	r2, [r3]
4839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8924              		.loc 1 4839 0
 8925 00c6 6B6A     		ldr	r3, [r5, #36]
 8926 00c8 0133     		adds	r3, r3, #1
 8927 00ca 6B62     		str	r3, [r5, #36]
4841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8928              		.loc 1 4841 0
 8929 00cc 2B8D     		ldrh	r3, [r5, #40]
 8930 00ce 013B     		subs	r3, r3, #1
 8931 00d0 2B85     		strh	r3, [r5, #40]	@ movhi
4842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8932              		.loc 1 4842 0
 8933 00d2 6B8D     		ldrh	r3, [r5, #42]
 8934 00d4 9BB2     		uxth	r3, r3
 8935 00d6 013B     		subs	r3, r3, #1
 8936 00d8 9BB2     		uxth	r3, r3
 8937 00da 6B85     		strh	r3, [r5, #42]	@ movhi
 8938              	.L751:
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8939              		.loc 1 4845 0
 8940 00dc 6B8D     		ldrh	r3, [r5, #42]
 8941 00de 9BB2     		uxth	r3, r3
 8942 00e0 002B     		cmp	r3, #0
 8943 00e2 B6D1     		bne	.L748
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8944              		.loc 1 4845 0 is_stmt 0 discriminator 1
 8945 00e4 17F5803F 		cmn	r7, #65536
 8946 00e8 B3D0     		beq	.L748
4849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8947              		.loc 1 4849 0 is_stmt 1
 8948 00ea 2846     		mov	r0, r5
ARM GAS  /tmp/ccZ85PAS.s 			page 300


 8949 00ec FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8950              	.LVL748:
 8951 00f0 AFE7     		b	.L748
 8952              	.L750:
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
 8953              		.loc 1 4852 0
 8954 00f2 14F0080F 		tst	r4, #8
 8955 00f6 02D0     		beq	.L752
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
 8956              		.loc 1 4852 0 is_stmt 0 discriminator 1
 8957 00f8 16F0080F 		tst	r6, #8
 8958 00fc 18D1     		bne	.L759
 8959              	.L752:
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8960              		.loc 1 4857 0 is_stmt 1
 8961 00fe 14F0020F 		tst	r4, #2
 8962 0102 A6D0     		beq	.L748
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8963              		.loc 1 4857 0 is_stmt 0 discriminator 1
 8964 0104 16F0020F 		tst	r6, #2
 8965 0108 A3D0     		beq	.L748
4863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8966              		.loc 1 4863 0 is_stmt 1
 8967 010a 6B8D     		ldrh	r3, [r5, #42]
 8968 010c 9BB2     		uxth	r3, r3
 8969 010e A3B1     		cbz	r3, .L753
4866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8970              		.loc 1 4866 0
 8971 0110 2B68     		ldr	r3, [r5]
 8972 0112 6A6A     		ldr	r2, [r5, #36]
 8973 0114 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8974 0116 9A62     		str	r2, [r3, #40]
4869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8975              		.loc 1 4869 0
 8976 0118 6B6A     		ldr	r3, [r5, #36]
 8977 011a 0133     		adds	r3, r3, #1
 8978 011c 6B62     		str	r3, [r5, #36]
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 8979              		.loc 1 4871 0
 8980 011e 6B8D     		ldrh	r3, [r5, #42]
 8981 0120 9BB2     		uxth	r3, r3
 8982 0122 013B     		subs	r3, r3, #1
 8983 0124 9BB2     		uxth	r3, r3
 8984 0126 6B85     		strh	r3, [r5, #42]	@ movhi
4872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8985              		.loc 1 4872 0
 8986 0128 2B8D     		ldrh	r3, [r5, #40]
 8987 012a 013B     		subs	r3, r3, #1
 8988 012c 2B85     		strh	r3, [r5, #40]	@ movhi
 8989 012e 90E7     		b	.L748
 8990              	.L759:
4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8991              		.loc 1 4855 0
 8992 0130 2146     		mov	r1, r4
 8993 0132 2846     		mov	r0, r5
 8994 0134 FFF7FEFF 		bl	I2C_ITAddrCplt
 8995              	.LVL749:
ARM GAS  /tmp/ccZ85PAS.s 			page 301


 8996 0138 8BE7     		b	.L748
 8997              	.L753:
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8998              		.loc 1 4876 0
 8999 013a 002F     		cmp	r7, #0
 9000 013c 18BF     		it	ne
 9001 013e B7F1807F 		cmpne	r7, #16777216
 9002 0142 86D1     		bne	.L748
4880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9003              		.loc 1 4880 0
 9004 0144 2846     		mov	r0, r5
 9005 0146 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9006              	.LVL750:
 9007 014a 82E7     		b	.L748
 9008              	.LVL751:
 9009              	.L754:
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9010              		.loc 1 4774 0
 9011 014c 0220     		movs	r0, #2
 9012              	.LVL752:
4893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9013              		.loc 1 4893 0
 9014 014e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9015              		.cfi_endproc
 9016              	.LFE191:
 9018              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 9019              		.align	1
 9020              		.syntax unified
 9021              		.thumb
 9022              		.thumb_func
 9023              		.fpu fpv5-d16
 9025              	I2C_ITMasterCplt:
 9026              	.LFB199:
5503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
 9027              		.loc 1 5503 0
 9028              		.cfi_startproc
 9029              		@ args = 0, pretend = 0, frame = 8
 9030              		@ frame_needed = 0, uses_anonymous_args = 0
 9031              	.LVL753:
 9032 0000 30B5     		push	{r4, r5, lr}
 9033              	.LCFI125:
 9034              		.cfi_def_cfa_offset 12
 9035              		.cfi_offset 4, -12
 9036              		.cfi_offset 5, -8
 9037              		.cfi_offset 14, -4
 9038 0002 83B0     		sub	sp, sp, #12
 9039              	.LCFI126:
 9040              		.cfi_def_cfa_offset 24
 9041 0004 0446     		mov	r4, r0
 9042 0006 0D46     		mov	r5, r1
 9043              	.LVL754:
5509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9044              		.loc 1 5509 0
 9045 0008 0368     		ldr	r3, [r0]
 9046 000a 2022     		movs	r2, #32
 9047 000c DA61     		str	r2, [r3, #28]
5512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccZ85PAS.s 			page 302


 9048              		.loc 1 5512 0
 9049 000e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 9050 0012 DBB2     		uxtb	r3, r3
 9051 0014 212B     		cmp	r3, #33
 9052 0016 4AD0     		beq	.L772
5517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9053              		.loc 1 5517 0
 9054 0018 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 9055 001c DBB2     		uxtb	r3, r3
 9056 001e 222B     		cmp	r3, #34
 9057 0020 4BD0     		beq	.L773
 9058              	.LVL755:
 9059              	.L762:
5528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9060              		.loc 1 5528 0
 9061 0022 2268     		ldr	r2, [r4]
 9062 0024 5368     		ldr	r3, [r2, #4]
 9063 0026 23F0FF73 		bic	r3, r3, #33423360
 9064 002a 23F48B33 		bic	r3, r3, #71168
 9065 002e 23F4FF73 		bic	r3, r3, #510
 9066 0032 23F00103 		bic	r3, r3, #1
 9067 0036 5360     		str	r3, [r2, #4]
5531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 9068              		.loc 1 5531 0
 9069 0038 0023     		movs	r3, #0
 9070 003a 6363     		str	r3, [r4, #52]
5532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9071              		.loc 1 5532 0
 9072 003c A3F58033 		sub	r3, r3, #65536
 9073 0040 E362     		str	r3, [r4, #44]
5534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9074              		.loc 1 5534 0
 9075 0042 15F0100F 		tst	r5, #16
 9076 0046 06D0     		beq	.L763
5537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9077              		.loc 1 5537 0
 9078 0048 2368     		ldr	r3, [r4]
 9079 004a 1022     		movs	r2, #16
 9080 004c DA61     		str	r2, [r3, #28]
5540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9081              		.loc 1 5540 0
 9082 004e 636C     		ldr	r3, [r4, #68]
 9083 0050 43F00403 		orr	r3, r3, #4
 9084 0054 6364     		str	r3, [r4, #68]
 9085              	.L763:
5544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9086              		.loc 1 5544 0
 9087 0056 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9088 005a DBB2     		uxtb	r3, r3
 9089 005c 602B     		cmp	r3, #96
 9090 005e 32D0     		beq	.L774
 9091              	.L764:
5552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9092              		.loc 1 5552 0
 9093 0060 2046     		mov	r0, r4
 9094 0062 FFF7FEFF 		bl	I2C_Flush_TXDR
 9095              	.LVL756:
ARM GAS  /tmp/ccZ85PAS.s 			page 303


5555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9096              		.loc 1 5555 0
 9097 0066 626C     		ldr	r2, [r4, #68]
 9098              	.LVL757:
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9099              		.loc 1 5558 0
 9100 0068 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9101 006c DBB2     		uxtb	r3, r3
 9102 006e 602B     		cmp	r3, #96
 9103 0070 32D0     		beq	.L765
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9104              		.loc 1 5558 0 is_stmt 0 discriminator 1
 9105 0072 8ABB     		cbnz	r2, .L765
5564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9106              		.loc 1 5564 0 is_stmt 1
 9107 0074 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9108 0078 DBB2     		uxtb	r3, r3
 9109 007a 212B     		cmp	r3, #33
 9110 007c 32D0     		beq	.L775
5599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9111              		.loc 1 5599 0
 9112 007e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9113 0082 DBB2     		uxtb	r3, r3
 9114 0084 222B     		cmp	r3, #34
 9115 0086 2BD1     		bne	.L760
5601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9116              		.loc 1 5601 0
 9117 0088 2023     		movs	r3, #32
 9118 008a 84F84130 		strb	r3, [r4, #65]
5602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9119              		.loc 1 5602 0
 9120 008e 0023     		movs	r3, #0
 9121 0090 2363     		str	r3, [r4, #48]
5604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9122              		.loc 1 5604 0
 9123 0092 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9124 0096 DBB2     		uxtb	r3, r3
 9125 0098 402B     		cmp	r3, #64
 9126 009a 3FD0     		beq	.L776
5620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9127              		.loc 1 5620 0
 9128 009c 0023     		movs	r3, #0
 9129 009e 84F84230 		strb	r3, [r4, #66]
5623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9130              		.loc 1 5623 0
 9131 00a2 84F84030 		strb	r3, [r4, #64]
5629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9132              		.loc 1 5629 0
 9133 00a6 2046     		mov	r0, r4
 9134 00a8 FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 9135              	.LVL758:
5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9136              		.loc 1 5637 0
 9137 00ac 18E0     		b	.L760
 9138              	.LVL759:
 9139              	.L772:
5514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
ARM GAS  /tmp/ccZ85PAS.s 			page 304


 9140              		.loc 1 5514 0
 9141 00ae 0121     		movs	r1, #1
 9142              	.LVL760:
 9143 00b0 FFF7FEFF 		bl	I2C_Disable_IRQ
 9144              	.LVL761:
5515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9145              		.loc 1 5515 0
 9146 00b4 1123     		movs	r3, #17
 9147 00b6 2363     		str	r3, [r4, #48]
 9148 00b8 B3E7     		b	.L762
 9149              	.LVL762:
 9150              	.L773:
5519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 9151              		.loc 1 5519 0
 9152 00ba 0221     		movs	r1, #2
 9153              	.LVL763:
 9154 00bc FFF7FEFF 		bl	I2C_Disable_IRQ
 9155              	.LVL764:
5520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9156              		.loc 1 5520 0
 9157 00c0 1223     		movs	r3, #18
 9158 00c2 2363     		str	r3, [r4, #48]
 9159 00c4 ADE7     		b	.L762
 9160              	.L774:
5544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9161              		.loc 1 5544 0 discriminator 1
 9162 00c6 15F0040F 		tst	r5, #4
 9163 00ca C9D0     		beq	.L764
5547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     UNUSED(tmpreg);
 9164              		.loc 1 5547 0
 9165 00cc 2368     		ldr	r3, [r4]
 9166 00ce 5B6A     		ldr	r3, [r3, #36]
 9167 00d0 DBB2     		uxtb	r3, r3
 9168 00d2 0193     		str	r3, [sp, #4]
5548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9169              		.loc 1 5548 0
 9170 00d4 019B     		ldr	r3, [sp, #4]
 9171 00d6 C3E7     		b	.L764
 9172              	.LVL765:
 9173              	.L765:
5561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9174              		.loc 1 5561 0
 9175 00d8 616C     		ldr	r1, [r4, #68]
 9176 00da 2046     		mov	r0, r4
 9177 00dc FFF7FEFF 		bl	I2C_ITError
 9178              	.LVL766:
 9179              	.L760:
5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9180              		.loc 1 5637 0
 9181 00e0 03B0     		add	sp, sp, #12
 9182              	.LCFI127:
 9183              		.cfi_remember_state
 9184              		.cfi_def_cfa_offset 12
 9185              		@ sp needed
 9186 00e2 30BD     		pop	{r4, r5, pc}
 9187              	.LVL767:
 9188              	.L775:
ARM GAS  /tmp/ccZ85PAS.s 			page 305


 9189              	.LCFI128:
 9190              		.cfi_restore_state
5566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9191              		.loc 1 5566 0
 9192 00e4 2023     		movs	r3, #32
 9193 00e6 84F84130 		strb	r3, [r4, #65]
5567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9194              		.loc 1 5567 0
 9195 00ea 0023     		movs	r3, #0
 9196 00ec 2363     		str	r3, [r4, #48]
5569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9197              		.loc 1 5569 0
 9198 00ee 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9199 00f2 DBB2     		uxtb	r3, r3
 9200 00f4 402B     		cmp	r3, #64
 9201 00f6 08D0     		beq	.L777
5585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9202              		.loc 1 5585 0
 9203 00f8 0023     		movs	r3, #0
 9204 00fa 84F84230 		strb	r3, [r4, #66]
5588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9205              		.loc 1 5588 0
 9206 00fe 84F84030 		strb	r3, [r4, #64]
5594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9207              		.loc 1 5594 0
 9208 0102 2046     		mov	r0, r4
 9209 0104 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 9210              	.LVL768:
 9211 0108 EAE7     		b	.L760
 9212              	.LVL769:
 9213              	.L777:
5571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9214              		.loc 1 5571 0
 9215 010a 0023     		movs	r3, #0
 9216 010c 84F84230 		strb	r3, [r4, #66]
5574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9217              		.loc 1 5574 0
 9218 0110 84F84030 		strb	r3, [r4, #64]
5580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9219              		.loc 1 5580 0
 9220 0114 2046     		mov	r0, r4
 9221 0116 FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 9222              	.LVL770:
 9223 011a E1E7     		b	.L760
 9224              	.LVL771:
 9225              	.L776:
5606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9226              		.loc 1 5606 0
 9227 011c 0023     		movs	r3, #0
 9228 011e 84F84230 		strb	r3, [r4, #66]
5609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9229              		.loc 1 5609 0
 9230 0122 84F84030 		strb	r3, [r4, #64]
5615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9231              		.loc 1 5615 0
 9232 0126 2046     		mov	r0, r4
 9233 0128 FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
ARM GAS  /tmp/ccZ85PAS.s 			page 306


 9234              	.LVL772:
 9235 012c D8E7     		b	.L760
 9236              		.cfi_endproc
 9237              	.LFE199:
 9239              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 9240              		.align	1
 9241              		.syntax unified
 9242              		.thumb
 9243              		.thumb_func
 9244              		.fpu fpv5-d16
 9246              	I2C_Master_ISR_IT:
 9247              	.LFB190:
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9248              		.loc 1 4632 0
 9249              		.cfi_startproc
 9250              		@ args = 0, pretend = 0, frame = 0
 9251              		@ frame_needed = 0, uses_anonymous_args = 0
 9252              	.LVL773:
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9253              		.loc 1 4637 0
 9254 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9255 0004 012B     		cmp	r3, #1
 9256 0006 00F0B980 		beq	.L792
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9257              		.loc 1 4632 0 discriminator 2
 9258 000a 70B5     		push	{r4, r5, r6, lr}
 9259              	.LCFI129:
 9260              		.cfi_def_cfa_offset 16
 9261              		.cfi_offset 4, -16
 9262              		.cfi_offset 5, -12
 9263              		.cfi_offset 6, -8
 9264              		.cfi_offset 14, -4
 9265 000c 82B0     		sub	sp, sp, #8
 9266              	.LCFI130:
 9267              		.cfi_def_cfa_offset 24
 9268 000e 0446     		mov	r4, r0
 9269 0010 0D46     		mov	r5, r1
 9270 0012 1646     		mov	r6, r2
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9271              		.loc 1 4637 0 discriminator 2
 9272 0014 0123     		movs	r3, #1
 9273 0016 80F84030 		strb	r3, [r0, #64]
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9274              		.loc 1 4639 0 discriminator 2
 9275 001a 11F0100F 		tst	r1, #16
 9276 001e 02D0     		beq	.L780
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9277              		.loc 1 4639 0 is_stmt 0 discriminator 1
 9278 0020 12F0100F 		tst	r2, #16
 9279 0024 22D1     		bne	.L797
 9280              	.L780:
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9281              		.loc 1 4652 0 is_stmt 1
 9282 0026 15F0040F 		tst	r5, #4
 9283 002a 29D0     		beq	.L782
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9284              		.loc 1 4652 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccZ85PAS.s 			page 307


 9285 002c 16F0040F 		tst	r6, #4
 9286 0030 26D0     		beq	.L782
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9287              		.loc 1 4655 0 is_stmt 1
 9288 0032 25F00405 		bic	r5, r5, #4
 9289              	.LVL774:
4658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9290              		.loc 1 4658 0
 9291 0036 636A     		ldr	r3, [r4, #36]
 9292 0038 2268     		ldr	r2, [r4]
 9293              	.LVL775:
 9294 003a 526A     		ldr	r2, [r2, #36]
 9295 003c 1A70     		strb	r2, [r3]
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9296              		.loc 1 4661 0
 9297 003e 636A     		ldr	r3, [r4, #36]
 9298 0040 0133     		adds	r3, r3, #1
 9299 0042 6362     		str	r3, [r4, #36]
4663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 9300              		.loc 1 4663 0
 9301 0044 238D     		ldrh	r3, [r4, #40]
 9302 0046 013B     		subs	r3, r3, #1
 9303 0048 2385     		strh	r3, [r4, #40]	@ movhi
4664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9304              		.loc 1 4664 0
 9305 004a 638D     		ldrh	r3, [r4, #42]
 9306 004c 9BB2     		uxth	r3, r3
 9307 004e 013B     		subs	r3, r3, #1
 9308 0050 9BB2     		uxth	r3, r3
 9309 0052 6385     		strh	r3, [r4, #42]	@ movhi
 9310              	.LVL776:
 9311              	.L781:
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9312              		.loc 1 4748 0
 9313 0054 15F0200F 		tst	r5, #32
 9314 0058 03D0     		beq	.L791
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9315              		.loc 1 4748 0 is_stmt 0 discriminator 1
 9316 005a 16F0200F 		tst	r6, #32
 9317 005e 40F08880 		bne	.L798
 9318              	.L791:
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9319              		.loc 1 4755 0 is_stmt 1
 9320 0062 0020     		movs	r0, #0
 9321 0064 84F84000 		strb	r0, [r4, #64]
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9322              		.loc 1 4758 0
 9323 0068 02B0     		add	sp, sp, #8
 9324              	.LCFI131:
 9325              		.cfi_remember_state
 9326              		.cfi_def_cfa_offset 16
 9327              		@ sp needed
 9328 006a 70BD     		pop	{r4, r5, r6, pc}
 9329              	.LVL777:
 9330              	.L797:
 9331              	.LCFI132:
 9332              		.cfi_restore_state
ARM GAS  /tmp/ccZ85PAS.s 			page 308


4642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9333              		.loc 1 4642 0
 9334 006c 0368     		ldr	r3, [r0]
 9335 006e 1022     		movs	r2, #16
 9336              	.LVL778:
 9337 0070 DA61     		str	r2, [r3, #28]
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9338              		.loc 1 4647 0
 9339 0072 436C     		ldr	r3, [r0, #68]
 9340 0074 43F00403 		orr	r3, r3, #4
 9341 0078 4364     		str	r3, [r0, #68]
4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9342              		.loc 1 4650 0
 9343 007a FFF7FEFF 		bl	I2C_Flush_TXDR
 9344              	.LVL779:
 9345 007e E9E7     		b	.L781
 9346              	.LVL780:
 9347              	.L782:
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9348              		.loc 1 4666 0
 9349 0080 15F0020F 		tst	r5, #2
 9350 0084 12D0     		beq	.L783
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9351              		.loc 1 4666 0 is_stmt 0 discriminator 1
 9352 0086 16F0020F 		tst	r6, #2
 9353 008a 0FD0     		beq	.L783
4669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9354              		.loc 1 4669 0 is_stmt 1
 9355 008c 2368     		ldr	r3, [r4]
 9356 008e 626A     		ldr	r2, [r4, #36]
 9357              	.LVL781:
 9358 0090 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9359 0092 9A62     		str	r2, [r3, #40]
4672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9360              		.loc 1 4672 0
 9361 0094 636A     		ldr	r3, [r4, #36]
 9362 0096 0133     		adds	r3, r3, #1
 9363 0098 6362     		str	r3, [r4, #36]
4674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 9364              		.loc 1 4674 0
 9365 009a 238D     		ldrh	r3, [r4, #40]
 9366 009c 013B     		subs	r3, r3, #1
 9367 009e 2385     		strh	r3, [r4, #40]	@ movhi
4675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9368              		.loc 1 4675 0
 9369 00a0 638D     		ldrh	r3, [r4, #42]
 9370 00a2 9BB2     		uxth	r3, r3
 9371 00a4 013B     		subs	r3, r3, #1
 9372 00a6 9BB2     		uxth	r3, r3
 9373 00a8 6385     		strh	r3, [r4, #42]	@ movhi
 9374 00aa D3E7     		b	.L781
 9375              	.LVL782:
 9376              	.L783:
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9377              		.loc 1 4677 0
 9378 00ac 15F0800F 		tst	r5, #128
 9379 00b0 3FD0     		beq	.L784
ARM GAS  /tmp/ccZ85PAS.s 			page 309


4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9380              		.loc 1 4677 0 is_stmt 0 discriminator 1
 9381 00b2 16F0400F 		tst	r6, #64
 9382 00b6 3CD0     		beq	.L784
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9383              		.loc 1 4679 0 is_stmt 1
 9384 00b8 638D     		ldrh	r3, [r4, #42]
 9385 00ba 9BB2     		uxth	r3, r3
 9386 00bc 5BB3     		cbz	r3, .L785
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9387              		.loc 1 4679 0 is_stmt 0 discriminator 1
 9388 00be 238D     		ldrh	r3, [r4, #40]
 9389 00c0 4BBB     		cbnz	r3, .L785
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9390              		.loc 1 4681 0 is_stmt 1
 9391 00c2 2368     		ldr	r3, [r4]
 9392 00c4 5968     		ldr	r1, [r3, #4]
 9393              	.LVL783:
 9394 00c6 C1F30901 		ubfx	r1, r1, #0, #10
 9395              	.LVL784:
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9396              		.loc 1 4683 0
 9397 00ca 638D     		ldrh	r3, [r4, #42]
 9398 00cc 9BB2     		uxth	r3, r3
 9399 00ce FF2B     		cmp	r3, #255
 9400 00d0 0ED8     		bhi	.L799
4690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9401              		.loc 1 4690 0
 9402 00d2 628D     		ldrh	r2, [r4, #42]
 9403              	.LVL785:
 9404 00d4 92B2     		uxth	r2, r2
 9405 00d6 2285     		strh	r2, [r4, #40]	@ movhi
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9406              		.loc 1 4691 0
 9407 00d8 E36A     		ldr	r3, [r4, #44]
 9408 00da 13F5803F 		cmn	r3, #65536
 9409 00de 11D0     		beq	.L787
4693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9410              		.loc 1 4693 0
 9411 00e0 E36A     		ldr	r3, [r4, #44]
 9412 00e2 0020     		movs	r0, #0
 9413              	.LVL786:
 9414 00e4 0090     		str	r0, [sp]
 9415 00e6 D2B2     		uxtb	r2, r2
 9416 00e8 2046     		mov	r0, r4
 9417 00ea FFF7FEFF 		bl	I2C_TransferConfig
 9418              	.LVL787:
 9419 00ee B1E7     		b	.L781
 9420              	.LVL788:
 9421              	.L799:
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
 9422              		.loc 1 4685 0
 9423 00f0 FF22     		movs	r2, #255
 9424              	.LVL789:
 9425 00f2 2285     		strh	r2, [r4, #40]	@ movhi
4686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9426              		.loc 1 4686 0
ARM GAS  /tmp/ccZ85PAS.s 			page 310


 9427 00f4 0023     		movs	r3, #0
 9428 00f6 0093     		str	r3, [sp]
 9429 00f8 4FF08073 		mov	r3, #16777216
 9430 00fc 2046     		mov	r0, r4
 9431              	.LVL790:
 9432 00fe FFF7FEFF 		bl	I2C_TransferConfig
 9433              	.LVL791:
 9434 0102 A7E7     		b	.L781
 9435              	.LVL792:
 9436              	.L787:
4697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9437              		.loc 1 4697 0
 9438 0104 0023     		movs	r3, #0
 9439 0106 0093     		str	r3, [sp]
 9440 0108 4FF00073 		mov	r3, #33554432
 9441 010c D2B2     		uxtb	r2, r2
 9442 010e 2046     		mov	r0, r4
 9443              	.LVL793:
 9444 0110 FFF7FEFF 		bl	I2C_TransferConfig
 9445              	.LVL794:
 9446 0114 9EE7     		b	.L781
 9447              	.LVL795:
 9448              	.L785:
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9449              		.loc 1 4704 0
 9450 0116 2368     		ldr	r3, [r4]
 9451 0118 5B68     		ldr	r3, [r3, #4]
 9452 011a 13F0007F 		tst	r3, #33554432
 9453 011e 03D1     		bne	.L788
4707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9454              		.loc 1 4707 0
 9455 0120 2046     		mov	r0, r4
 9456              	.LVL796:
 9457 0122 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9458              	.LVL797:
 9459 0126 95E7     		b	.L781
 9460              	.LVL798:
 9461              	.L788:
4713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9462              		.loc 1 4713 0
 9463 0128 4021     		movs	r1, #64
 9464              	.LVL799:
 9465 012a 2046     		mov	r0, r4
 9466              	.LVL800:
 9467 012c FFF7FEFF 		bl	I2C_ITError
 9468              	.LVL801:
 9469 0130 90E7     		b	.L781
 9470              	.LVL802:
 9471              	.L784:
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9472              		.loc 1 4717 0
 9473 0132 15F0400F 		tst	r5, #64
 9474 0136 8DD0     		beq	.L781
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9475              		.loc 1 4717 0 is_stmt 0 discriminator 1
 9476 0138 16F0400F 		tst	r6, #64
 9477 013c 8AD0     		beq	.L781
ARM GAS  /tmp/ccZ85PAS.s 			page 311


4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9478              		.loc 1 4719 0 is_stmt 1
 9479 013e 638D     		ldrh	r3, [r4, #42]
 9480 0140 9BB2     		uxth	r3, r3
 9481 0142 8BB9     		cbnz	r3, .L789
4721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9482              		.loc 1 4721 0
 9483 0144 2368     		ldr	r3, [r4]
 9484 0146 5A68     		ldr	r2, [r3, #4]
 9485              	.LVL803:
 9486 0148 12F0007F 		tst	r2, #33554432
 9487 014c 82D1     		bne	.L781
4724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9488              		.loc 1 4724 0
 9489 014e E26A     		ldr	r2, [r4, #44]
 9490 0150 12F5803F 		cmn	r2, #65536
 9491 0154 03D0     		beq	.L800
4732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9492              		.loc 1 4732 0
 9493 0156 2046     		mov	r0, r4
 9494              	.LVL804:
 9495 0158 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9496              	.LVL805:
 9497 015c 7AE7     		b	.L781
 9498              	.LVL806:
 9499              	.L800:
4727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9500              		.loc 1 4727 0
 9501 015e 5A68     		ldr	r2, [r3, #4]
 9502 0160 42F48042 		orr	r2, r2, #16384
 9503 0164 5A60     		str	r2, [r3, #4]
 9504 0166 75E7     		b	.L781
 9505              	.LVL807:
 9506              	.L789:
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9507              		.loc 1 4740 0
 9508 0168 4021     		movs	r1, #64
 9509              	.LVL808:
 9510 016a 2046     		mov	r0, r4
 9511              	.LVL809:
 9512 016c FFF7FEFF 		bl	I2C_ITError
 9513              	.LVL810:
 9514 0170 70E7     		b	.L781
 9515              	.LVL811:
 9516              	.L798:
4751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9517              		.loc 1 4751 0
 9518 0172 2946     		mov	r1, r5
 9519 0174 2046     		mov	r0, r4
 9520 0176 FFF7FEFF 		bl	I2C_ITMasterCplt
 9521              	.LVL812:
 9522 017a 72E7     		b	.L791
 9523              	.LVL813:
 9524              	.L792:
 9525              	.LCFI133:
 9526              		.cfi_def_cfa_offset 0
 9527              		.cfi_restore 4
ARM GAS  /tmp/ccZ85PAS.s 			page 312


 9528              		.cfi_restore 5
 9529              		.cfi_restore 6
 9530              		.cfi_restore 14
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9531              		.loc 1 4637 0
 9532 017c 0220     		movs	r0, #2
 9533              	.LVL814:
 9534 017e 7047     		bx	lr
 9535              		.cfi_endproc
 9536              	.LFE190:
 9538              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 9539              		.align	1
 9540              		.syntax unified
 9541              		.thumb
 9542              		.thumb_func
 9543              		.fpu fpv5-d16
 9545              	I2C_Slave_ISR_DMA:
 9546              	.LFB193:
5039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 9547              		.loc 1 5039 0
 9548              		.cfi_startproc
 9549              		@ args = 0, pretend = 0, frame = 0
 9550              		@ frame_needed = 0, uses_anonymous_args = 0
 9551              	.LVL815:
 9552 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9553              	.LCFI134:
 9554              		.cfi_def_cfa_offset 24
 9555              		.cfi_offset 3, -24
 9556              		.cfi_offset 4, -20
 9557              		.cfi_offset 5, -16
 9558              		.cfi_offset 6, -12
 9559              		.cfi_offset 7, -8
 9560              		.cfi_offset 14, -4
5040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
 9561              		.loc 1 5040 0
 9562 0002 C76A     		ldr	r7, [r0, #44]
 9563              	.LVL816:
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9564              		.loc 1 5045 0
 9565 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9566 0008 012B     		cmp	r3, #1
 9567 000a 00F08880 		beq	.L814
 9568 000e 1646     		mov	r6, r2
 9569 0010 0C46     		mov	r4, r1
 9570 0012 0546     		mov	r5, r0
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9571              		.loc 1 5045 0 is_stmt 0 discriminator 2
 9572 0014 0123     		movs	r3, #1
 9573 0016 80F84030 		strb	r3, [r0, #64]
5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9574              		.loc 1 5048 0 is_stmt 1 discriminator 2
 9575 001a 11F0200F 		tst	r1, #32
 9576 001e 02D0     		beq	.L803
5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9577              		.loc 1 5048 0 is_stmt 0 discriminator 1
 9578 0020 12F0200F 		tst	r2, #32
 9579 0024 12D1     		bne	.L820
ARM GAS  /tmp/ccZ85PAS.s 			page 313


 9580              	.LVL817:
 9581              	.L803:
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9582              		.loc 1 5054 0 is_stmt 1
 9583 0026 14F0100F 		tst	r4, #16
 9584 002a 69D0     		beq	.L804
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9585              		.loc 1 5054 0 is_stmt 0 discriminator 1
 9586 002c 16F0100F 		tst	r6, #16
 9587 0030 66D0     		beq	.L804
5060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9588              		.loc 1 5060 0 is_stmt 1
 9589 0032 16F4404F 		tst	r6, #49152
 9590 0036 5FD0     		beq	.L805
5064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9591              		.loc 1 5064 0
 9592 0038 EB6B     		ldr	r3, [r5, #60]
 9593 003a 53B1     		cbz	r3, .L815
5066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9594              		.loc 1 5066 0
 9595 003c 16F4004F 		tst	r6, #32768
 9596 0040 09D0     		beq	.L816
5068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9597              		.loc 1 5068 0
 9598 0042 1B68     		ldr	r3, [r3]
 9599 0044 5B68     		ldr	r3, [r3, #4]
 9600 0046 5BB3     		cbz	r3, .L817
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
 9601              		.loc 1 5041 0
 9602 0048 0022     		movs	r2, #0
 9603 004a 05E0     		b	.L806
 9604              	.LVL818:
 9605              	.L820:
5051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9606              		.loc 1 5051 0
 9607 004c FFF7FEFF 		bl	I2C_ITSlaveCplt
 9608              	.LVL819:
 9609 0050 E9E7     		b	.L803
 9610              	.L815:
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
 9611              		.loc 1 5041 0
 9612 0052 0022     		movs	r2, #0
 9613 0054 00E0     		b	.L806
 9614              	.L816:
 9615 0056 0022     		movs	r2, #0
 9616              	.L806:
 9617              	.LVL820:
5076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9618              		.loc 1 5076 0
 9619 0058 AB6B     		ldr	r3, [r5, #56]
 9620 005a 33B1     		cbz	r3, .L807
5078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9621              		.loc 1 5078 0
 9622 005c 16F4804F 		tst	r6, #16384
 9623 0060 03D0     		beq	.L807
5080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9624              		.loc 1 5080 0
ARM GAS  /tmp/ccZ85PAS.s 			page 314


 9625 0062 1B68     		ldr	r3, [r3]
 9626 0064 5B68     		ldr	r3, [r3, #4]
 9627 0066 03B9     		cbnz	r3, .L807
5082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9628              		.loc 1 5082 0
 9629 0068 0122     		movs	r2, #1
 9630              	.LVL821:
 9631              	.L807:
5087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9632              		.loc 1 5087 0
 9633 006a DAB9     		cbnz	r2, .L821
5117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9634              		.loc 1 5117 0
 9635 006c 2B68     		ldr	r3, [r5]
 9636 006e 1022     		movs	r2, #16
 9637              	.LVL822:
 9638 0070 DA61     		str	r2, [r3, #28]
5120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9639              		.loc 1 5120 0
 9640 0072 6B6C     		ldr	r3, [r5, #68]
 9641 0074 43F00403 		orr	r3, r3, #4
 9642 0078 6B64     		str	r3, [r5, #68]
5123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9643              		.loc 1 5123 0
 9644 007a 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9645 007e DBB2     		uxtb	r3, r3
 9646              	.LVL823:
5125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9647              		.loc 1 5125 0
 9648 0080 B7F1807F 		cmp	r7, #16777216
 9649 0084 18BF     		it	ne
 9650 0086 002F     		cmpne	r7, #0
 9651 0088 40D1     		bne	.L810
5127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9652              		.loc 1 5127 0
 9653 008a 292B     		cmp	r3, #41
 9654 008c 18BF     		it	ne
 9655 008e 212B     		cmpne	r3, #33
 9656 0090 2BD1     		bne	.L812
5129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9657              		.loc 1 5129 0
 9658 0092 2123     		movs	r3, #33
 9659              	.LVL824:
 9660 0094 2B63     		str	r3, [r5, #48]
 9661              	.L813:
5141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9662              		.loc 1 5141 0
 9663 0096 696C     		ldr	r1, [r5, #68]
 9664 0098 2846     		mov	r0, r5
 9665 009a FFF7FEFF 		bl	I2C_ITError
 9666              	.LVL825:
 9667 009e 35E0     		b	.L810
 9668              	.LVL826:
 9669              	.L817:
5070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9670              		.loc 1 5070 0
 9671 00a0 0122     		movs	r2, #1
ARM GAS  /tmp/ccZ85PAS.s 			page 315


 9672 00a2 D9E7     		b	.L806
 9673              	.LVL827:
 9674              	.L821:
5090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9675              		.loc 1 5090 0
 9676 00a4 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9677 00a8 DBB2     		uxtb	r3, r3
 9678 00aa 282B     		cmp	r3, #40
 9679 00ac 08D0     		beq	.L822
 9680              	.L809:
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9681              		.loc 1 5095 0
 9682 00ae 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9683 00b2 DBB2     		uxtb	r3, r3
 9684 00b4 292B     		cmp	r3, #41
 9685 00b6 0BD0     		beq	.L823
 9686              	.L811:
5110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9687              		.loc 1 5110 0
 9688 00b8 2B68     		ldr	r3, [r5]
 9689 00ba 1022     		movs	r2, #16
 9690              	.LVL828:
 9691 00bc DA61     		str	r2, [r3, #28]
 9692 00be 25E0     		b	.L810
 9693              	.LVL829:
 9694              	.L822:
5090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9695              		.loc 1 5090 0 discriminator 1
 9696 00c0 B7F1007F 		cmp	r7, #33554432
 9697 00c4 F3D1     		bne	.L809
5093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9698              		.loc 1 5093 0
 9699 00c6 2146     		mov	r1, r4
 9700 00c8 2846     		mov	r0, r5
 9701 00ca FFF7FEFF 		bl	I2C_ITListenCplt
 9702              	.LVL830:
 9703 00ce 1DE0     		b	.L810
 9704              	.LVL831:
 9705              	.L823:
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9706              		.loc 1 5095 0 discriminator 1
 9707 00d0 17F5803F 		cmn	r7, #65536
 9708 00d4 F0D0     		beq	.L811
5098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9709              		.loc 1 5098 0
 9710 00d6 2B68     		ldr	r3, [r5]
 9711 00d8 1022     		movs	r2, #16
 9712              	.LVL832:
 9713 00da DA61     		str	r2, [r3, #28]
5101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9714              		.loc 1 5101 0
 9715 00dc 2846     		mov	r0, r5
 9716 00de FFF7FEFF 		bl	I2C_Flush_TXDR
 9717              	.LVL833:
5105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9718              		.loc 1 5105 0
 9719 00e2 2846     		mov	r0, r5
ARM GAS  /tmp/ccZ85PAS.s 			page 316


 9720 00e4 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9721              	.LVL834:
 9722 00e8 10E0     		b	.L810
 9723              	.LVL835:
 9724              	.L812:
5131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9725              		.loc 1 5131 0
 9726 00ea 2A2B     		cmp	r3, #42
 9727 00ec 18BF     		it	ne
 9728 00ee 222B     		cmpne	r3, #34
 9729 00f0 D1D1     		bne	.L813
5133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9730              		.loc 1 5133 0
 9731 00f2 2223     		movs	r3, #34
 9732              	.LVL836:
 9733 00f4 2B63     		str	r3, [r5, #48]
 9734 00f6 CEE7     		b	.L813
 9735              	.LVL837:
 9736              	.L805:
5148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9737              		.loc 1 5148 0
 9738 00f8 2B68     		ldr	r3, [r5]
 9739 00fa 1022     		movs	r2, #16
 9740 00fc DA61     		str	r2, [r3, #28]
 9741 00fe 05E0     		b	.L810
 9742              	.L804:
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9743              		.loc 1 5151 0
 9744 0100 14F0080F 		tst	r4, #8
 9745 0104 02D0     		beq	.L810
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9746              		.loc 1 5151 0 is_stmt 0 discriminator 1
 9747 0106 16F0080F 		tst	r6, #8
 9748 010a 03D1     		bne	.L824
 9749              	.LVL838:
 9750              	.L810:
5161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9751              		.loc 1 5161 0 is_stmt 1
 9752 010c 0020     		movs	r0, #0
 9753 010e 85F84000 		strb	r0, [r5, #64]
5163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 9754              		.loc 1 5163 0
 9755 0112 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9756              	.LVL839:
 9757              	.L824:
5153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9758              		.loc 1 5153 0
 9759 0114 2146     		mov	r1, r4
 9760 0116 2846     		mov	r0, r5
 9761 0118 FFF7FEFF 		bl	I2C_ITAddrCplt
 9762              	.LVL840:
 9763 011c F6E7     		b	.L810
 9764              	.LVL841:
 9765              	.L814:
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9766              		.loc 1 5045 0
 9767 011e 0220     		movs	r0, #2
ARM GAS  /tmp/ccZ85PAS.s 			page 317


 9768              	.LVL842:
5164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9769              		.loc 1 5164 0
 9770 0120 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9771              		.cfi_endproc
 9772              	.LFE193:
 9774              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 9775              		.align	1
 9776              		.syntax unified
 9777              		.thumb
 9778              		.thumb_func
 9779              		.fpu fpv5-d16
 9781              	I2C_Master_ISR_DMA:
 9782              	.LFB192:
4904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9783              		.loc 1 4904 0
 9784              		.cfi_startproc
 9785              		@ args = 0, pretend = 0, frame = 0
 9786              		@ frame_needed = 0, uses_anonymous_args = 0
 9787              	.LVL843:
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9788              		.loc 1 4909 0
 9789 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9790 0004 012B     		cmp	r3, #1
 9791 0006 00F09B80 		beq	.L838
4904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9792              		.loc 1 4904 0 discriminator 2
 9793 000a 10B5     		push	{r4, lr}
 9794              	.LCFI135:
 9795              		.cfi_def_cfa_offset 8
 9796              		.cfi_offset 4, -8
 9797              		.cfi_offset 14, -4
 9798 000c 82B0     		sub	sp, sp, #8
 9799              	.LCFI136:
 9800              		.cfi_def_cfa_offset 16
 9801 000e 0446     		mov	r4, r0
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9802              		.loc 1 4909 0 discriminator 2
 9803 0010 0123     		movs	r3, #1
 9804 0012 80F84030 		strb	r3, [r0, #64]
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9805              		.loc 1 4911 0 discriminator 2
 9806 0016 11F0100F 		tst	r1, #16
 9807 001a 02D0     		beq	.L827
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9808              		.loc 1 4911 0 is_stmt 0 discriminator 1
 9809 001c 12F0100F 		tst	r2, #16
 9810 0020 32D1     		bne	.L844
 9811              	.L827:
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9812              		.loc 1 4927 0 is_stmt 1
 9813 0022 11F0800F 		tst	r1, #128
 9814 0026 5CD0     		beq	.L829
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9815              		.loc 1 4927 0 is_stmt 0 discriminator 1
 9816 0028 12F0400F 		tst	r2, #64
 9817 002c 59D0     		beq	.L829
ARM GAS  /tmp/ccZ85PAS.s 			page 318


4930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9818              		.loc 1 4930 0 is_stmt 1
 9819 002e 2268     		ldr	r2, [r4]
 9820              	.LVL844:
 9821 0030 1368     		ldr	r3, [r2]
 9822 0032 23F04003 		bic	r3, r3, #64
 9823 0036 1360     		str	r3, [r2]
4932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9824              		.loc 1 4932 0
 9825 0038 638D     		ldrh	r3, [r4, #42]
 9826 003a 9BB2     		uxth	r3, r3
 9827 003c 002B     		cmp	r3, #0
 9828 003e 42D0     		beq	.L830
4935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9829              		.loc 1 4935 0
 9830 0040 2368     		ldr	r3, [r4]
 9831 0042 5968     		ldr	r1, [r3, #4]
 9832              	.LVL845:
 9833 0044 C1F30901 		ubfx	r1, r1, #0, #10
 9834              	.LVL846:
4938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9835              		.loc 1 4938 0
 9836 0048 638D     		ldrh	r3, [r4, #42]
 9837 004a 9BB2     		uxth	r3, r3
 9838 004c FF2B     		cmp	r3, #255
 9839 004e 29D9     		bls	.L831
4940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 9840              		.loc 1 4940 0
 9841 0050 FF23     		movs	r3, #255
 9842 0052 2385     		strh	r3, [r4, #40]	@ movhi
 9843              	.LVL847:
4941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9844              		.loc 1 4941 0
 9845 0054 4FF08073 		mov	r3, #16777216
 9846              	.LVL848:
 9847              	.L832:
4957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9848              		.loc 1 4957 0
 9849 0058 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 9850 005c 0020     		movs	r0, #0
 9851              	.LVL849:
 9852 005e 0090     		str	r0, [sp]
 9853 0060 2046     		mov	r0, r4
 9854 0062 FFF7FEFF 		bl	I2C_TransferConfig
 9855              	.LVL850:
4960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9856              		.loc 1 4960 0
 9857 0066 638D     		ldrh	r3, [r4, #42]
 9858 0068 9BB2     		uxth	r3, r3
 9859 006a 228D     		ldrh	r2, [r4, #40]
 9860 006c 9B1A     		subs	r3, r3, r2
 9861 006e 9BB2     		uxth	r3, r3
 9862 0070 6385     		strh	r3, [r4, #42]	@ movhi
4963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9863              		.loc 1 4963 0
 9864 0072 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9865 0076 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccZ85PAS.s 			page 319


 9866 0078 222B     		cmp	r3, #34
 9867 007a 1ED0     		beq	.L845
4969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9868              		.loc 1 4969 0
 9869 007c 2268     		ldr	r2, [r4]
 9870 007e 1368     		ldr	r3, [r2]
 9871 0080 43F48043 		orr	r3, r3, #16384
 9872 0084 1360     		str	r3, [r2]
 9873 0086 52E0     		b	.L828
 9874              	.LVL851:
 9875              	.L844:
4914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9876              		.loc 1 4914 0
 9877 0088 0368     		ldr	r3, [r0]
 9878 008a 1022     		movs	r2, #16
 9879              	.LVL852:
 9880 008c DA61     		str	r2, [r3, #28]
4917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9881              		.loc 1 4917 0
 9882 008e 436C     		ldr	r3, [r0, #68]
 9883 0090 43F00403 		orr	r3, r3, #4
 9884 0094 4364     		str	r3, [r0, #68]
4922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9885              		.loc 1 4922 0
 9886 0096 2021     		movs	r1, #32
 9887              	.LVL853:
 9888 0098 FFF7FEFF 		bl	I2C_Enable_IRQ
 9889              	.LVL854:
4925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9890              		.loc 1 4925 0
 9891 009c 2046     		mov	r0, r4
 9892 009e FFF7FEFF 		bl	I2C_Flush_TXDR
 9893              	.LVL855:
 9894 00a2 44E0     		b	.L828
 9895              	.LVL856:
 9896              	.L831:
4945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9897              		.loc 1 4945 0
 9898 00a4 638D     		ldrh	r3, [r4, #42]
 9899 00a6 2385     		strh	r3, [r4, #40]	@ movhi
4946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9900              		.loc 1 4946 0
 9901 00a8 E36A     		ldr	r3, [r4, #44]
 9902 00aa 13F5803F 		cmn	r3, #65536
 9903 00ae 01D0     		beq	.L839
4948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9904              		.loc 1 4948 0
 9905 00b0 E36A     		ldr	r3, [r4, #44]
 9906              	.LVL857:
 9907 00b2 D1E7     		b	.L832
 9908              	.LVL858:
 9909              	.L839:
4952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9910              		.loc 1 4952 0
 9911 00b4 4FF00073 		mov	r3, #33554432
 9912 00b8 CEE7     		b	.L832
 9913              	.LVL859:
ARM GAS  /tmp/ccZ85PAS.s 			page 320


 9914              	.L845:
4965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9915              		.loc 1 4965 0
 9916 00ba 2268     		ldr	r2, [r4]
 9917 00bc 1368     		ldr	r3, [r2]
 9918 00be 43F40043 		orr	r3, r3, #32768
 9919 00c2 1360     		str	r3, [r2]
 9920 00c4 33E0     		b	.L828
 9921              	.LVL860:
 9922              	.L830:
4975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9923              		.loc 1 4975 0
 9924 00c6 2368     		ldr	r3, [r4]
 9925 00c8 5B68     		ldr	r3, [r3, #4]
 9926 00ca 13F0007F 		tst	r3, #33554432
 9927 00ce 03D1     		bne	.L834
4978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9928              		.loc 1 4978 0
 9929 00d0 2046     		mov	r0, r4
 9930              	.LVL861:
 9931 00d2 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9932              	.LVL862:
 9933 00d6 2AE0     		b	.L828
 9934              	.LVL863:
 9935              	.L834:
4984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9936              		.loc 1 4984 0
 9937 00d8 4021     		movs	r1, #64
 9938              	.LVL864:
 9939 00da 2046     		mov	r0, r4
 9940              	.LVL865:
 9941 00dc FFF7FEFF 		bl	I2C_ITError
 9942              	.LVL866:
 9943 00e0 25E0     		b	.L828
 9944              	.LVL867:
 9945              	.L829:
4988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9946              		.loc 1 4988 0
 9947 00e2 11F0400F 		tst	r1, #64
 9948 00e6 1CD0     		beq	.L835
4988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9949              		.loc 1 4988 0 is_stmt 0 discriminator 1
 9950 00e8 12F0400F 		tst	r2, #64
 9951 00ec 19D0     		beq	.L835
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9952              		.loc 1 4990 0 is_stmt 1
 9953 00ee 638D     		ldrh	r3, [r4, #42]
 9954 00f0 9BB2     		uxth	r3, r3
 9955 00f2 8BB9     		cbnz	r3, .L836
4992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9956              		.loc 1 4992 0
 9957 00f4 2368     		ldr	r3, [r4]
 9958 00f6 5A68     		ldr	r2, [r3, #4]
 9959              	.LVL868:
 9960 00f8 12F0007F 		tst	r2, #33554432
 9961 00fc 17D1     		bne	.L828
4995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccZ85PAS.s 			page 321


 9962              		.loc 1 4995 0
 9963 00fe E26A     		ldr	r2, [r4, #44]
 9964 0100 12F5803F 		cmn	r2, #65536
 9965 0104 03D0     		beq	.L846
5003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9966              		.loc 1 5003 0
 9967 0106 2046     		mov	r0, r4
 9968              	.LVL869:
 9969 0108 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9970              	.LVL870:
 9971 010c 0FE0     		b	.L828
 9972              	.LVL871:
 9973              	.L846:
4998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9974              		.loc 1 4998 0
 9975 010e 5A68     		ldr	r2, [r3, #4]
 9976 0110 42F48042 		orr	r2, r2, #16384
 9977 0114 5A60     		str	r2, [r3, #4]
 9978 0116 0AE0     		b	.L828
 9979              	.LVL872:
 9980              	.L836:
5011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9981              		.loc 1 5011 0
 9982 0118 4021     		movs	r1, #64
 9983              	.LVL873:
 9984 011a 2046     		mov	r0, r4
 9985              	.LVL874:
 9986 011c FFF7FEFF 		bl	I2C_ITError
 9987              	.LVL875:
 9988 0120 05E0     		b	.L828
 9989              	.LVL876:
 9990              	.L835:
5014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9991              		.loc 1 5014 0
 9992 0122 11F0200F 		tst	r1, #32
 9993 0126 02D0     		beq	.L828
5014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9994              		.loc 1 5014 0 is_stmt 0 discriminator 1
 9995 0128 12F0200F 		tst	r2, #32
 9996 012c 04D1     		bne	.L847
 9997              	.LVL877:
 9998              	.L828:
5025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9999              		.loc 1 5025 0 is_stmt 1
 10000 012e 0020     		movs	r0, #0
 10001 0130 84F84000 		strb	r0, [r4, #64]
5028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10002              		.loc 1 5028 0
 10003 0134 02B0     		add	sp, sp, #8
 10004              	.LCFI137:
 10005              		.cfi_remember_state
 10006              		.cfi_def_cfa_offset 8
 10007              		@ sp needed
 10008 0136 10BD     		pop	{r4, pc}
 10009              	.LVL878:
 10010              	.L847:
 10011              	.LCFI138:
ARM GAS  /tmp/ccZ85PAS.s 			page 322


 10012              		.cfi_restore_state
5017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10013              		.loc 1 5017 0
 10014 0138 2046     		mov	r0, r4
 10015              	.LVL879:
 10016 013a FFF7FEFF 		bl	I2C_ITMasterCplt
 10017              	.LVL880:
 10018 013e F6E7     		b	.L828
 10019              	.LVL881:
 10020              	.L838:
 10021              	.LCFI139:
 10022              		.cfi_def_cfa_offset 0
 10023              		.cfi_restore 4
 10024              		.cfi_restore 14
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10025              		.loc 1 4909 0
 10026 0140 0220     		movs	r0, #2
 10027              	.LVL882:
 10028 0142 7047     		bx	lr
 10029              		.cfi_endproc
 10030              	.LFE192:
 10032              		.section	.text.I2C_DMAError,"ax",%progbits
 10033              		.align	1
 10034              		.syntax unified
 10035              		.thumb
 10036              		.thumb_func
 10037              		.fpu fpv5-d16
 10039              	I2C_DMAError:
 10040              	.LFB209:
6177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
 10041              		.loc 1 6177 0
 10042              		.cfi_startproc
 10043              		@ args = 0, pretend = 0, frame = 0
 10044              		@ frame_needed = 0, uses_anonymous_args = 0
 10045              	.LVL883:
 10046 0000 38B5     		push	{r3, r4, r5, lr}
 10047              	.LCFI140:
 10048              		.cfi_def_cfa_offset 16
 10049              		.cfi_offset 3, -16
 10050              		.cfi_offset 4, -12
 10051              		.cfi_offset 5, -8
 10052              		.cfi_offset 14, -4
 10053              	.LVL884:
6179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10054              		.loc 1 6179 0
 10055 0002 846B     		ldr	r4, [r0, #56]
 10056              	.LVL885:
6181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10057              		.loc 1 6181 0
 10058 0004 A36B     		ldr	r3, [r4, #56]
 10059 0006 7BB1     		cbz	r3, .L852
6183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10060              		.loc 1 6183 0
 10061 0008 1B68     		ldr	r3, [r3]
 10062 000a 5B68     		ldr	r3, [r3, #4]
 10063 000c 73B1     		cbz	r3, .L853
6178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
ARM GAS  /tmp/ccZ85PAS.s 			page 323


 10064              		.loc 1 6178 0
 10065 000e 0025     		movs	r5, #0
 10066              	.L849:
 10067              	.LVL886:
6189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10068              		.loc 1 6189 0
 10069 0010 E36B     		ldr	r3, [r4, #60]
 10070 0012 1BB1     		cbz	r3, .L850
6191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10071              		.loc 1 6191 0
 10072 0014 1B68     		ldr	r3, [r3]
 10073 0016 5B68     		ldr	r3, [r3, #4]
 10074 0018 03B9     		cbnz	r3, .L850
6193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10075              		.loc 1 6193 0
 10076 001a 0125     		movs	r5, #1
 10077              	.LVL887:
 10078              	.L850:
6198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10079              		.loc 1 6198 0
 10080 001c FFF7FEFF 		bl	HAL_DMA_GetError
 10081              	.LVL888:
 10082 0020 0228     		cmp	r0, #2
 10083 0022 00D0     		beq	.L848
6198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10084              		.loc 1 6198 0 is_stmt 0 discriminator 1
 10085 0024 25B9     		cbnz	r5, .L856
 10086              	.L848:
 10087 0026 38BD     		pop	{r3, r4, r5, pc}
 10088              	.LVL889:
 10089              	.L852:
6178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10090              		.loc 1 6178 0 is_stmt 1
 10091 0028 0025     		movs	r5, #0
 10092 002a F1E7     		b	.L849
 10093              	.L853:
6185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10094              		.loc 1 6185 0
 10095 002c 0125     		movs	r5, #1
 10096 002e EFE7     		b	.L849
 10097              	.LVL890:
 10098              	.L856:
6201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10099              		.loc 1 6201 0
 10100 0030 2268     		ldr	r2, [r4]
 10101 0032 5368     		ldr	r3, [r2, #4]
 10102 0034 43F40043 		orr	r3, r3, #32768
 10103 0038 5360     		str	r3, [r2, #4]
6204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10104              		.loc 1 6204 0
 10105 003a 1021     		movs	r1, #16
 10106 003c 2046     		mov	r0, r4
 10107 003e FFF7FEFF 		bl	I2C_ITError
 10108              	.LVL891:
6206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10109              		.loc 1 6206 0
 10110 0042 F0E7     		b	.L848
ARM GAS  /tmp/ccZ85PAS.s 			page 324


 10111              		.cfi_endproc
 10112              	.LFE209:
 10114              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 10115              		.align	1
 10116              		.syntax unified
 10117              		.thumb
 10118              		.thumb_func
 10119              		.fpu fpv5-d16
 10121              	I2C_DMAMasterTransmitCplt:
 10122              	.LFB205:
6027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10123              		.loc 1 6027 0
 10124              		.cfi_startproc
 10125              		@ args = 0, pretend = 0, frame = 0
 10126              		@ frame_needed = 0, uses_anonymous_args = 0
 10127              	.LVL892:
 10128 0000 10B5     		push	{r4, lr}
 10129              	.LCFI141:
 10130              		.cfi_def_cfa_offset 8
 10131              		.cfi_offset 4, -8
 10132              		.cfi_offset 14, -4
6028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10133              		.loc 1 6028 0
 10134 0002 846B     		ldr	r4, [r0, #56]
 10135              	.LVL893:
6031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10136              		.loc 1 6031 0
 10137 0004 2268     		ldr	r2, [r4]
 10138 0006 1368     		ldr	r3, [r2]
 10139 0008 23F48043 		bic	r3, r3, #16384
 10140 000c 1360     		str	r3, [r2]
6034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10141              		.loc 1 6034 0
 10142 000e 638D     		ldrh	r3, [r4, #42]
 10143 0010 9BB2     		uxth	r3, r3
 10144 0012 ABB1     		cbz	r3, .L864
6043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10145              		.loc 1 6043 0
 10146 0014 238D     		ldrh	r3, [r4, #40]
 10147 0016 616A     		ldr	r1, [r4, #36]
 10148 0018 1944     		add	r1, r1, r3
 10149 001a 6162     		str	r1, [r4, #36]
6046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10150              		.loc 1 6046 0
 10151 001c 638D     		ldrh	r3, [r4, #42]
 10152 001e 9BB2     		uxth	r3, r3
 10153 0020 FF2B     		cmp	r3, #255
 10154 0022 12D9     		bls	.L860
6048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10155              		.loc 1 6048 0
 10156 0024 FF23     		movs	r3, #255
 10157 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10158              	.L861:
6056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10159              		.loc 1 6056 0
 10160 0028 2268     		ldr	r2, [r4]
 10161 002a 238D     		ldrh	r3, [r4, #40]
ARM GAS  /tmp/ccZ85PAS.s 			page 325


 10162 002c 2832     		adds	r2, r2, #40
 10163 002e A06B     		ldr	r0, [r4, #56]
 10164              	.LVL894:
 10165 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10166              	.LVL895:
 10167 0034 60B9     		cbnz	r0, .L865
6064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10168              		.loc 1 6064 0
 10169 0036 4021     		movs	r1, #64
 10170 0038 2046     		mov	r0, r4
 10171 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10172              	.LVL896:
 10173 003e 10BD     		pop	{r4, pc}
 10174              	.LVL897:
 10175              	.L864:
6037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10176              		.loc 1 6037 0
 10177 0040 2021     		movs	r1, #32
 10178 0042 2046     		mov	r0, r4
 10179              	.LVL898:
 10180 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10181              	.LVL899:
 10182 0048 10BD     		pop	{r4, pc}
 10183              	.LVL900:
 10184              	.L860:
6052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10185              		.loc 1 6052 0
 10186 004a 638D     		ldrh	r3, [r4, #42]
 10187 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10188 004e EBE7     		b	.L861
 10189              	.LVL901:
 10190              	.L865:
6059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10191              		.loc 1 6059 0
 10192 0050 1021     		movs	r1, #16
 10193 0052 2046     		mov	r0, r4
 10194 0054 FFF7FEFF 		bl	I2C_ITError
 10195              	.LVL902:
 10196 0058 10BD     		pop	{r4, pc}
 10197              		.cfi_endproc
 10198              	.LFE205:
 10200              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 10201              		.align	1
 10202              		.syntax unified
 10203              		.thumb
 10204              		.thumb_func
 10205              		.fpu fpv5-d16
 10207              	I2C_DMAMasterReceiveCplt:
 10208              	.LFB207:
6102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10209              		.loc 1 6102 0
 10210              		.cfi_startproc
 10211              		@ args = 0, pretend = 0, frame = 0
 10212              		@ frame_needed = 0, uses_anonymous_args = 0
 10213              	.LVL903:
 10214 0000 10B5     		push	{r4, lr}
 10215              	.LCFI142:
ARM GAS  /tmp/ccZ85PAS.s 			page 326


 10216              		.cfi_def_cfa_offset 8
 10217              		.cfi_offset 4, -8
 10218              		.cfi_offset 14, -4
6103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10219              		.loc 1 6103 0
 10220 0002 846B     		ldr	r4, [r0, #56]
 10221              	.LVL904:
6106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10222              		.loc 1 6106 0
 10223 0004 2268     		ldr	r2, [r4]
 10224 0006 1368     		ldr	r3, [r2]
 10225 0008 23F40043 		bic	r3, r3, #32768
 10226 000c 1360     		str	r3, [r2]
6109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10227              		.loc 1 6109 0
 10228 000e 638D     		ldrh	r3, [r4, #42]
 10229 0010 9BB2     		uxth	r3, r3
 10230 0012 ABB1     		cbz	r3, .L873
6118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10231              		.loc 1 6118 0
 10232 0014 238D     		ldrh	r3, [r4, #40]
 10233 0016 626A     		ldr	r2, [r4, #36]
 10234 0018 1A44     		add	r2, r2, r3
 10235 001a 6262     		str	r2, [r4, #36]
6121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10236              		.loc 1 6121 0
 10237 001c 638D     		ldrh	r3, [r4, #42]
 10238 001e 9BB2     		uxth	r3, r3
 10239 0020 FF2B     		cmp	r3, #255
 10240 0022 12D9     		bls	.L869
6123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10241              		.loc 1 6123 0
 10242 0024 FF23     		movs	r3, #255
 10243 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10244              	.L870:
6131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10245              		.loc 1 6131 0
 10246 0028 2168     		ldr	r1, [r4]
 10247 002a 238D     		ldrh	r3, [r4, #40]
 10248 002c 2431     		adds	r1, r1, #36
 10249 002e E06B     		ldr	r0, [r4, #60]
 10250              	.LVL905:
 10251 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10252              	.LVL906:
 10253 0034 60B9     		cbnz	r0, .L874
6139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10254              		.loc 1 6139 0
 10255 0036 4021     		movs	r1, #64
 10256 0038 2046     		mov	r0, r4
 10257 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10258              	.LVL907:
 10259 003e 10BD     		pop	{r4, pc}
 10260              	.LVL908:
 10261              	.L873:
6112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10262              		.loc 1 6112 0
 10263 0040 2021     		movs	r1, #32
ARM GAS  /tmp/ccZ85PAS.s 			page 327


 10264 0042 2046     		mov	r0, r4
 10265              	.LVL909:
 10266 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10267              	.LVL910:
 10268 0048 10BD     		pop	{r4, pc}
 10269              	.LVL911:
 10270              	.L869:
6127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10271              		.loc 1 6127 0
 10272 004a 638D     		ldrh	r3, [r4, #42]
 10273 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10274 004e EBE7     		b	.L870
 10275              	.LVL912:
 10276              	.L874:
6134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10277              		.loc 1 6134 0
 10278 0050 1021     		movs	r1, #16
 10279 0052 2046     		mov	r0, r4
 10280 0054 FFF7FEFF 		bl	I2C_ITError
 10281              	.LVL913:
 10282 0058 10BD     		pop	{r4, pc}
 10283              		.cfi_endproc
 10284              	.LFE207:
 10286              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 10287              		.align	1
 10288              		.global	HAL_I2C_ER_IRQHandler
 10289              		.syntax unified
 10290              		.thumb
 10291              		.thumb_func
 10292              		.fpu fpv5-d16
 10294              	HAL_I2C_ER_IRQHandler:
 10295              	.LFB176:
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 10296              		.loc 1 4353 0
 10297              		.cfi_startproc
 10298              		@ args = 0, pretend = 0, frame = 0
 10299              		@ frame_needed = 0, uses_anonymous_args = 0
 10300              	.LVL914:
 10301 0000 10B5     		push	{r4, lr}
 10302              	.LCFI143:
 10303              		.cfi_def_cfa_offset 8
 10304              		.cfi_offset 4, -8
 10305              		.cfi_offset 14, -4
4354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 10306              		.loc 1 4354 0
 10307 0002 0268     		ldr	r2, [r0]
 10308 0004 9369     		ldr	r3, [r2, #24]
 10309              	.LVL915:
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
 10310              		.loc 1 4355 0
 10311 0006 1168     		ldr	r1, [r2]
 10312              	.LVL916:
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10313              		.loc 1 4359 0
 10314 0008 13F4807F 		tst	r3, #256
 10315 000c 09D0     		beq	.L876
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccZ85PAS.s 			page 328


 10316              		.loc 1 4359 0 is_stmt 0 discriminator 1
 10317 000e 11F0800F 		tst	r1, #128
 10318 0012 06D0     		beq	.L876
4361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10319              		.loc 1 4361 0 is_stmt 1
 10320 0014 446C     		ldr	r4, [r0, #68]
 10321 0016 44F00104 		orr	r4, r4, #1
 10322 001a 4464     		str	r4, [r0, #68]
4364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10323              		.loc 1 4364 0
 10324 001c 4FF48074 		mov	r4, #256
 10325 0020 D461     		str	r4, [r2, #28]
 10326              	.L876:
4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10327              		.loc 1 4368 0
 10328 0022 13F4806F 		tst	r3, #1024
 10329 0026 0AD0     		beq	.L877
4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10330              		.loc 1 4368 0 is_stmt 0 discriminator 1
 10331 0028 11F0800F 		tst	r1, #128
 10332 002c 07D0     		beq	.L877
4370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10333              		.loc 1 4370 0 is_stmt 1
 10334 002e 426C     		ldr	r2, [r0, #68]
 10335 0030 42F00802 		orr	r2, r2, #8
 10336 0034 4264     		str	r2, [r0, #68]
4373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10337              		.loc 1 4373 0
 10338 0036 0268     		ldr	r2, [r0]
 10339 0038 4FF48064 		mov	r4, #1024
 10340 003c D461     		str	r4, [r2, #28]
 10341              	.L877:
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10342              		.loc 1 4377 0
 10343 003e 13F4007F 		tst	r3, #512
 10344 0042 0AD0     		beq	.L878
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10345              		.loc 1 4377 0 is_stmt 0 discriminator 1
 10346 0044 11F0800F 		tst	r1, #128
 10347 0048 07D0     		beq	.L878
4379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10348              		.loc 1 4379 0 is_stmt 1
 10349 004a 436C     		ldr	r3, [r0, #68]
 10350              	.LVL917:
 10351 004c 43F00203 		orr	r3, r3, #2
 10352 0050 4364     		str	r3, [r0, #68]
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10353              		.loc 1 4382 0
 10354 0052 0368     		ldr	r3, [r0]
 10355 0054 4FF40072 		mov	r2, #512
 10356 0058 DA61     		str	r2, [r3, #28]
 10357              	.L878:
4386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10358              		.loc 1 4386 0
 10359 005a 416C     		ldr	r1, [r0, #68]
 10360              	.LVL918:
4389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccZ85PAS.s 			page 329


 10361              		.loc 1 4389 0
 10362 005c 11F00B0F 		tst	r1, #11
 10363 0060 00D1     		bne	.L881
 10364              	.LVL919:
 10365              	.L875:
 10366 0062 10BD     		pop	{r4, pc}
 10367              	.LVL920:
 10368              	.L881:
4391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10369              		.loc 1 4391 0
 10370 0064 FFF7FEFF 		bl	I2C_ITError
 10371              	.LVL921:
4393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10372              		.loc 1 4393 0
 10373 0068 FBE7     		b	.L875
 10374              		.cfi_endproc
 10375              	.LFE176:
 10377              		.section	.text.I2C_DMAAbort,"ax",%progbits
 10378              		.align	1
 10379              		.syntax unified
 10380              		.thumb
 10381              		.thumb_func
 10382              		.fpu fpv5-d16
 10384              	I2C_DMAAbort:
 10385              	.LFB210:
6215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10386              		.loc 1 6215 0
 10387              		.cfi_startproc
 10388              		@ args = 0, pretend = 0, frame = 0
 10389              		@ frame_needed = 0, uses_anonymous_args = 0
 10390              	.LVL922:
 10391 0000 08B5     		push	{r3, lr}
 10392              	.LCFI144:
 10393              		.cfi_def_cfa_offset 8
 10394              		.cfi_offset 3, -8
 10395              		.cfi_offset 14, -4
6216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10396              		.loc 1 6216 0
 10397 0002 806B     		ldr	r0, [r0, #56]
 10398              	.LVL923:
6219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10399              		.loc 1 6219 0
 10400 0004 836B     		ldr	r3, [r0, #56]
 10401 0006 0BB1     		cbz	r3, .L883
6221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10402              		.loc 1 6221 0
 10403 0008 0022     		movs	r2, #0
 10404 000a 1A65     		str	r2, [r3, #80]
 10405              	.L883:
6223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10406              		.loc 1 6223 0
 10407 000c C36B     		ldr	r3, [r0, #60]
 10408 000e 0BB1     		cbz	r3, .L884
6225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10409              		.loc 1 6225 0
 10410 0010 0022     		movs	r2, #0
 10411 0012 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccZ85PAS.s 			page 330


 10412              	.L884:
6228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10413              		.loc 1 6228 0
 10414 0014 FFF7FEFF 		bl	I2C_TreatErrorCallback
 10415              	.LVL924:
 10416 0018 08BD     		pop	{r3, pc}
 10417              		.cfi_endproc
 10418              	.LFE210:
 10420              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 10421              		.align	1
 10422              		.global	HAL_I2C_GetState
 10423              		.syntax unified
 10424              		.thumb
 10425              		.thumb_func
 10426              		.fpu fpv5-d16
 10428              	HAL_I2C_GetState:
 10429              	.LFB187:
4584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
 10430              		.loc 1 4584 0
 10431              		.cfi_startproc
 10432              		@ args = 0, pretend = 0, frame = 0
 10433              		@ frame_needed = 0, uses_anonymous_args = 0
 10434              		@ link register save eliminated.
 10435              	.LVL925:
4586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10436              		.loc 1 4586 0
 10437 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 10438              	.LVL926:
4587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10439              		.loc 1 4587 0
 10440 0004 7047     		bx	lr
 10441              		.cfi_endproc
 10442              	.LFE187:
 10444              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 10445              		.align	1
 10446              		.global	HAL_I2C_GetMode
 10447              		.syntax unified
 10448              		.thumb
 10449              		.thumb_func
 10450              		.fpu fpv5-d16
 10452              	HAL_I2C_GetMode:
 10453              	.LFB188:
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
 10454              		.loc 1 4596 0
 10455              		.cfi_startproc
 10456              		@ args = 0, pretend = 0, frame = 0
 10457              		@ frame_needed = 0, uses_anonymous_args = 0
 10458              		@ link register save eliminated.
 10459              	.LVL927:
4597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10460              		.loc 1 4597 0
 10461 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 10462              	.LVL928:
4598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10463              		.loc 1 4598 0
 10464 0004 7047     		bx	lr
 10465              		.cfi_endproc
ARM GAS  /tmp/ccZ85PAS.s 			page 331


 10466              	.LFE188:
 10468              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 10469              		.align	1
 10470              		.global	HAL_I2C_GetError
 10471              		.syntax unified
 10472              		.thumb
 10473              		.thumb_func
 10474              		.fpu fpv5-d16
 10476              	HAL_I2C_GetError:
 10477              	.LFB189:
4607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
 10478              		.loc 1 4607 0
 10479              		.cfi_startproc
 10480              		@ args = 0, pretend = 0, frame = 0
 10481              		@ frame_needed = 0, uses_anonymous_args = 0
 10482              		@ link register save eliminated.
 10483              	.LVL929:
4608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10484              		.loc 1 4608 0
 10485 0000 406C     		ldr	r0, [r0, #68]
 10486              	.LVL930:
4609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10487              		.loc 1 4609 0
 10488 0002 7047     		bx	lr
 10489              		.cfi_endproc
 10490              	.LFE189:
 10492              		.text
 10493              	.Letext0:
 10494              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 10495              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 10496              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 10497              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 10498              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 10499              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 10500              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 10501              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 10502              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 10503              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccZ85PAS.s 			page 332


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_i2c.c
     /tmp/ccZ85PAS.s:17     .text.I2C_Flush_TXDR:0000000000000000 $t
     /tmp/ccZ85PAS.s:23     .text.I2C_Flush_TXDR:0000000000000000 I2C_Flush_TXDR
     /tmp/ccZ85PAS.s:56     .text.I2C_TransferConfig:0000000000000000 $t
     /tmp/ccZ85PAS.s:62     .text.I2C_TransferConfig:0000000000000000 I2C_TransferConfig
     /tmp/ccZ85PAS.s:108    .text.I2C_Enable_IRQ:0000000000000000 $t
     /tmp/ccZ85PAS.s:114    .text.I2C_Enable_IRQ:0000000000000000 I2C_Enable_IRQ
     /tmp/ccZ85PAS.s:218    .text.I2C_Enable_IRQ:000000000000006c $d
     /tmp/ccZ85PAS.s:9781   .text.I2C_Master_ISR_DMA:0000000000000000 I2C_Master_ISR_DMA
     /tmp/ccZ85PAS.s:9545   .text.I2C_Slave_ISR_DMA:0000000000000000 I2C_Slave_ISR_DMA
     /tmp/ccZ85PAS.s:224    .text.I2C_Disable_IRQ:0000000000000000 $t
     /tmp/ccZ85PAS.s:230    .text.I2C_Disable_IRQ:0000000000000000 I2C_Disable_IRQ
     /tmp/ccZ85PAS.s:391    .text.I2C_ConvertOtherXferOptions:0000000000000000 $t
     /tmp/ccZ85PAS.s:397    .text.I2C_ConvertOtherXferOptions:0000000000000000 I2C_ConvertOtherXferOptions
     /tmp/ccZ85PAS.s:430    .text.I2C_IsAcknowledgeFailed:0000000000000000 $t
     /tmp/ccZ85PAS.s:436    .text.I2C_IsAcknowledgeFailed:0000000000000000 I2C_IsAcknowledgeFailed
     /tmp/ccZ85PAS.s:540    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 $t
     /tmp/ccZ85PAS.s:546    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/ccZ85PAS.s:620    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccZ85PAS.s:626    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 I2C_WaitOnFlagUntilTimeout
     /tmp/ccZ85PAS.s:696    .text.I2C_RequestMemoryWrite:0000000000000000 $t
     /tmp/ccZ85PAS.s:702    .text.I2C_RequestMemoryWrite:0000000000000000 I2C_RequestMemoryWrite
     /tmp/ccZ85PAS.s:799    .text.I2C_RequestMemoryWrite:000000000000006c $d
     /tmp/ccZ85PAS.s:804    .text.I2C_RequestMemoryRead:0000000000000000 $t
     /tmp/ccZ85PAS.s:810    .text.I2C_RequestMemoryRead:0000000000000000 I2C_RequestMemoryRead
     /tmp/ccZ85PAS.s:907    .text.I2C_RequestMemoryRead:000000000000006c $d
     /tmp/ccZ85PAS.s:912    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 $t
     /tmp/ccZ85PAS.s:918    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/ccZ85PAS.s:989    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 $t
     /tmp/ccZ85PAS.s:995    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/ccZ85PAS.s:1105   .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/ccZ85PAS.s:1112   .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/ccZ85PAS.s:1125   .text.HAL_I2C_Init:0000000000000000 $t
     /tmp/ccZ85PAS.s:1132   .text.HAL_I2C_Init:0000000000000000 HAL_I2C_Init
     /tmp/ccZ85PAS.s:1264   .text.HAL_I2C_Init:00000000000000b8 $d
     /tmp/ccZ85PAS.s:1269   .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/ccZ85PAS.s:1276   .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/ccZ85PAS.s:1289   .text.HAL_I2C_DeInit:0000000000000000 $t
     /tmp/ccZ85PAS.s:1296   .text.HAL_I2C_DeInit:0000000000000000 HAL_I2C_DeInit
     /tmp/ccZ85PAS.s:1350   .text.HAL_I2C_Master_Transmit:0000000000000000 $t
     /tmp/ccZ85PAS.s:1357   .text.HAL_I2C_Master_Transmit:0000000000000000 HAL_I2C_Master_Transmit
     /tmp/ccZ85PAS.s:1608   .text.HAL_I2C_Master_Transmit:0000000000000174 $d
     /tmp/ccZ85PAS.s:1613   .text.HAL_I2C_Master_Receive:0000000000000000 $t
     /tmp/ccZ85PAS.s:1620   .text.HAL_I2C_Master_Receive:0000000000000000 HAL_I2C_Master_Receive
     /tmp/ccZ85PAS.s:1870   .text.HAL_I2C_Master_Receive:0000000000000174 $d
     /tmp/ccZ85PAS.s:1875   .text.HAL_I2C_Slave_Transmit:0000000000000000 $t
     /tmp/ccZ85PAS.s:1882   .text.HAL_I2C_Slave_Transmit:0000000000000000 HAL_I2C_Slave_Transmit
     /tmp/ccZ85PAS.s:2154   .text.HAL_I2C_Slave_Receive:0000000000000000 $t
     /tmp/ccZ85PAS.s:2161   .text.HAL_I2C_Slave_Receive:0000000000000000 HAL_I2C_Slave_Receive
     /tmp/ccZ85PAS.s:2417   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:2424   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 HAL_I2C_Master_Transmit_IT
     /tmp/ccZ85PAS.s:2553   .text.HAL_I2C_Master_Transmit_IT:000000000000008c $d
     /tmp/ccZ85PAS.s:9246   .text.I2C_Master_ISR_IT:0000000000000000 I2C_Master_ISR_IT
     /tmp/ccZ85PAS.s:2560   .text.HAL_I2C_Master_Receive_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:2567   .text.HAL_I2C_Master_Receive_IT:0000000000000000 HAL_I2C_Master_Receive_IT
     /tmp/ccZ85PAS.s:2696   .text.HAL_I2C_Master_Receive_IT:000000000000008c $d
ARM GAS  /tmp/ccZ85PAS.s 			page 333


     /tmp/ccZ85PAS.s:2703   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:2710   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 HAL_I2C_Slave_Transmit_IT
     /tmp/ccZ85PAS.s:2788   .text.HAL_I2C_Slave_Transmit_IT:000000000000005c $d
     /tmp/ccZ85PAS.s:8786   .text.I2C_Slave_ISR_IT:0000000000000000 I2C_Slave_ISR_IT
     /tmp/ccZ85PAS.s:2794   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:2801   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 HAL_I2C_Slave_Receive_IT
     /tmp/ccZ85PAS.s:2879   .text.HAL_I2C_Slave_Receive_IT:000000000000005c $d
     /tmp/ccZ85PAS.s:2885   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:2892   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 HAL_I2C_Master_Transmit_DMA
     /tmp/ccZ85PAS.s:3127   .text.HAL_I2C_Master_Transmit_DMA:0000000000000138 $d
     /tmp/ccZ85PAS.s:10121  .text.I2C_DMAMasterTransmitCplt:0000000000000000 I2C_DMAMasterTransmitCplt
     /tmp/ccZ85PAS.s:10039  .text.I2C_DMAError:0000000000000000 I2C_DMAError
     /tmp/ccZ85PAS.s:3137   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:3144   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 HAL_I2C_Master_Receive_DMA
     /tmp/ccZ85PAS.s:3375   .text.HAL_I2C_Master_Receive_DMA:0000000000000134 $d
     /tmp/ccZ85PAS.s:10207  .text.I2C_DMAMasterReceiveCplt:0000000000000000 I2C_DMAMasterReceiveCplt
     /tmp/ccZ85PAS.s:3385   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:3392   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/ccZ85PAS.s:3555   .text.HAL_I2C_Slave_Transmit_DMA:00000000000000e0 $d
     /tmp/ccZ85PAS.s:7848   .text.I2C_DMASlaveTransmitCplt:0000000000000000 I2C_DMASlaveTransmitCplt
     /tmp/ccZ85PAS.s:3563   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:3570   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 HAL_I2C_Slave_Receive_DMA
     /tmp/ccZ85PAS.s:3736   .text.HAL_I2C_Slave_Receive_DMA:00000000000000e0 $d
     /tmp/ccZ85PAS.s:7897   .text.I2C_DMASlaveReceiveCplt:0000000000000000 I2C_DMASlaveReceiveCplt
     /tmp/ccZ85PAS.s:3744   .text.HAL_I2C_Mem_Write:0000000000000000 $t
     /tmp/ccZ85PAS.s:3751   .text.HAL_I2C_Mem_Write:0000000000000000 HAL_I2C_Mem_Write
     /tmp/ccZ85PAS.s:4039   .text.HAL_I2C_Mem_Read:0000000000000000 $t
     /tmp/ccZ85PAS.s:4046   .text.HAL_I2C_Mem_Read:0000000000000000 HAL_I2C_Mem_Read
     /tmp/ccZ85PAS.s:4334   .text.HAL_I2C_Mem_Read:00000000000001a8 $d
     /tmp/ccZ85PAS.s:4339   .text.HAL_I2C_Mem_Write_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:4346   .text.HAL_I2C_Mem_Write_IT:0000000000000000 HAL_I2C_Mem_Write_IT
     /tmp/ccZ85PAS.s:4513   .text.HAL_I2C_Mem_Write_IT:00000000000000e8 $d
     /tmp/ccZ85PAS.s:4519   .text.HAL_I2C_Mem_Read_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:4526   .text.HAL_I2C_Mem_Read_IT:0000000000000000 HAL_I2C_Mem_Read_IT
     /tmp/ccZ85PAS.s:4694   .text.HAL_I2C_Mem_Read_IT:00000000000000ec $d
     /tmp/ccZ85PAS.s:4701   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:4708   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 HAL_I2C_Mem_Write_DMA
     /tmp/ccZ85PAS.s:4948   .text.HAL_I2C_Mem_Write_DMA:000000000000017c $d
     /tmp/ccZ85PAS.s:4956   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:4963   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 HAL_I2C_Mem_Read_DMA
     /tmp/ccZ85PAS.s:5204   .text.HAL_I2C_Mem_Read_DMA:0000000000000180 $d
     /tmp/ccZ85PAS.s:5213   .text.HAL_I2C_IsDeviceReady:0000000000000000 $t
     /tmp/ccZ85PAS.s:5220   .text.HAL_I2C_IsDeviceReady:0000000000000000 HAL_I2C_IsDeviceReady
     /tmp/ccZ85PAS.s:5488   .text.HAL_I2C_IsDeviceReady:0000000000000178 $d
     /tmp/ccZ85PAS.s:5493   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:5500   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 HAL_I2C_Master_Seq_Transmit_IT
     /tmp/ccZ85PAS.s:5657   .text.HAL_I2C_Master_Seq_Transmit_IT:00000000000000ac $d
     /tmp/ccZ85PAS.s:5663   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:5670   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Master_Seq_Transmit_DMA
     /tmp/ccZ85PAS.s:5933   .text.HAL_I2C_Master_Seq_Transmit_DMA:000000000000015c $d
     /tmp/ccZ85PAS.s:5942   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:5949   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 HAL_I2C_Master_Seq_Receive_IT
     /tmp/ccZ85PAS.s:6106   .text.HAL_I2C_Master_Seq_Receive_IT:00000000000000ac $d
     /tmp/ccZ85PAS.s:6112   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:6119   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 HAL_I2C_Master_Seq_Receive_DMA
     /tmp/ccZ85PAS.s:6382   .text.HAL_I2C_Master_Seq_Receive_DMA:000000000000015c $d
     /tmp/ccZ85PAS.s:6391   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 $t
ARM GAS  /tmp/ccZ85PAS.s 			page 334


     /tmp/ccZ85PAS.s:6398   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 HAL_I2C_Slave_Seq_Transmit_IT
     /tmp/ccZ85PAS.s:6553   .text.HAL_I2C_Slave_Seq_Transmit_IT:00000000000000d0 $d
     /tmp/ccZ85PAS.s:10384  .text.I2C_DMAAbort:0000000000000000 I2C_DMAAbort
     /tmp/ccZ85PAS.s:6559   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:6566   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Seq_Transmit_DMA
     /tmp/ccZ85PAS.s:6837   .text.HAL_I2C_Slave_Seq_Transmit_DMA:000000000000018c $d
     /tmp/ccZ85PAS.s:6845   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:6852   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 HAL_I2C_Slave_Seq_Receive_IT
     /tmp/ccZ85PAS.s:7007   .text.HAL_I2C_Slave_Seq_Receive_IT:00000000000000d0 $d
     /tmp/ccZ85PAS.s:7013   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:7020   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 HAL_I2C_Slave_Seq_Receive_DMA
     /tmp/ccZ85PAS.s:7293   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000190 $d
     /tmp/ccZ85PAS.s:7301   .text.HAL_I2C_EnableListen_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:7308   .text.HAL_I2C_EnableListen_IT:0000000000000000 HAL_I2C_EnableListen_IT
     /tmp/ccZ85PAS.s:7348   .text.HAL_I2C_EnableListen_IT:0000000000000028 $d
     /tmp/ccZ85PAS.s:7353   .text.HAL_I2C_DisableListen_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:7360   .text.HAL_I2C_DisableListen_IT:0000000000000000 HAL_I2C_DisableListen_IT
     /tmp/ccZ85PAS.s:7412   .text.HAL_I2C_Master_Abort_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:7419   .text.HAL_I2C_Master_Abort_IT:0000000000000000 HAL_I2C_Master_Abort_IT
     /tmp/ccZ85PAS.s:7535   .text.HAL_I2C_Master_Abort_IT:0000000000000080 $d
     /tmp/ccZ85PAS.s:7540   .text.HAL_I2C_EV_IRQHandler:0000000000000000 $t
     /tmp/ccZ85PAS.s:7547   .text.HAL_I2C_EV_IRQHandler:0000000000000000 HAL_I2C_EV_IRQHandler
     /tmp/ccZ85PAS.s:7578   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:7585   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/ccZ85PAS.s:7598   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:7605   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/ccZ85PAS.s:7618   .text.I2C_ITMasterSeqCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:7624   .text.I2C_ITMasterSeqCplt:0000000000000000 I2C_ITMasterSeqCplt
     /tmp/ccZ85PAS.s:7694   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:7701   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/ccZ85PAS.s:7714   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:7721   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/ccZ85PAS.s:7734   .text.I2C_ITSlaveSeqCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:7740   .text.I2C_ITSlaveSeqCplt:0000000000000000 I2C_ITSlaveSeqCplt
     /tmp/ccZ85PAS.s:7842   .text.I2C_DMASlaveTransmitCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:7891   .text.I2C_DMASlaveReceiveCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:7938   .text.HAL_I2C_AddrCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:7945   .text.HAL_I2C_AddrCallback:0000000000000000 HAL_I2C_AddrCallback
     /tmp/ccZ85PAS.s:7958   .text.I2C_ITAddrCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:7964   .text.I2C_ITAddrCplt:0000000000000000 I2C_ITAddrCplt
     /tmp/ccZ85PAS.s:8087   .text.HAL_I2C_ListenCpltCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:8094   .text.HAL_I2C_ListenCpltCallback:0000000000000000 HAL_I2C_ListenCpltCallback
     /tmp/ccZ85PAS.s:8107   .text.I2C_ITListenCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:8113   .text.I2C_ITListenCplt:0000000000000000 I2C_ITListenCplt
     /tmp/ccZ85PAS.s:8192   .text.I2C_ITListenCplt:0000000000000064 $d
     /tmp/ccZ85PAS.s:8197   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:8204   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/ccZ85PAS.s:8217   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:8224   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/ccZ85PAS.s:8237   .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:8244   .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/ccZ85PAS.s:8257   .text.HAL_I2C_AbortCpltCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:8264   .text.HAL_I2C_AbortCpltCallback:0000000000000000 HAL_I2C_AbortCpltCallback
     /tmp/ccZ85PAS.s:8277   .text.I2C_TreatErrorCallback:0000000000000000 $t
     /tmp/ccZ85PAS.s:8283   .text.I2C_TreatErrorCallback:0000000000000000 I2C_TreatErrorCallback
     /tmp/ccZ85PAS.s:8328   .text.I2C_ITError:0000000000000000 $t
     /tmp/ccZ85PAS.s:8334   .text.I2C_ITError:0000000000000000 I2C_ITError
ARM GAS  /tmp/ccZ85PAS.s 			page 335


     /tmp/ccZ85PAS.s:8521   .text.I2C_ITError:00000000000000fc $d
     /tmp/ccZ85PAS.s:8528   .text.I2C_ITSlaveCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:8534   .text.I2C_ITSlaveCplt:0000000000000000 I2C_ITSlaveCplt
     /tmp/ccZ85PAS.s:8775   .text.I2C_ITSlaveCplt:0000000000000164 $d
     /tmp/ccZ85PAS.s:8780   .text.I2C_Slave_ISR_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:9019   .text.I2C_ITMasterCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:9025   .text.I2C_ITMasterCplt:0000000000000000 I2C_ITMasterCplt
     /tmp/ccZ85PAS.s:9240   .text.I2C_Master_ISR_IT:0000000000000000 $t
     /tmp/ccZ85PAS.s:9539   .text.I2C_Slave_ISR_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:9775   .text.I2C_Master_ISR_DMA:0000000000000000 $t
     /tmp/ccZ85PAS.s:10033  .text.I2C_DMAError:0000000000000000 $t
     /tmp/ccZ85PAS.s:10115  .text.I2C_DMAMasterTransmitCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:10201  .text.I2C_DMAMasterReceiveCplt:0000000000000000 $t
     /tmp/ccZ85PAS.s:10287  .text.HAL_I2C_ER_IRQHandler:0000000000000000 $t
     /tmp/ccZ85PAS.s:10294  .text.HAL_I2C_ER_IRQHandler:0000000000000000 HAL_I2C_ER_IRQHandler
     /tmp/ccZ85PAS.s:10378  .text.I2C_DMAAbort:0000000000000000 $t
     /tmp/ccZ85PAS.s:10421  .text.HAL_I2C_GetState:0000000000000000 $t
     /tmp/ccZ85PAS.s:10428  .text.HAL_I2C_GetState:0000000000000000 HAL_I2C_GetState
     /tmp/ccZ85PAS.s:10445  .text.HAL_I2C_GetMode:0000000000000000 $t
     /tmp/ccZ85PAS.s:10452  .text.HAL_I2C_GetMode:0000000000000000 HAL_I2C_GetMode
     /tmp/ccZ85PAS.s:10469  .text.HAL_I2C_GetError:0000000000000000 $t
     /tmp/ccZ85PAS.s:10476  .text.HAL_I2C_GetError:0000000000000000 HAL_I2C_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
HAL_DMA_GetState
HAL_DMA_GetError
