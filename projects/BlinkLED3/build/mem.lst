ARM GAS  /tmp/ccn6Qu7E.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"mem.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.ptr_to_mem,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	ptr_to_mem:
  24              	.LFB158:
  25              		.file 1 "Middlewares/Third_Party/LwIP/src/core/mem.c"
   1:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
   2:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @file
   3:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Dynamic memory manager
   4:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
   5:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * This is a lightweight replacement for the standard C library malloc().
   6:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
   7:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * If you want to use the standard C library malloc() instead, define
   8:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * MEM_LIBC_MALLOC to 1 in your lwipopts.h
   9:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  10:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * To let mem_malloc() use pools (prevents fragmentation and is much faster than
  11:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * a heap but might waste some memory), define MEM_USE_POOLS to 1, define
  12:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * MEMP_USE_CUSTOM_POOLS to 1 and create a file "lwippools.h" that includes a list
  13:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * of pools like this (more pools can be added between _START and _END):
  14:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  15:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Define three pools with sizes 256, 512, and 1512 bytes
  16:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL_START
  17:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL(20, 256)
  18:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL(10, 512)
  19:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL(5, 1512)
  20:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL_END
  21:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
  22:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  23:Middlewares/Third_Party/LwIP/src/core/mem.c **** /*
  24:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  25:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * All rights reserved.
  26:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  27:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Redistribution and use in source and binary forms, with or without modification,
  28:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * are permitted provided that the following conditions are met:
  29:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  30:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  31:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *    this list of conditions and the following disclaimer.
  32:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  33:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *    this list of conditions and the following disclaimer in the documentation
ARM GAS  /tmp/ccn6Qu7E.s 			page 2


  34:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *    and/or other materials provided with the distribution.
  35:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * 3. The name of the author may not be used to endorse or promote products
  36:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *    derived from this software without specific prior written permission.
  37:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  38:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  39:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  40:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  41:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  42:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  43:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  44:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  45:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  46:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  47:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * OF SUCH DAMAGE.
  48:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  49:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * This file is part of the lwIP TCP/IP stack.
  50:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  51:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Author: Adam Dunkels <adam@sics.se>
  52:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *         Simon Goldschmidt
  53:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  54:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
  55:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  56:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/opt.h"
  57:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/mem.h"
  58:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/def.h"
  59:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/sys.h"
  60:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/stats.h"
  61:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/err.h"
  62:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  63:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include <string.h>
  64:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  65:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_LIBC_MALLOC
  66:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include <stdlib.h> /* for malloc()/free() */
  67:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
  68:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  69:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* This is overridable for tests only... */
  70:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef LWIP_MEM_ILLEGAL_FREE
  71:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ILLEGAL_FREE(msg)         LWIP_ASSERT(msg, 0)
  72:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
  73:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  74:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_STATS_INC_LOCKED(x)         SYS_ARCH_LOCKED(MEM_STATS_INC(x))
  75:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_STATS_INC_USED_LOCKED(x, y) SYS_ARCH_LOCKED(MEM_STATS_INC_USED(x, y))
  76:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_STATS_DEC_USED_LOCKED(x, y) SYS_ARCH_LOCKED(MEM_STATS_DEC_USED(x, y))
  77:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  78:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
  79:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_SANITY_OFFSET   MEM_SANITY_REGION_BEFORE_ALIGNED
  80:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_SANITY_OVERHEAD (MEM_SANITY_REGION_BEFORE_ALIGNED + MEM_SANITY_REGION_AFTER_ALIGNED)
  81:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else
  82:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_SANITY_OFFSET   0
  83:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_SANITY_OVERHEAD 0
  84:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
  85:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  86:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK || MEMP_OVERFLOW_CHECK
  87:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
  88:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Check if a mep element was victim of an overflow or underflow
  89:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * (e.g. the restricted area after/before it has been altered)
  90:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
ARM GAS  /tmp/ccn6Qu7E.s 			page 3


  91:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param p the mem element to check
  92:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size allocated size of the element
  93:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param descr1 description of the element source shown on error
  94:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param descr2 description of the element source shown on error
  95:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
  96:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
  97:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_overflow_check_raw(void *p, size_t size, const char *descr1, const char *descr2)
  98:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
  99:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_SANITY_REGION_AFTER_ALIGNED || MEM_SANITY_REGION_BEFORE_ALIGNED
 100:Middlewares/Third_Party/LwIP/src/core/mem.c ****   u16_t k;
 101:Middlewares/Third_Party/LwIP/src/core/mem.c ****   u8_t *m;
 102:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 103:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_SANITY_REGION_AFTER_ALIGNED > 0
 104:Middlewares/Third_Party/LwIP/src/core/mem.c ****   m = (u8_t *)p + size;
 105:Middlewares/Third_Party/LwIP/src/core/mem.c ****   for (k = 0; k < MEM_SANITY_REGION_AFTER_ALIGNED; k++) {
 106:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (m[k] != 0xcd) {
 107:Middlewares/Third_Party/LwIP/src/core/mem.c ****       char errstr[128];
 108:Middlewares/Third_Party/LwIP/src/core/mem.c ****       snprintf(errstr, sizeof(errstr), "detected mem overflow in %s%s", descr1, descr2);
 109:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_ASSERT(errstr, 0);
 110:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 111:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 112:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_SANITY_REGION_AFTER_ALIGNED > 0 */
 113:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 114:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_SANITY_REGION_BEFORE_ALIGNED > 0
 115:Middlewares/Third_Party/LwIP/src/core/mem.c ****   m = (u8_t *)p - MEM_SANITY_REGION_BEFORE_ALIGNED;
 116:Middlewares/Third_Party/LwIP/src/core/mem.c ****   for (k = 0; k < MEM_SANITY_REGION_BEFORE_ALIGNED; k++) {
 117:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (m[k] != 0xcd) {
 118:Middlewares/Third_Party/LwIP/src/core/mem.c ****       char errstr[128];
 119:Middlewares/Third_Party/LwIP/src/core/mem.c ****       snprintf(errstr, sizeof(errstr), "detected mem underflow in %s%s", descr1, descr2);
 120:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_ASSERT(errstr, 0);
 121:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 122:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 123:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_SANITY_REGION_BEFORE_ALIGNED > 0 */
 124:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else
 125:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_UNUSED_ARG(p);
 126:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_UNUSED_ARG(desc);
 127:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_UNUSED_ARG(descr);
 128:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 129:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 130:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 131:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 132:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Initialize the restricted area of a mem element.
 133:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 134:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 135:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_overflow_init_raw(void *p, size_t size)
 136:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 137:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_SANITY_REGION_BEFORE_ALIGNED > 0 || MEM_SANITY_REGION_AFTER_ALIGNED > 0
 138:Middlewares/Third_Party/LwIP/src/core/mem.c ****   u8_t *m;
 139:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_SANITY_REGION_BEFORE_ALIGNED > 0
 140:Middlewares/Third_Party/LwIP/src/core/mem.c ****   m = (u8_t *)p - MEM_SANITY_REGION_BEFORE_ALIGNED;
 141:Middlewares/Third_Party/LwIP/src/core/mem.c ****   memset(m, 0xcd, MEM_SANITY_REGION_BEFORE_ALIGNED);
 142:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 143:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_SANITY_REGION_AFTER_ALIGNED > 0
 144:Middlewares/Third_Party/LwIP/src/core/mem.c ****   m = (u8_t *)p + size;
 145:Middlewares/Third_Party/LwIP/src/core/mem.c ****   memset(m, 0xcd, MEM_SANITY_REGION_AFTER_ALIGNED);
 146:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 147:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else /* MEM_SANITY_REGION_BEFORE_ALIGNED > 0 || MEM_SANITY_REGION_AFTER_ALIGNED > 0 */
ARM GAS  /tmp/ccn6Qu7E.s 			page 4


 148:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_UNUSED_ARG(p);
 149:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_UNUSED_ARG(desc);
 150:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_SANITY_REGION_BEFORE_ALIGNED > 0 || MEM_SANITY_REGION_AFTER_ALIGNED > 0 */
 151:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 152:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_OVERFLOW_CHECK || MEMP_OVERFLOW_CHECK */
 153:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 154:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_LIBC_MALLOC || MEM_USE_POOLS
 155:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 156:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** mem_init is not used when using pools instead of a heap or using
 157:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * C library malloc().
 158:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 159:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 160:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_init(void)
 161:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 162:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 163:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 164:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** mem_trim is not used when using pools instead of a heap or using
 165:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * C library malloc(): we can't free part of a pool element and the stack
 166:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * support mem_trim() to return a different pointer
 167:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 168:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 169:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_trim(void *mem, mem_size_t size)
 170:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 171:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_UNUSED_ARG(size);
 172:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return mem;
 173:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 174:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_LIBC_MALLOC || MEM_USE_POOLS */
 175:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 176:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_LIBC_MALLOC
 177:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* lwIP heap implemented using C library malloc() */
 178:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 179:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* in case C library malloc() needs extra protection,
 180:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * allow these defines to be overridden.
 181:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 182:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef mem_clib_free
 183:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define mem_clib_free free
 184:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 185:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef mem_clib_malloc
 186:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define mem_clib_malloc malloc
 187:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 188:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef mem_clib_calloc
 189:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define mem_clib_calloc calloc
 190:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 191:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 192:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_STATS && MEM_STATS
 193:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_LIBC_STATSHELPER_SIZE LWIP_MEM_ALIGN_SIZE(sizeof(mem_size_t))
 194:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else
 195:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_LIBC_STATSHELPER_SIZE 0
 196:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 197:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 198:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 199:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Allocate a block of memory with a minimum of 'size' bytes.
 200:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 201:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size is the minimum size of the requested block in bytes.
 202:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return pointer to allocated memory or NULL if no free memory was found.
 203:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 204:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Note that the returned value must always be aligned (as defined by MEM_ALIGNMENT).
ARM GAS  /tmp/ccn6Qu7E.s 			page 5


 205:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 206:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 207:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_malloc(mem_size_t size)
 208:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 209:Middlewares/Third_Party/LwIP/src/core/mem.c ****   void *ret = mem_clib_malloc(size + MEM_LIBC_STATSHELPER_SIZE);
 210:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (ret == NULL) {
 211:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_LOCKED(err);
 212:Middlewares/Third_Party/LwIP/src/core/mem.c ****   } else {
 213:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("malloc() must return aligned memory", LWIP_MEM_ALIGN(ret) == ret);
 214:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_STATS && MEM_STATS
 215:Middlewares/Third_Party/LwIP/src/core/mem.c ****     *(mem_size_t *)ret = size;
 216:Middlewares/Third_Party/LwIP/src/core/mem.c ****     ret = (u8_t *)ret + MEM_LIBC_STATSHELPER_SIZE;
 217:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_USED_LOCKED(used, size);
 218:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 219:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 220:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return ret;
 221:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 222:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 223:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** Put memory back on the heap
 224:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 225:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param rmem is the pointer as returned by a previous call to mem_malloc()
 226:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 227:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 228:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_free(void *rmem)
 229:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 230:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("rmem != NULL", (rmem != NULL));
 231:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("rmem == MEM_ALIGN(rmem)", (rmem == LWIP_MEM_ALIGN(rmem)));
 232:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_STATS && MEM_STATS
 233:Middlewares/Third_Party/LwIP/src/core/mem.c ****   rmem = (u8_t *)rmem - MEM_LIBC_STATSHELPER_SIZE;
 234:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_DEC_USED_LOCKED(used, *(mem_size_t *)rmem);
 235:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 236:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_clib_free(rmem);
 237:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 238:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 239:Middlewares/Third_Party/LwIP/src/core/mem.c **** #elif MEM_USE_POOLS
 240:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 241:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* lwIP heap implemented with different sized pools */
 242:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 243:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 244:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Allocate memory: determine the smallest pool that is big enough
 245:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * to contain an element of 'size' and get an element from that pool.
 246:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 247:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size the size in bytes of the memory needed
 248:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return a pointer to the allocated memory or NULL if the pool is empty
 249:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 250:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 251:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_malloc(mem_size_t size)
 252:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 253:Middlewares/Third_Party/LwIP/src/core/mem.c ****   void *ret;
 254:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct memp_malloc_helper *element = NULL;
 255:Middlewares/Third_Party/LwIP/src/core/mem.c ****   memp_t poolnr;
 256:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t required_size = size + LWIP_MEM_ALIGN_SIZE(sizeof(struct memp_malloc_helper));
 257:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 258:Middlewares/Third_Party/LwIP/src/core/mem.c ****   for (poolnr = MEMP_POOL_FIRST; poolnr <= MEMP_POOL_LAST; poolnr = (memp_t)(poolnr + 1)) {
 259:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* is this pool big enough to hold an element of the required size
 260:Middlewares/Third_Party/LwIP/src/core/mem.c ****        plus a struct memp_malloc_helper that saves the pool this element came from? */
 261:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (required_size <= memp_pools[poolnr]->size) {
ARM GAS  /tmp/ccn6Qu7E.s 			page 6


 262:Middlewares/Third_Party/LwIP/src/core/mem.c ****       element = (struct memp_malloc_helper *)memp_malloc(poolnr);
 263:Middlewares/Third_Party/LwIP/src/core/mem.c ****       if (element == NULL) {
 264:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /* No need to DEBUGF or ASSERT: This error is already taken care of in memp.c */
 265:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_USE_POOLS_TRY_BIGGER_POOL
 266:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /** Try a bigger pool if this one is empty! */
 267:Middlewares/Third_Party/LwIP/src/core/mem.c ****         if (poolnr < MEMP_POOL_LAST) {
 268:Middlewares/Third_Party/LwIP/src/core/mem.c ****           continue;
 269:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 270:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_USE_POOLS_TRY_BIGGER_POOL */
 271:Middlewares/Third_Party/LwIP/src/core/mem.c ****         MEM_STATS_INC_LOCKED(err);
 272:Middlewares/Third_Party/LwIP/src/core/mem.c ****         return NULL;
 273:Middlewares/Third_Party/LwIP/src/core/mem.c ****       }
 274:Middlewares/Third_Party/LwIP/src/core/mem.c ****       break;
 275:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 276:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 277:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (poolnr > MEMP_POOL_LAST) {
 278:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("mem_malloc(): no pool is that big!", 0);
 279:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_LOCKED(err);
 280:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 281:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 282:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 283:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* save the pool number this element came from */
 284:Middlewares/Third_Party/LwIP/src/core/mem.c ****   element->poolnr = poolnr;
 285:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* and return a pointer to the memory directly after the struct memp_malloc_helper */
 286:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ret = (u8_t *)element + LWIP_MEM_ALIGN_SIZE(sizeof(struct memp_malloc_helper));
 287:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 288:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEMP_OVERFLOW_CHECK || (LWIP_STATS && MEM_STATS)
 289:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* truncating to u16_t is safe because struct memp_desc::size is u16_t */
 290:Middlewares/Third_Party/LwIP/src/core/mem.c ****   element->size = (u16_t)size;
 291:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_INC_USED_LOCKED(used, element->size);
 292:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEMP_OVERFLOW_CHECK || (LWIP_STATS && MEM_STATS) */
 293:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEMP_OVERFLOW_CHECK
 294:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize unused memory (diff between requested size and selected pool's size) */
 295:Middlewares/Third_Party/LwIP/src/core/mem.c ****   memset((u8_t *)ret + size, 0xcd, memp_pools[poolnr]->size - size);
 296:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEMP_OVERFLOW_CHECK */
 297:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return ret;
 298:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 299:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 300:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 301:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Free memory previously allocated by mem_malloc. Loads the pool number
 302:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * and calls memp_free with that pool number to put the element back into
 303:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * its pool
 304:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 305:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param rmem the memory element to free
 306:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 307:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 308:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_free(void *rmem)
 309:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 310:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct memp_malloc_helper *hmem;
 311:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 312:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("rmem != NULL", (rmem != NULL));
 313:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("rmem == MEM_ALIGN(rmem)", (rmem == LWIP_MEM_ALIGN(rmem)));
 314:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 315:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* get the original struct memp_malloc_helper */
 316:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* cast through void* to get rid of alignment warnings */
 317:Middlewares/Third_Party/LwIP/src/core/mem.c ****   hmem = (struct memp_malloc_helper *)(void *)((u8_t *)rmem - LWIP_MEM_ALIGN_SIZE(sizeof(struct mem
 318:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
ARM GAS  /tmp/ccn6Qu7E.s 			page 7


 319:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("hmem != NULL", (hmem != NULL));
 320:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("hmem == MEM_ALIGN(hmem)", (hmem == LWIP_MEM_ALIGN(hmem)));
 321:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("hmem->poolnr < MEMP_MAX", (hmem->poolnr < MEMP_MAX));
 322:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 323:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_DEC_USED_LOCKED(used, hmem->size);
 324:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEMP_OVERFLOW_CHECK
 325:Middlewares/Third_Party/LwIP/src/core/mem.c ****   {
 326:Middlewares/Third_Party/LwIP/src/core/mem.c ****     u16_t i;
 327:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("MEM_USE_POOLS: invalid chunk size",
 328:Middlewares/Third_Party/LwIP/src/core/mem.c ****                 hmem->size <= memp_pools[hmem->poolnr]->size);
 329:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* check that unused memory remained untouched (diff between requested size and selected pool's
 330:Middlewares/Third_Party/LwIP/src/core/mem.c ****     for (i = hmem->size; i < memp_pools[hmem->poolnr]->size; i++) {
 331:Middlewares/Third_Party/LwIP/src/core/mem.c ****       u8_t data = *((u8_t *)rmem + i);
 332:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_ASSERT("MEM_USE_POOLS: mem overflow detected", data == 0xcd);
 333:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 334:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 335:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEMP_OVERFLOW_CHECK */
 336:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 337:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* and put it in the pool we saved earlier */
 338:Middlewares/Third_Party/LwIP/src/core/mem.c ****   memp_free(hmem->poolnr, hmem);
 339:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 340:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 341:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else /* MEM_USE_POOLS */
 342:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* lwIP replacement for your libc malloc() */
 343:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 344:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 345:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * The heap is made up as a list of structs of this type.
 346:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * This does not have to be aligned since for getting its size,
 347:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * we only use the macro SIZEOF_STRUCT_MEM, which automatically aligns.
 348:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 349:Middlewares/Third_Party/LwIP/src/core/mem.c **** struct mem {
 350:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /** index (-> ram[next]) of the next struct */
 351:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t next;
 352:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /** index (-> ram[prev]) of the previous struct */
 353:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t prev;
 354:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /** 1: this area is used; 0: this area is unused */
 355:Middlewares/Third_Party/LwIP/src/core/mem.c ****   u8_t used;
 356:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
 357:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /** this keeps track of the user allocation size for guard checks */
 358:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t user_size;
 359:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 360:Middlewares/Third_Party/LwIP/src/core/mem.c **** };
 361:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 362:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** All allocated blocks will be MIN_SIZE bytes big, at least!
 363:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * MIN_SIZE can be overridden to suit your needs. Smaller values save space,
 364:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * larger values could prevent too small blocks to fragment the RAM too much. */
 365:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef MIN_SIZE
 366:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MIN_SIZE             12
 367:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MIN_SIZE */
 368:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* some alignment macros: we define them here for better source code layout */
 369:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MIN_SIZE_ALIGNED     LWIP_MEM_ALIGN_SIZE(MIN_SIZE)
 370:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define SIZEOF_STRUCT_MEM    LWIP_MEM_ALIGN_SIZE(sizeof(struct mem))
 371:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_SIZE_ALIGNED     LWIP_MEM_ALIGN_SIZE(MEM_SIZE)
 372:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 373:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** If you want to relocate the heap to external memory, simply define
 374:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_RAM_HEAP_POINTER as a void-pointer to that location.
 375:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * If so, make sure the memory at that location is big enough (see below on
ARM GAS  /tmp/ccn6Qu7E.s 			page 8


 376:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * how that space is calculated). */
 377:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef LWIP_RAM_HEAP_POINTER
 378:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** the heap. we need one struct mem at the end and some room for alignment */
 379:Middlewares/Third_Party/LwIP/src/core/mem.c **** LWIP_DECLARE_MEMORY_ALIGNED(ram_heap, MEM_SIZE_ALIGNED + (2U * SIZEOF_STRUCT_MEM));
 380:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_RAM_HEAP_POINTER ram_heap
 381:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_RAM_HEAP_POINTER */
 382:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 383:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** pointer to the heap (ram_heap): for alignment, ram is now a pointer instead of an array */
 384:Middlewares/Third_Party/LwIP/src/core/mem.c **** static u8_t *ram;
 385:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** the last entry, always unused! */
 386:Middlewares/Third_Party/LwIP/src/core/mem.c **** static struct mem *ram_end;
 387:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 388:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** concurrent access protection */
 389:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if !NO_SYS
 390:Middlewares/Third_Party/LwIP/src/core/mem.c **** static sys_mutex_t mem_mutex;
 391:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 392:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 393:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 394:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 395:Middlewares/Third_Party/LwIP/src/core/mem.c **** static volatile u8_t mem_free_count;
 396:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 397:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* Allow mem_free from other (e.g. interrupt) context */
 398:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_DECL_PROTECT()  SYS_ARCH_DECL_PROTECT(lev_free)
 399:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_PROTECT()       SYS_ARCH_PROTECT(lev_free)
 400:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_UNPROTECT()     SYS_ARCH_UNPROTECT(lev_free)
 401:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_DECL_PROTECT() SYS_ARCH_DECL_PROTECT(lev_alloc)
 402:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_PROTECT()      SYS_ARCH_PROTECT(lev_alloc)
 403:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_UNPROTECT()    SYS_ARCH_UNPROTECT(lev_alloc)
 404:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_LFREE_VOLATILE       volatile
 405:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 406:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 407:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 408:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* Protect the heap only by using a mutex */
 409:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_DECL_PROTECT()
 410:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_PROTECT()    sys_mutex_lock(&mem_mutex)
 411:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_UNPROTECT()  sys_mutex_unlock(&mem_mutex)
 412:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* mem_malloc is protected using mutex AND LWIP_MEM_ALLOC_PROTECT */
 413:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_DECL_PROTECT()
 414:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_PROTECT()
 415:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_UNPROTECT()
 416:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_LFREE_VOLATILE
 417:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 418:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 419:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 420:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** pointer to the lowest free block, this is used for faster search */
 421:Middlewares/Third_Party/LwIP/src/core/mem.c **** static struct mem * LWIP_MEM_LFREE_VOLATILE lfree;
 422:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 423:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_SANITY_CHECK
 424:Middlewares/Third_Party/LwIP/src/core/mem.c **** static void mem_sanity(void);
 425:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_SANITY() mem_sanity()
 426:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else
 427:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_SANITY()
 428:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 429:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 430:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
 431:Middlewares/Third_Party/LwIP/src/core/mem.c **** static void
 432:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_overflow_init_element(struct mem *mem, mem_size_t user_size)
ARM GAS  /tmp/ccn6Qu7E.s 			page 9


 433:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 434:Middlewares/Third_Party/LwIP/src/core/mem.c ****   void *p = (u8_t *)mem + SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET;
 435:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->user_size = user_size;
 436:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_overflow_init_raw(p, user_size);
 437:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 438:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 439:Middlewares/Third_Party/LwIP/src/core/mem.c **** static void
 440:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_overflow_check_element(struct mem *mem)
 441:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 442:Middlewares/Third_Party/LwIP/src/core/mem.c ****   void *p = (u8_t *)mem + SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET;
 443:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_overflow_check_raw(p, mem->user_size, "heap", "");
 444:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 445:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else /* MEM_OVERFLOW_CHECK */
 446:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define mem_overflow_init_element(mem, size)
 447:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define mem_overflow_check_element(mem)
 448:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_OVERFLOW_CHECK */
 449:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 450:Middlewares/Third_Party/LwIP/src/core/mem.c **** static struct mem *
 451:Middlewares/Third_Party/LwIP/src/core/mem.c **** ptr_to_mem(mem_size_t ptr)
 452:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
  26              		.loc 1 452 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 453:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return (struct mem *)(void *)&ram[ptr];
  32              		.loc 1 453 0
  33 0000 014B     		ldr	r3, .L2
  34 0002 1B68     		ldr	r3, [r3]
 454:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
  35              		.loc 1 454 0
  36 0004 1844     		add	r0, r0, r3
  37              	.LVL1:
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE158:
  46              		.section	.text.mem_to_ptr,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv5-d16
  53              	mem_to_ptr:
  54              	.LFB159:
 455:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 456:Middlewares/Third_Party/LwIP/src/core/mem.c **** static mem_size_t
 457:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_to_ptr(void *mem)
 458:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
  55              		.loc 1 458 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccn6Qu7E.s 			page 10


  59              		@ link register save eliminated.
  60              	.LVL2:
 459:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return (mem_size_t)((u8_t *)mem - ram);
  61              		.loc 1 459 0
  62 0000 024B     		ldr	r3, .L5
  63 0002 1B68     		ldr	r3, [r3]
  64 0004 C01A     		subs	r0, r0, r3
  65              	.LVL3:
 460:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
  66              		.loc 1 460 0
  67 0006 80B2     		uxth	r0, r0
  68 0008 7047     		bx	lr
  69              	.L6:
  70 000a 00BF     		.align	2
  71              	.L5:
  72 000c 00000000 		.word	.LANCHOR0
  73              		.cfi_endproc
  74              	.LFE159:
  76              		.section	.text.mem_link_valid,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv5-d16
  83              	mem_link_valid:
  84              	.LFB162:
 461:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 462:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 463:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * "Plug holes" by combining adjacent empty struct mems.
 464:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * After this function is through, there should not exist
 465:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * one empty struct mem pointing to another empty struct mem.
 466:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 467:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param mem this points to a struct mem which just has been freed
 468:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @internal this function is only called by mem_free() and mem_trim()
 469:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 470:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * This assumes access to the heap is protected by the calling function
 471:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * already.
 472:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 473:Middlewares/Third_Party/LwIP/src/core/mem.c **** static void
 474:Middlewares/Third_Party/LwIP/src/core/mem.c **** plug_holes(struct mem *mem)
 475:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 476:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *nmem;
 477:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *pmem;
 478:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 479:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem >= ram", (u8_t *)mem >= ram);
 480:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem < ram_end", (u8_t *)mem < (u8_t *)ram_end);
 481:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem->used == 0", mem->used == 0);
 482:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 483:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* plug hole forward */
 484:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem->next <= MEM_SIZE_ALIGNED", mem->next <= MEM_SIZE_ALIGNED);
 485:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 486:Middlewares/Third_Party/LwIP/src/core/mem.c ****   nmem = ptr_to_mem(mem->next);
 487:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (mem != nmem && nmem->used == 0 && (u8_t *)nmem != (u8_t *)ram_end) {
 488:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->next is unused and not end of ram, combine mem and mem->next */
 489:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (lfree == nmem) {
 490:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = mem;
 491:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
ARM GAS  /tmp/ccn6Qu7E.s 			page 11


 492:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem->next = nmem->next;
 493:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (nmem->next != MEM_SIZE_ALIGNED) {
 494:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ptr_to_mem(nmem->next)->prev = mem_to_ptr(mem);
 495:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 496:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 497:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 498:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* plug hole backward */
 499:Middlewares/Third_Party/LwIP/src/core/mem.c ****   pmem = ptr_to_mem(mem->prev);
 500:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (pmem != mem && pmem->used == 0) {
 501:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->prev is unused, combine mem and mem->prev */
 502:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (lfree == mem) {
 503:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = pmem;
 504:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 505:Middlewares/Third_Party/LwIP/src/core/mem.c ****     pmem->next = mem->next;
 506:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (mem->next != MEM_SIZE_ALIGNED) {
 507:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ptr_to_mem(mem->next)->prev = mem_to_ptr(pmem);
 508:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 509:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 510:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 511:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 512:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 513:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Zero the heap and initialize start, end and lowest-free
 514:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 515:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 516:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_init(void)
 517:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 518:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem;
 519:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 520:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("Sanity check alignment",
 521:Middlewares/Third_Party/LwIP/src/core/mem.c ****               (SIZEOF_STRUCT_MEM & (MEM_ALIGNMENT - 1)) == 0);
 522:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 523:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* align the heap */
 524:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram = (u8_t *)LWIP_MEM_ALIGN(LWIP_RAM_HEAP_POINTER);
 525:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize the start of the heap */
 526:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem = (struct mem *)(void *)ram;
 527:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->next = MEM_SIZE_ALIGNED;
 528:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->prev = 0;
 529:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->used = 0;
 530:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize the end of the heap */
 531:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end = ptr_to_mem(MEM_SIZE_ALIGNED);
 532:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->used = 1;
 533:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->next = MEM_SIZE_ALIGNED;
 534:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->prev = MEM_SIZE_ALIGNED;
 535:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_SANITY();
 536:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 537:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize the lowest-free pointer to the start of the heap */
 538:Middlewares/Third_Party/LwIP/src/core/mem.c ****   lfree = (struct mem *)(void *)ram;
 539:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 540:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_AVAIL(avail, MEM_SIZE_ALIGNED);
 541:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 542:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (sys_mutex_new(&mem_mutex) != ERR_OK) {
 543:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("failed to create mem_mutex", 0);
 544:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 545:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 546:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 547:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* Check if a struct mem is correctly linked.
 548:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * If not, double-free is a possible reason.
ARM GAS  /tmp/ccn6Qu7E.s 			page 12


 549:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 550:Middlewares/Third_Party/LwIP/src/core/mem.c **** static int
 551:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_link_valid(struct mem *mem)
 552:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
  85              		.loc 1 552 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              	.LVL4:
  90 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 24
  93              		.cfi_offset 3, -24
  94              		.cfi_offset 4, -20
  95              		.cfi_offset 5, -16
  96              		.cfi_offset 6, -12
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0002 0546     		mov	r5, r0
 553:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *nmem, *pmem;
 554:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t rmem_idx;
 555:Middlewares/Third_Party/LwIP/src/core/mem.c ****   rmem_idx = mem_to_ptr(mem);
 100              		.loc 1 555 0
 101 0004 FFF7FEFF 		bl	mem_to_ptr
 102              	.LVL5:
 103 0008 0646     		mov	r6, r0
 104              	.LVL6:
 556:Middlewares/Third_Party/LwIP/src/core/mem.c ****   nmem = ptr_to_mem(mem->next);
 105              		.loc 1 556 0
 106 000a 2C88     		ldrh	r4, [r5]
 107 000c 2046     		mov	r0, r4
 108 000e FFF7FEFF 		bl	ptr_to_mem
 109              	.LVL7:
 110 0012 0746     		mov	r7, r0
 111              	.LVL8:
 557:Middlewares/Third_Party/LwIP/src/core/mem.c ****   pmem = ptr_to_mem(mem->prev);
 112              		.loc 1 557 0
 113 0014 6D88     		ldrh	r5, [r5, #2]
 114              	.LVL9:
 115 0016 2846     		mov	r0, r5
 116              	.LVL10:
 117 0018 FFF7FEFF 		bl	ptr_to_mem
 118              	.LVL11:
 558:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((mem->next > MEM_SIZE_ALIGNED) || (mem->prev > MEM_SIZE_ALIGNED) ||
 119              		.loc 1 558 0
 120 001c B4F5C86F 		cmp	r4, #1600
 121 0020 14D8     		bhi	.L10
 122              		.loc 1 558 0 is_stmt 0 discriminator 1
 123 0022 B5F5C86F 		cmp	r5, #1600
 124 0026 13D8     		bhi	.L11
 125              		.loc 1 558 0 discriminator 2
 126 0028 AE42     		cmp	r6, r5
 127 002a 04D0     		beq	.L9
 559:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ((mem->prev != rmem_idx) && (pmem->next != rmem_idx)) ||
 128              		.loc 1 559 0 is_stmt 1
 129 002c 0388     		ldrh	r3, [r0]
 130 002e 9E42     		cmp	r6, r3
ARM GAS  /tmp/ccn6Qu7E.s 			page 13


 131 0030 01D0     		beq	.L9
 560:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ((nmem != ram_end) && (nmem->prev != rmem_idx))) {
 561:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return 0;
 132              		.loc 1 561 0
 133 0032 0020     		movs	r0, #0
 134              	.LVL12:
 135 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 136              	.LVL13:
 137              	.L9:
 560:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ((nmem != ram_end) && (nmem->prev != rmem_idx))) {
 138              		.loc 1 560 0 discriminator 1
 139 0036 084B     		ldr	r3, .L17
 140 0038 1B68     		ldr	r3, [r3]
 559:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ((mem->prev != rmem_idx) && (pmem->next != rmem_idx)) ||
 141              		.loc 1 559 0 discriminator 1
 142 003a 9F42     		cmp	r7, r3
 143 003c 0AD0     		beq	.L13
 560:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ((nmem != ram_end) && (nmem->prev != rmem_idx))) {
 144              		.loc 1 560 0
 145 003e 7B88     		ldrh	r3, [r7, #2]
 146 0040 9E42     		cmp	r6, r3
 147 0042 01D0     		beq	.L16
 148              		.loc 1 561 0
 149 0044 0020     		movs	r0, #0
 150              	.LVL14:
 562:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 563:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return 1;
 564:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 151              		.loc 1 564 0
 152 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 153              	.LVL15:
 154              	.L16:
 563:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 155              		.loc 1 563 0
 156 0048 0120     		movs	r0, #1
 157              	.LVL16:
 158 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 159              	.LVL17:
 160              	.L10:
 561:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 161              		.loc 1 561 0
 162 004c 0020     		movs	r0, #0
 163              	.LVL18:
 164 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 165              	.LVL19:
 166              	.L11:
 167 0050 0020     		movs	r0, #0
 168              	.LVL20:
 169 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 170              	.LVL21:
 171              	.L13:
 563:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 172              		.loc 1 563 0
 173 0054 0120     		movs	r0, #1
 174              	.LVL22:
 175 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 176              	.LVL23:
ARM GAS  /tmp/ccn6Qu7E.s 			page 14


 177              	.L18:
 178              		.align	2
 179              	.L17:
 180 0058 00000000 		.word	.LANCHOR1
 181              		.cfi_endproc
 182              	.LFE162:
 184              		.section	.text.plug_holes,"ax",%progbits
 185              		.align	1
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv5-d16
 191              	plug_holes:
 192              	.LFB160:
 475:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *nmem;
 193              		.loc 1 475 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL24:
 198 0000 38B5     		push	{r3, r4, r5, lr}
 199              	.LCFI1:
 200              		.cfi_def_cfa_offset 16
 201              		.cfi_offset 3, -16
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 5, -8
 204              		.cfi_offset 14, -4
 205 0002 0446     		mov	r4, r0
 479:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem < ram_end", (u8_t *)mem < (u8_t *)ram_end);
 206              		.loc 1 479 0
 207 0004 354B     		ldr	r3, .L35
 208 0006 1B68     		ldr	r3, [r3]
 209 0008 8342     		cmp	r3, r0
 210 000a 40D8     		bhi	.L29
 211              	.LVL25:
 212              	.L20:
 480:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem->used == 0", mem->used == 0);
 213              		.loc 1 480 0
 214 000c 344B     		ldr	r3, .L35+4
 215 000e 1B68     		ldr	r3, [r3]
 216 0010 9C42     		cmp	r4, r3
 217 0012 44D2     		bcs	.L30
 218              	.L21:
 481:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 219              		.loc 1 481 0
 220 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 221 0016 002B     		cmp	r3, #0
 222 0018 49D1     		bne	.L31
 223              	.L22:
 484:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 224              		.loc 1 484 0
 225 001a 2388     		ldrh	r3, [r4]
 226 001c B3F5C86F 		cmp	r3, #1600
 227 0020 4DD8     		bhi	.L32
 228              	.L23:
 486:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (mem != nmem && nmem->used == 0 && (u8_t *)nmem != (u8_t *)ram_end) {
 229              		.loc 1 486 0
ARM GAS  /tmp/ccn6Qu7E.s 			page 15


 230 0022 2088     		ldrh	r0, [r4]
 231 0024 FFF7FEFF 		bl	ptr_to_mem
 232              	.LVL26:
 487:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->next is unused and not end of ram, combine mem and mem->next */
 233              		.loc 1 487 0
 234 0028 8442     		cmp	r4, r0
 235 002a 16D0     		beq	.L24
 487:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->next is unused and not end of ram, combine mem and mem->next */
 236              		.loc 1 487 0 is_stmt 0 discriminator 1
 237 002c 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 238 002e A3B9     		cbnz	r3, .L24
 487:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->next is unused and not end of ram, combine mem and mem->next */
 239              		.loc 1 487 0 discriminator 2
 240 0030 2B4B     		ldr	r3, .L35+4
 241 0032 1B68     		ldr	r3, [r3]
 242 0034 9842     		cmp	r0, r3
 243 0036 10D0     		beq	.L24
 489:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = mem;
 244              		.loc 1 489 0 is_stmt 1
 245 0038 2A4B     		ldr	r3, .L35+8
 246 003a 1B68     		ldr	r3, [r3]
 247 003c 9842     		cmp	r0, r3
 248 003e 46D0     		beq	.L33
 249              	.L25:
 492:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (nmem->next != MEM_SIZE_ALIGNED) {
 250              		.loc 1 492 0
 251 0040 0388     		ldrh	r3, [r0]
 252 0042 2380     		strh	r3, [r4]	@ movhi
 493:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ptr_to_mem(nmem->next)->prev = mem_to_ptr(mem);
 253              		.loc 1 493 0
 254 0044 0088     		ldrh	r0, [r0]
 255              	.LVL27:
 256 0046 B0F5C86F 		cmp	r0, #1600
 257 004a 06D0     		beq	.L24
 494:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 258              		.loc 1 494 0
 259 004c FFF7FEFF 		bl	ptr_to_mem
 260              	.LVL28:
 261 0050 0546     		mov	r5, r0
 262 0052 2046     		mov	r0, r4
 263 0054 FFF7FEFF 		bl	mem_to_ptr
 264              	.LVL29:
 265 0058 6880     		strh	r0, [r5, #2]	@ movhi
 266              	.L24:
 499:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (pmem != mem && pmem->used == 0) {
 267              		.loc 1 499 0
 268 005a 6088     		ldrh	r0, [r4, #2]
 269 005c FFF7FEFF 		bl	ptr_to_mem
 270              	.LVL30:
 271 0060 0546     		mov	r5, r0
 272              	.LVL31:
 500:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->prev is unused, combine mem and mem->prev */
 273              		.loc 1 500 0
 274 0062 8442     		cmp	r4, r0
 275 0064 12D0     		beq	.L19
 500:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->prev is unused, combine mem and mem->prev */
 276              		.loc 1 500 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccn6Qu7E.s 			page 16


 277 0066 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 278 0068 83B9     		cbnz	r3, .L19
 502:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = pmem;
 279              		.loc 1 502 0 is_stmt 1
 280 006a 1E4B     		ldr	r3, .L35+8
 281 006c 1B68     		ldr	r3, [r3]
 282 006e 9C42     		cmp	r4, r3
 283 0070 30D0     		beq	.L34
 284              	.L27:
 505:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (mem->next != MEM_SIZE_ALIGNED) {
 285              		.loc 1 505 0
 286 0072 2388     		ldrh	r3, [r4]
 287 0074 2B80     		strh	r3, [r5]	@ movhi
 506:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ptr_to_mem(mem->next)->prev = mem_to_ptr(pmem);
 288              		.loc 1 506 0
 289 0076 2088     		ldrh	r0, [r4]
 290              	.LVL32:
 291 0078 B0F5C86F 		cmp	r0, #1600
 292 007c 06D0     		beq	.L19
 507:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 293              		.loc 1 507 0
 294 007e FFF7FEFF 		bl	ptr_to_mem
 295              	.LVL33:
 296 0082 0446     		mov	r4, r0
 297              	.LVL34:
 298 0084 2846     		mov	r0, r5
 299 0086 FFF7FEFF 		bl	mem_to_ptr
 300              	.LVL35:
 301 008a 6080     		strh	r0, [r4, #2]	@ movhi
 302              	.L19:
 303 008c 38BD     		pop	{r3, r4, r5, pc}
 304              	.LVL36:
 305              	.L29:
 479:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem < ram_end", (u8_t *)mem < (u8_t *)ram_end);
 306              		.loc 1 479 0 discriminator 1
 307 008e 164B     		ldr	r3, .L35+12
 308 0090 40F2DF12 		movw	r2, #479
 309 0094 1549     		ldr	r1, .L35+16
 310 0096 1648     		ldr	r0, .L35+20
 311              	.LVL37:
 312 0098 FFF7FEFF 		bl	printf
 313              	.LVL38:
 314 009c B6E7     		b	.L20
 315              	.L30:
 480:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem->used == 0", mem->used == 0);
 316              		.loc 1 480 0 discriminator 1
 317 009e 124B     		ldr	r3, .L35+12
 318 00a0 4FF4F072 		mov	r2, #480
 319 00a4 1349     		ldr	r1, .L35+24
 320 00a6 1248     		ldr	r0, .L35+20
 321 00a8 FFF7FEFF 		bl	printf
 322              	.LVL39:
 323 00ac B2E7     		b	.L21
 324              	.L31:
 481:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 325              		.loc 1 481 0 discriminator 1
 326 00ae 0E4B     		ldr	r3, .L35+12
ARM GAS  /tmp/ccn6Qu7E.s 			page 17


 327 00b0 40F2E112 		movw	r2, #481
 328 00b4 1049     		ldr	r1, .L35+28
 329 00b6 0E48     		ldr	r0, .L35+20
 330 00b8 FFF7FEFF 		bl	printf
 331              	.LVL40:
 332 00bc ADE7     		b	.L22
 333              	.L32:
 484:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 334              		.loc 1 484 0 discriminator 1
 335 00be 0A4B     		ldr	r3, .L35+12
 336 00c0 4FF4F272 		mov	r2, #484
 337 00c4 0D49     		ldr	r1, .L35+32
 338 00c6 0A48     		ldr	r0, .L35+20
 339 00c8 FFF7FEFF 		bl	printf
 340              	.LVL41:
 341 00cc A9E7     		b	.L23
 342              	.LVL42:
 343              	.L33:
 490:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 344              		.loc 1 490 0
 345 00ce 054B     		ldr	r3, .L35+8
 346 00d0 1C60     		str	r4, [r3]
 347 00d2 B5E7     		b	.L25
 348              	.LVL43:
 349              	.L34:
 503:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 350              		.loc 1 503 0
 351 00d4 034B     		ldr	r3, .L35+8
 352 00d6 1860     		str	r0, [r3]
 353 00d8 CBE7     		b	.L27
 354              	.L36:
 355 00da 00BF     		.align	2
 356              	.L35:
 357 00dc 00000000 		.word	.LANCHOR0
 358 00e0 00000000 		.word	.LANCHOR1
 359 00e4 00000000 		.word	.LANCHOR2
 360 00e8 00000000 		.word	.LC0
 361 00ec 2C000000 		.word	.LC1
 362 00f0 44000000 		.word	.LC2
 363 00f4 6C000000 		.word	.LC3
 364 00f8 88000000 		.word	.LC4
 365 00fc A4000000 		.word	.LC5
 366              		.cfi_endproc
 367              	.LFE160:
 369              		.section	.text.mem_init,"ax",%progbits
 370              		.align	1
 371              		.global	mem_init
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv5-d16
 377              	mem_init:
 378              	.LFB161:
 517:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem;
 379              		.loc 1 517 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccn6Qu7E.s 			page 18


 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 38B5     		push	{r3, r4, r5, lr}
 384              	.LCFI2:
 385              		.cfi_def_cfa_offset 16
 386              		.cfi_offset 3, -16
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 5, -8
 389              		.cfi_offset 14, -4
 524:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize the start of the heap */
 390              		.loc 1 524 0
 391 0002 0B4C     		ldr	r4, .L39
 392 0004 24F00304 		bic	r4, r4, #3
 393 0008 0A4B     		ldr	r3, .L39+4
 394 000a 1C60     		str	r4, [r3]
 395              	.LVL44:
 527:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->prev = 0;
 396              		.loc 1 527 0
 397 000c 4FF4C865 		mov	r5, #1600
 398 0010 2580     		strh	r5, [r4]	@ movhi
 528:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->used = 0;
 399              		.loc 1 528 0
 400 0012 0023     		movs	r3, #0
 401 0014 6380     		strh	r3, [r4, #2]	@ movhi
 529:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize the end of the heap */
 402              		.loc 1 529 0
 403 0016 2371     		strb	r3, [r4, #4]
 531:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->used = 1;
 404              		.loc 1 531 0
 405 0018 2846     		mov	r0, r5
 406 001a FFF7FEFF 		bl	ptr_to_mem
 407              	.LVL45:
 408 001e 064B     		ldr	r3, .L39+8
 409 0020 1860     		str	r0, [r3]
 532:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->next = MEM_SIZE_ALIGNED;
 410              		.loc 1 532 0
 411 0022 0123     		movs	r3, #1
 412 0024 0371     		strb	r3, [r0, #4]
 533:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->prev = MEM_SIZE_ALIGNED;
 413              		.loc 1 533 0
 414 0026 0580     		strh	r5, [r0]	@ movhi
 534:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_SANITY();
 415              		.loc 1 534 0
 416 0028 4580     		strh	r5, [r0, #2]	@ movhi
 538:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 417              		.loc 1 538 0
 418 002a 044B     		ldr	r3, .L39+12
 419 002c 1C60     		str	r4, [r3]
 420 002e 38BD     		pop	{r3, r4, r5, pc}
 421              	.LVL46:
 422              	.L40:
 423              		.align	2
 424              	.L39:
 425 0030 03000000 		.word	ram_heap+3
 426 0034 00000000 		.word	.LANCHOR0
 427 0038 00000000 		.word	.LANCHOR1
 428 003c 00000000 		.word	.LANCHOR2
 429              		.cfi_endproc
ARM GAS  /tmp/ccn6Qu7E.s 			page 19


 430              	.LFE161:
 432              		.section	.text.mem_free,"ax",%progbits
 433              		.align	1
 434              		.global	mem_free
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv5-d16
 440              	mem_free:
 441              	.LFB163:
 565:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 566:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_SANITY_CHECK
 567:Middlewares/Third_Party/LwIP/src/core/mem.c **** static void
 568:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_sanity(void)
 569:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 570:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem;
 571:Middlewares/Third_Party/LwIP/src/core/mem.c ****   u8_t last_used;
 572:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 573:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* begin with first element here */
 574:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem = (struct mem *)ram;
 575:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("heap element used valid", (mem->used == 0) || (mem->used == 1));
 576:Middlewares/Third_Party/LwIP/src/core/mem.c ****   last_used = mem->used;
 577:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("heap element prev ptr valid", mem->prev == 0);
 578:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("heap element next ptr valid", mem->next <= MEM_SIZE_ALIGNED);
 579:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("heap element next ptr aligned", LWIP_MEM_ALIGN(ptr_to_mem(mem->next) == ptr_to_mem(m
 580:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 581:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* check all elements before the end of the heap */
 582:Middlewares/Third_Party/LwIP/src/core/mem.c ****   for (mem = ptr_to_mem(mem->next);
 583:Middlewares/Third_Party/LwIP/src/core/mem.c ****        ((u8_t *)mem > ram) && (mem < ram_end);
 584:Middlewares/Third_Party/LwIP/src/core/mem.c ****        mem = ptr_to_mem(mem->next)) {
 585:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("heap element aligned", LWIP_MEM_ALIGN(mem) == mem);
 586:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("heap element prev ptr valid", mem->prev <= MEM_SIZE_ALIGNED);
 587:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("heap element next ptr valid", mem->next <= MEM_SIZE_ALIGNED);
 588:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("heap element prev ptr aligned", LWIP_MEM_ALIGN(ptr_to_mem(mem->prev) == ptr_to_mem
 589:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("heap element next ptr aligned", LWIP_MEM_ALIGN(ptr_to_mem(mem->next) == ptr_to_mem
 590:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 591:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (last_used == 0) {
 592:Middlewares/Third_Party/LwIP/src/core/mem.c ****       /* 2 unused elements in a row? */
 593:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_ASSERT("heap element unused?", mem->used == 1);
 594:Middlewares/Third_Party/LwIP/src/core/mem.c ****     } else {
 595:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_ASSERT("heap element unused member", (mem->used == 0) || (mem->used == 1));
 596:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 597:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 598:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("heap element link valid", mem_link_valid(mem));
 599:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 600:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* used/unused altering */
 601:Middlewares/Third_Party/LwIP/src/core/mem.c ****     last_used = mem->used;
 602:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 603:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("heap end ptr sanity", mem == ptr_to_mem(MEM_SIZE_ALIGNED));
 604:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("heap element used valid", mem->used == 1);
 605:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("heap element prev ptr valid", mem->prev == MEM_SIZE_ALIGNED);
 606:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("heap element next ptr valid", mem->next == MEM_SIZE_ALIGNED);
 607:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 608:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_SANITY_CHECK */
 609:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 610:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 611:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Put a struct mem back on the heap
ARM GAS  /tmp/ccn6Qu7E.s 			page 20


 612:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 613:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param rmem is the data portion of a struct mem as returned by a previous
 614:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *             call to mem_malloc()
 615:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 616:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 617:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_free(void *rmem)
 618:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 442              		.loc 1 618 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              	.LVL47:
 619:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem;
 620:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_DECL_PROTECT();
 621:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 622:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (rmem == NULL) {
 447              		.loc 1 622 0
 448 0000 0028     		cmp	r0, #0
 449 0002 44D0     		beq	.L50
 618:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem;
 450              		.loc 1 618 0
 451 0004 38B5     		push	{r3, r4, r5, lr}
 452              	.LCFI3:
 453              		.cfi_def_cfa_offset 16
 454              		.cfi_offset 3, -16
 455              		.cfi_offset 4, -12
 456              		.cfi_offset 5, -8
 457              		.cfi_offset 14, -4
 458 0006 0446     		mov	r4, r0
 623:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("mem_free(p == NULL) was call
 624:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return;
 625:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 626:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((((mem_ptr_t)rmem) & (MEM_ALIGNMENT - 1)) != 0) {
 459              		.loc 1 626 0
 460 0008 10F0030F 		tst	r0, #3
 461 000c 1FD1     		bne	.L53
 627:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_MEM_ILLEGAL_FREE("mem_free: sanity check alignment");
 628:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_free: sanity check alignment\n"));
 629:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* protect mem stats from concurrent access */
 630:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_LOCKED(illegal);
 631:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return;
 632:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 633:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 634:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* Get the corresponding struct mem: */
 635:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* cast through void* to get rid of alignment warnings */
 636:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem = (struct mem *)(void *)((u8_t *)rmem - (SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET));
 462              		.loc 1 636 0
 463 000e A0F10805 		sub	r5, r0, #8
 464              	.LVL48:
 637:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 638:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((u8_t *)mem < ram || (u8_t *)rmem + MIN_SIZE_ALIGNED > (u8_t *)ram_end) {
 465              		.loc 1 638 0
 466 0012 1F4B     		ldr	r3, .L56
 467 0014 1B68     		ldr	r3, [r3]
 468 0016 9D42     		cmp	r5, r3
 469 0018 21D3     		bcc	.L44
 470              		.loc 1 638 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccn6Qu7E.s 			page 21


 471 001a 00F10C03 		add	r3, r0, #12
 472 001e 1D4A     		ldr	r2, .L56+4
 473 0020 1268     		ldr	r2, [r2]
 474 0022 9342     		cmp	r3, r2
 475 0024 1BD8     		bhi	.L44
 639:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_MEM_ILLEGAL_FREE("mem_free: illegal memory");
 640:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_free: illegal memory\n"));
 641:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* protect mem stats from concurrent access */
 642:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_LOCKED(illegal);
 643:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return;
 644:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 645:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
 646:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_overflow_check_element(mem);
 647:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 648:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* protect the heap from concurrent access */
 649:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_PROTECT();
 650:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* mem has to be in a used state */
 651:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (!mem->used) {
 476              		.loc 1 651 0 is_stmt 1
 477 0026 10F8043C 		ldrb	r3, [r0, #-4]	@ zero_extendqisi2
 478 002a 03B3     		cbz	r3, .L54
 652:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_MEM_ILLEGAL_FREE("mem_free: illegal memory: double free");
 653:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_MEM_FREE_UNPROTECT();
 654:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_free: illegal memory: double free?\n"));
 655:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* protect mem stats from concurrent access */
 656:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_LOCKED(illegal);
 657:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return;
 658:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 659:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 660:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (!mem_link_valid(mem)) {
 479              		.loc 1 660 0
 480 002c 2846     		mov	r0, r5
 481              	.LVL49:
 482 002e FFF7FEFF 		bl	mem_link_valid
 483              	.LVL50:
 484 0032 20B3     		cbz	r0, .L55
 661:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_MEM_ILLEGAL_FREE("mem_free: illegal memory: non-linked: double free");
 662:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_MEM_FREE_UNPROTECT();
 663:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_free: illegal memory: non-linked: double f
 664:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* protect mem stats from concurrent access */
 665:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_LOCKED(illegal);
 666:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return;
 667:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 668:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 669:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* mem is now unused. */
 670:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->used = 0;
 485              		.loc 1 670 0
 486 0034 0023     		movs	r3, #0
 487 0036 04F8043C 		strb	r3, [r4, #-4]
 671:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 672:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (mem < lfree) {
 488              		.loc 1 672 0
 489 003a 174B     		ldr	r3, .L56+8
 490 003c 1B68     		ldr	r3, [r3]
 491 003e 9D42     		cmp	r5, r3
 492 0040 01D2     		bcs	.L48
 673:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* the newly freed struct is now the lowest */
ARM GAS  /tmp/ccn6Qu7E.s 			page 22


 674:Middlewares/Third_Party/LwIP/src/core/mem.c ****     lfree = mem;
 493              		.loc 1 674 0
 494 0042 154B     		ldr	r3, .L56+8
 495 0044 1D60     		str	r5, [r3]
 496              	.L48:
 675:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 676:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 677:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_DEC_USED(used, mem->next - (mem_size_t)(((u8_t *)mem - ram)));
 678:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 679:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* finally, see if prev or next are free also */
 680:Middlewares/Third_Party/LwIP/src/core/mem.c ****   plug_holes(mem);
 497              		.loc 1 680 0
 498 0046 2846     		mov	r0, r5
 499 0048 FFF7FEFF 		bl	plug_holes
 500              	.LVL51:
 501 004c 38BD     		pop	{r3, r4, r5, pc}
 502              	.LVL52:
 503              	.L53:
 627:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_free: sanity check alignment\n"));
 504              		.loc 1 627 0 discriminator 1
 505 004e 134B     		ldr	r3, .L56+12
 506 0050 40F27322 		movw	r2, #627
 507 0054 1249     		ldr	r1, .L56+16
 508 0056 1348     		ldr	r0, .L56+20
 509              	.LVL53:
 510 0058 FFF7FEFF 		bl	printf
 511              	.LVL54:
 631:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 512              		.loc 1 631 0 discriminator 1
 513 005c 38BD     		pop	{r3, r4, r5, pc}
 514              	.LVL55:
 515              	.L44:
 639:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_free: illegal memory\n"));
 516              		.loc 1 639 0 discriminator 1
 517 005e 0F4B     		ldr	r3, .L56+12
 518 0060 40F27F22 		movw	r2, #639
 519 0064 1049     		ldr	r1, .L56+24
 520 0066 0F48     		ldr	r0, .L56+20
 521              	.LVL56:
 522 0068 FFF7FEFF 		bl	printf
 523              	.LVL57:
 643:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 524              		.loc 1 643 0 discriminator 1
 525 006c 38BD     		pop	{r3, r4, r5, pc}
 526              	.LVL58:
 527              	.L54:
 652:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_MEM_FREE_UNPROTECT();
 528              		.loc 1 652 0 discriminator 1
 529 006e 0B4B     		ldr	r3, .L56+12
 530 0070 4FF42372 		mov	r2, #652
 531 0074 0D49     		ldr	r1, .L56+28
 532 0076 0B48     		ldr	r0, .L56+20
 533              	.LVL59:
 534 0078 FFF7FEFF 		bl	printf
 535              	.LVL60:
 657:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 536              		.loc 1 657 0 discriminator 1
ARM GAS  /tmp/ccn6Qu7E.s 			page 23


 537 007c 38BD     		pop	{r3, r4, r5, pc}
 538              	.LVL61:
 539              	.L55:
 661:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_MEM_FREE_UNPROTECT();
 540              		.loc 1 661 0 discriminator 1
 541 007e 074B     		ldr	r3, .L56+12
 542 0080 40F29522 		movw	r2, #661
 543 0084 0A49     		ldr	r1, .L56+32
 544 0086 0748     		ldr	r0, .L56+20
 545 0088 FFF7FEFF 		bl	printf
 546              	.LVL62:
 666:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 547              		.loc 1 666 0 discriminator 1
 548 008c 38BD     		pop	{r3, r4, r5, pc}
 549              	.LVL63:
 550              	.L50:
 551              	.LCFI4:
 552              		.cfi_def_cfa_offset 0
 553              		.cfi_restore 3
 554              		.cfi_restore 4
 555              		.cfi_restore 5
 556              		.cfi_restore 14
 557 008e 7047     		bx	lr
 558              	.L57:
 559              		.align	2
 560              	.L56:
 561 0090 00000000 		.word	.LANCHOR0
 562 0094 00000000 		.word	.LANCHOR1
 563 0098 00000000 		.word	.LANCHOR2
 564 009c 00000000 		.word	.LC0
 565 00a0 00000000 		.word	.LC6
 566 00a4 44000000 		.word	.LC2
 567 00a8 24000000 		.word	.LC7
 568 00ac 40000000 		.word	.LC8
 569 00b0 68000000 		.word	.LC9
 570              		.cfi_endproc
 571              	.LFE163:
 573              		.section	.text.mem_trim,"ax",%progbits
 574              		.align	1
 575              		.global	mem_trim
 576              		.syntax unified
 577              		.thumb
 578              		.thumb_func
 579              		.fpu fpv5-d16
 581              	mem_trim:
 582              	.LFB164:
 681:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_SANITY();
 682:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 683:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_free_count = 1;
 684:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 685:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_UNPROTECT();
 686:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 687:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 688:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 689:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Shrink memory returned by mem_malloc().
 690:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 691:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param rmem pointer to memory allocated by mem_malloc the is to be shrinked
ARM GAS  /tmp/ccn6Qu7E.s 			page 24


 692:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param new_size required size after shrinking (needs to be smaller than or
 693:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *                equal to the previous size)
 694:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return for compatibility reasons: is always == rmem, at the moment
 695:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *         or NULL if newsize is > old size, in which case rmem is NOT touched
 696:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *         or freed!
 697:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 698:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 699:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_trim(void *rmem, mem_size_t new_size)
 700:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 583              		.loc 1 700 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              	.LVL64:
 588 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 589              	.LCFI5:
 590              		.cfi_def_cfa_offset 32
 591              		.cfi_offset 3, -32
 592              		.cfi_offset 4, -28
 593              		.cfi_offset 5, -24
 594              		.cfi_offset 6, -20
 595              		.cfi_offset 7, -16
 596              		.cfi_offset 8, -12
 597              		.cfi_offset 9, -8
 598              		.cfi_offset 14, -4
 599 0004 0546     		mov	r5, r0
 701:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t size, newsize;
 702:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t ptr, ptr2;
 703:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem, *mem2;
 704:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* use the FREE_PROTECT here: it protects with sem OR SYS_ARCH_PROTECT */
 705:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_DECL_PROTECT();
 706:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 707:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* Expand the size of the allocated memory region so that we can
 708:Middlewares/Third_Party/LwIP/src/core/mem.c ****      adjust for alignment. */
 709:Middlewares/Third_Party/LwIP/src/core/mem.c ****   newsize = (mem_size_t)LWIP_MEM_ALIGN_SIZE(new_size);
 600              		.loc 1 709 0
 601 0006 CC1C     		adds	r4, r1, #3
 602 0008 A4B2     		uxth	r4, r4
 603 000a 24F00304 		bic	r4, r4, #3
 604 000e A4B2     		uxth	r4, r4
 605              	.LVL65:
 710:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize < MIN_SIZE_ALIGNED) {
 606              		.loc 1 710 0
 607 0010 0B2C     		cmp	r4, #11
 608 0012 00D8     		bhi	.L59
 711:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* every data block must be at least MIN_SIZE_ALIGNED long */
 712:Middlewares/Third_Party/LwIP/src/core/mem.c ****     newsize = MIN_SIZE_ALIGNED;
 609              		.loc 1 712 0
 610 0014 0C24     		movs	r4, #12
 611              	.LVL66:
 612              	.L59:
 713:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 714:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
 715:Middlewares/Third_Party/LwIP/src/core/mem.c ****   newsize += MEM_SANITY_REGION_BEFORE_ALIGNED + MEM_SANITY_REGION_AFTER_ALIGNED;
 716:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 717:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((newsize > MEM_SIZE_ALIGNED) || (newsize < new_size)) {
 613              		.loc 1 717 0
ARM GAS  /tmp/ccn6Qu7E.s 			page 25


 614 0016 8C42     		cmp	r4, r1
 615 0018 2CBF     		ite	cs
 616 001a 0021     		movcs	r1, #0
 617              	.LVL67:
 618 001c 0121     		movcc	r1, #1
 619 001e B4F5C86F 		cmp	r4, #1600
 620 0022 88BF     		it	hi
 621 0024 41F00101 		orrhi	r1, r1, #1
 622 0028 0029     		cmp	r1, #0
 623 002a 40F09580 		bne	.L70
 718:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 719:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 720:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 721:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("mem_trim: legal memory", (u8_t *)rmem >= (u8_t *)ram &&
 624              		.loc 1 721 0
 625 002e 4D4B     		ldr	r3, .L77
 626 0030 1B68     		ldr	r3, [r3]
 627 0032 AB42     		cmp	r3, r5
 628 0034 03D8     		bhi	.L61
 629              		.loc 1 721 0 is_stmt 0 discriminator 2
 630 0036 4C4B     		ldr	r3, .L77+4
 631 0038 1B68     		ldr	r3, [r3]
 632 003a 9D42     		cmp	r5, r3
 633 003c 06D3     		bcc	.L62
 634              	.L61:
 635              		.loc 1 721 0 discriminator 3
 636 003e 4B4B     		ldr	r3, .L77+8
 637 0040 40F2D222 		movw	r2, #722
 638 0044 4A49     		ldr	r1, .L77+12
 639 0046 4B48     		ldr	r0, .L77+16
 640              	.LVL68:
 641 0048 FFF7FEFF 		bl	printf
 642              	.LVL69:
 643              	.L62:
 722:Middlewares/Third_Party/LwIP/src/core/mem.c ****               (u8_t *)rmem < (u8_t *)ram_end);
 723:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 724:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((u8_t *)rmem < (u8_t *)ram || (u8_t *)rmem >= (u8_t *)ram_end) {
 644              		.loc 1 724 0 is_stmt 1
 645 004c 454B     		ldr	r3, .L77
 646 004e 1B68     		ldr	r3, [r3]
 647 0050 9D42     		cmp	r5, r3
 648 0052 C0F08280 		bcc	.L60
 649              		.loc 1 724 0 is_stmt 0 discriminator 1
 650 0056 444B     		ldr	r3, .L77+4
 651 0058 1B68     		ldr	r3, [r3]
 652 005a 9D42     		cmp	r5, r3
 653 005c 7DD2     		bcs	.L60
 654              	.LVL70:
 725:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_trim: illegal memory\n"));
 726:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* protect mem stats from concurrent access */
 727:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_LOCKED(illegal);
 728:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return rmem;
 729:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 730:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* Get the corresponding struct mem ... */
 731:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* cast through void* to get rid of alignment warnings */
 732:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem = (struct mem *)(void *)((u8_t *)rmem - (SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET));
 733:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
ARM GAS  /tmp/ccn6Qu7E.s 			page 26


 734:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_overflow_check_element(mem);
 735:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 736:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* ... and its offset pointer */
 737:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ptr = mem_to_ptr(mem);
 655              		.loc 1 737 0 is_stmt 1
 656 005e A5F10800 		sub	r0, r5, #8
 657              	.LVL71:
 658 0062 FFF7FEFF 		bl	mem_to_ptr
 659              	.LVL72:
 660 0066 0646     		mov	r6, r0
 661              	.LVL73:
 738:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 739:Middlewares/Third_Party/LwIP/src/core/mem.c ****   size = (mem_size_t)((mem_size_t)(mem->next - ptr) - (SIZEOF_STRUCT_MEM + MEM_SANITY_OVERHEAD));
 662              		.loc 1 739 0
 663 0068 35F8088C 		ldrh	r8, [r5, #-8]
 664 006c A8EB0008 		sub	r8, r8, r0
 665 0070 1FFA88F8 		uxth	r8, r8
 666 0074 A8F10808 		sub	r8, r8, #8
 667 0078 1FFA88F8 		uxth	r8, r8
 668              	.LVL74:
 740:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("mem_trim can only shrink memory", newsize <= size);
 669              		.loc 1 740 0
 670 007c 4445     		cmp	r4, r8
 671 007e 29D8     		bhi	.L73
 672              	.LVL75:
 673              	.L63:
 741:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize > size) {
 674              		.loc 1 741 0
 675 0080 4445     		cmp	r4, r8
 676 0082 6DD8     		bhi	.L71
 742:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* not supported */
 743:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 744:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 745:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize == size) {
 677              		.loc 1 745 0
 678 0084 69D0     		beq	.L60
 746:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* No change in size, simply return */
 747:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return rmem;
 748:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 749:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 750:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* protect the heap from concurrent access */
 751:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_PROTECT();
 752:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 753:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem2 = ptr_to_mem(mem->next);
 679              		.loc 1 753 0
 680 0086 35F8087C 		ldrh	r7, [r5, #-8]
 681 008a 3846     		mov	r0, r7
 682 008c FFF7FEFF 		bl	ptr_to_mem
 683              	.LVL76:
 684 0090 8146     		mov	r9, r0
 685              	.LVL77:
 754:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (mem2->used == 0) {
 686              		.loc 1 754 0
 687 0092 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 688 0094 002B     		cmp	r3, #0
 689 0096 33D1     		bne	.L64
 690              	.LBB2:
ARM GAS  /tmp/ccn6Qu7E.s 			page 27


 755:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* The next struct is unused, we can simply move it at little */
 756:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem_size_t next;
 757:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("invalid next ptr", mem->next != MEM_SIZE_ALIGNED);
 691              		.loc 1 757 0
 692 0098 B7F5C86F 		cmp	r7, #1600
 693 009c 22D0     		beq	.L74
 694              	.LVL78:
 695              	.L65:
 758:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* remember the old next pointer */
 759:Middlewares/Third_Party/LwIP/src/core/mem.c ****     next = mem2->next;
 696              		.loc 1 759 0
 697 009e B9F80070 		ldrh	r7, [r9]
 698              	.LVL79:
 760:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* create new struct mem which is moved directly after the shrinked mem */
 761:Middlewares/Third_Party/LwIP/src/core/mem.c ****     ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + newsize);
 699              		.loc 1 761 0
 700 00a2 3444     		add	r4, r4, r6
 701              	.LVL80:
 702 00a4 A4B2     		uxth	r4, r4
 703 00a6 0834     		adds	r4, r4, #8
 704 00a8 A4B2     		uxth	r4, r4
 705              	.LVL81:
 762:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (lfree == mem2) {
 706              		.loc 1 762 0
 707 00aa 334B     		ldr	r3, .L77+20
 708 00ac 1B68     		ldr	r3, [r3]
 709 00ae 9945     		cmp	r9, r3
 710 00b0 20D0     		beq	.L75
 711              	.L66:
 763:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = ptr_to_mem(ptr2);
 764:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 765:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2 = ptr_to_mem(ptr2);
 712              		.loc 1 765 0
 713 00b2 2046     		mov	r0, r4
 714 00b4 FFF7FEFF 		bl	ptr_to_mem
 715              	.LVL82:
 766:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->used = 0;
 716              		.loc 1 766 0
 717 00b8 0023     		movs	r3, #0
 718 00ba 0371     		strb	r3, [r0, #4]
 767:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* restore the next pointer */
 768:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->next = next;
 719              		.loc 1 768 0
 720 00bc 0780     		strh	r7, [r0]	@ movhi
 769:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* link it back to mem */
 770:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->prev = ptr;
 721              		.loc 1 770 0
 722 00be 4680     		strh	r6, [r0, #2]	@ movhi
 771:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* link mem to it */
 772:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem->next = ptr2;
 723              		.loc 1 772 0
 724 00c0 25F8084C 		strh	r4, [r5, #-8]	@ movhi
 773:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* last thing to restore linked list: as we have moved mem2,
 774:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * let 'mem2->next->prev' point to mem2 again. but only if mem2->next is not
 775:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * the end of the heap */
 776:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (mem2->next != MEM_SIZE_ALIGNED) {
 725              		.loc 1 776 0
ARM GAS  /tmp/ccn6Qu7E.s 			page 28


 726 00c4 0088     		ldrh	r0, [r0]
 727              	.LVL83:
 728 00c6 B0F5C86F 		cmp	r0, #1600
 729 00ca 46D0     		beq	.L60
 777:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ptr_to_mem(mem2->next)->prev = ptr2;
 730              		.loc 1 777 0
 731 00cc FFF7FEFF 		bl	ptr_to_mem
 732              	.LVL84:
 733 00d0 4480     		strh	r4, [r0, #2]	@ movhi
 734 00d2 42E0     		b	.L60
 735              	.LVL85:
 736              	.L73:
 737              	.LBE2:
 740:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize > size) {
 738              		.loc 1 740 0 discriminator 1
 739 00d4 254B     		ldr	r3, .L77+8
 740 00d6 4FF43972 		mov	r2, #740
 741 00da 2849     		ldr	r1, .L77+24
 742 00dc 2548     		ldr	r0, .L77+16
 743              	.LVL86:
 744 00de FFF7FEFF 		bl	printf
 745              	.LVL87:
 746 00e2 CDE7     		b	.L63
 747              	.LVL88:
 748              	.L74:
 749              	.LBB3:
 757:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* remember the old next pointer */
 750              		.loc 1 757 0 discriminator 1
 751 00e4 214B     		ldr	r3, .L77+8
 752 00e6 40F2F522 		movw	r2, #757
 753 00ea 2549     		ldr	r1, .L77+28
 754 00ec 2148     		ldr	r0, .L77+16
 755              	.LVL89:
 756 00ee FFF7FEFF 		bl	printf
 757              	.LVL90:
 758 00f2 D4E7     		b	.L65
 759              	.LVL91:
 760              	.L75:
 763:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 761              		.loc 1 763 0
 762 00f4 2046     		mov	r0, r4
 763 00f6 FFF7FEFF 		bl	ptr_to_mem
 764              	.LVL92:
 765 00fa 1F4B     		ldr	r3, .L77+20
 766 00fc 1860     		str	r0, [r3]
 767 00fe D8E7     		b	.L66
 768              	.LVL93:
 769              	.L64:
 770              	.LBE3:
 778:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 779:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_DEC_USED(used, (size - newsize));
 780:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* no need to plug holes, we've already done that */
 781:Middlewares/Third_Party/LwIP/src/core/mem.c ****   } else if (newsize + SIZEOF_STRUCT_MEM + MIN_SIZE_ALIGNED <= size) {
 771              		.loc 1 781 0
 772 0100 04F11403 		add	r3, r4, #20
 773 0104 4345     		cmp	r3, r8
 774 0106 28D8     		bhi	.L60
ARM GAS  /tmp/ccn6Qu7E.s 			page 29


 782:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* Next struct is used but there's room for another struct mem with
 783:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * at least MIN_SIZE_ALIGNED of data.
 784:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * Old size ('size') must be big enough to contain at least 'newsize' plus a struct mem
 785:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * ('SIZEOF_STRUCT_MEM') with some data ('MIN_SIZE_ALIGNED').
 786:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * @todo we could leave out MIN_SIZE_ALIGNED. We would create an empty
 787:Middlewares/Third_Party/LwIP/src/core/mem.c ****      *       region that couldn't hold data, but when mem->next gets freed,
 788:Middlewares/Third_Party/LwIP/src/core/mem.c ****      *       the 2 regions would be combined, resulting in more free memory */
 789:Middlewares/Third_Party/LwIP/src/core/mem.c ****     ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + newsize);
 775              		.loc 1 789 0
 776 0108 3444     		add	r4, r4, r6
 777              	.LVL94:
 778 010a A4B2     		uxth	r4, r4
 779 010c 0834     		adds	r4, r4, #8
 780 010e A4B2     		uxth	r4, r4
 781              	.LVL95:
 790:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("invalid next ptr", mem->next != MEM_SIZE_ALIGNED);
 782              		.loc 1 790 0
 783 0110 B7F5C86F 		cmp	r7, #1600
 784 0114 18D0     		beq	.L76
 785              	.LVL96:
 786              	.L67:
 791:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2 = ptr_to_mem(ptr2);
 787              		.loc 1 791 0
 788 0116 2046     		mov	r0, r4
 789 0118 FFF7FEFF 		bl	ptr_to_mem
 790              	.LVL97:
 792:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (mem2 < lfree) {
 791              		.loc 1 792 0
 792 011c 164B     		ldr	r3, .L77+20
 793 011e 1B68     		ldr	r3, [r3]
 794 0120 9842     		cmp	r0, r3
 795 0122 01D2     		bcs	.L68
 793:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = mem2;
 796              		.loc 1 793 0
 797 0124 144B     		ldr	r3, .L77+20
 798 0126 1860     		str	r0, [r3]
 799              	.L68:
 794:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 795:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->used = 0;
 800              		.loc 1 795 0
 801 0128 0023     		movs	r3, #0
 802 012a 0371     		strb	r3, [r0, #4]
 796:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->next = mem->next;
 803              		.loc 1 796 0
 804 012c 35F8083C 		ldrh	r3, [r5, #-8]
 805 0130 0380     		strh	r3, [r0]	@ movhi
 797:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->prev = ptr;
 806              		.loc 1 797 0
 807 0132 4680     		strh	r6, [r0, #2]	@ movhi
 798:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem->next = ptr2;
 808              		.loc 1 798 0
 809 0134 25F8084C 		strh	r4, [r5, #-8]	@ movhi
 799:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (mem2->next != MEM_SIZE_ALIGNED) {
 810              		.loc 1 799 0
 811 0138 0088     		ldrh	r0, [r0]
 812              	.LVL98:
 813 013a B0F5C86F 		cmp	r0, #1600
ARM GAS  /tmp/ccn6Qu7E.s 			page 30


 814 013e 0CD0     		beq	.L60
 800:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ptr_to_mem(mem2->next)->prev = ptr2;
 815              		.loc 1 800 0
 816 0140 FFF7FEFF 		bl	ptr_to_mem
 817              	.LVL99:
 818 0144 4480     		strh	r4, [r0, #2]	@ movhi
 819 0146 08E0     		b	.L60
 820              	.LVL100:
 821              	.L76:
 790:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2 = ptr_to_mem(ptr2);
 822              		.loc 1 790 0 discriminator 1
 823 0148 084B     		ldr	r3, .L77+8
 824 014a 40F21632 		movw	r2, #790
 825 014e 0C49     		ldr	r1, .L77+28
 826 0150 0848     		ldr	r0, .L77+16
 827              	.LVL101:
 828 0152 FFF7FEFF 		bl	printf
 829              	.LVL102:
 830 0156 DEE7     		b	.L67
 831              	.LVL103:
 832              	.L70:
 718:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 833              		.loc 1 718 0
 834 0158 0025     		movs	r5, #0
 835              	.LVL104:
 836              	.L60:
 801:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 802:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_DEC_USED(used, (size - newsize));
 803:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* the original mem->next is used, so no need to plug holes! */
 804:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 805:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* else {
 806:Middlewares/Third_Party/LwIP/src/core/mem.c ****     next struct mem is used but size between mem and mem2 is not big enough
 807:Middlewares/Third_Party/LwIP/src/core/mem.c ****     to create another struct mem
 808:Middlewares/Third_Party/LwIP/src/core/mem.c ****     -> don't do anyhting.
 809:Middlewares/Third_Party/LwIP/src/core/mem.c ****     -> the remaining space stays unused since it is too small
 810:Middlewares/Third_Party/LwIP/src/core/mem.c ****   } */
 811:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
 812:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_overflow_init_element(mem, new_size);
 813:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 814:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_SANITY();
 815:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 816:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_free_count = 1;
 817:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 818:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_UNPROTECT();
 819:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return rmem;
 820:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 837              		.loc 1 820 0
 838 015a 2846     		mov	r0, r5
 839 015c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 840              	.LVL105:
 841              	.L71:
 743:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 842              		.loc 1 743 0
 843 0160 0025     		movs	r5, #0
 844              	.LVL106:
 845 0162 FAE7     		b	.L60
 846              	.L78:
ARM GAS  /tmp/ccn6Qu7E.s 			page 31


 847              		.align	2
 848              	.L77:
 849 0164 00000000 		.word	.LANCHOR0
 850 0168 00000000 		.word	.LANCHOR1
 851 016c 00000000 		.word	.LC0
 852 0170 00000000 		.word	.LC10
 853 0174 44000000 		.word	.LC2
 854 0178 00000000 		.word	.LANCHOR2
 855 017c 18000000 		.word	.LC11
 856 0180 38000000 		.word	.LC12
 857              		.cfi_endproc
 858              	.LFE164:
 860              		.section	.text.mem_malloc,"ax",%progbits
 861              		.align	1
 862              		.global	mem_malloc
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu fpv5-d16
 868              	mem_malloc:
 869              	.LFB165:
 821:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 822:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 823:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Allocate a block of memory with a minimum of 'size' bytes.
 824:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 825:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size_in is the minimum size of the requested block in bytes.
 826:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return pointer to allocated memory or NULL if no free memory was found.
 827:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 828:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Note that the returned value will always be aligned (as defined by MEM_ALIGNMENT).
 829:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 830:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 831:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_malloc(mem_size_t size_in)
 832:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 870              		.loc 1 832 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              	.LVL107:
 833:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t ptr, ptr2, size;
 834:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem, *mem2;
 835:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 836:Middlewares/Third_Party/LwIP/src/core/mem.c ****   u8_t local_mem_free_count = 0;
 837:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 838:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_ALLOC_DECL_PROTECT();
 839:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 840:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (size_in == 0) {
 875              		.loc 1 840 0
 876 0000 0028     		cmp	r0, #0
 877 0002 00F09F80 		beq	.L95
 832:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t ptr, ptr2, size;
 878              		.loc 1 832 0
 879 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 880              	.LCFI6:
 881              		.cfi_def_cfa_offset 24
 882              		.cfi_offset 4, -24
 883              		.cfi_offset 5, -20
 884              		.cfi_offset 6, -16
ARM GAS  /tmp/ccn6Qu7E.s 			page 32


 885              		.cfi_offset 7, -12
 886              		.cfi_offset 8, -8
 887              		.cfi_offset 14, -4
 888 000a 0346     		mov	r3, r0
 841:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 842:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 843:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 844:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* Expand the size of the allocated memory region so that we can
 845:Middlewares/Third_Party/LwIP/src/core/mem.c ****      adjust for alignment. */
 846:Middlewares/Third_Party/LwIP/src/core/mem.c ****   size = (mem_size_t)LWIP_MEM_ALIGN_SIZE(size_in);
 889              		.loc 1 846 0
 890 000c C61C     		adds	r6, r0, #3
 891 000e B6B2     		uxth	r6, r6
 892 0010 26F00306 		bic	r6, r6, #3
 893 0014 B6B2     		uxth	r6, r6
 894              	.LVL108:
 847:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (size < MIN_SIZE_ALIGNED) {
 895              		.loc 1 847 0
 896 0016 0B2E     		cmp	r6, #11
 897 0018 00D8     		bhi	.L81
 848:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* every data block must be at least MIN_SIZE_ALIGNED long */
 849:Middlewares/Third_Party/LwIP/src/core/mem.c ****     size = MIN_SIZE_ALIGNED;
 898              		.loc 1 849 0
 899 001a 0C26     		movs	r6, #12
 900              	.LVL109:
 901              	.L81:
 850:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 851:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
 852:Middlewares/Third_Party/LwIP/src/core/mem.c ****   size += MEM_SANITY_REGION_BEFORE_ALIGNED + MEM_SANITY_REGION_AFTER_ALIGNED;
 853:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 854:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((size > MEM_SIZE_ALIGNED) || (size < size_in)) {
 902              		.loc 1 854 0
 903 001c 9E42     		cmp	r6, r3
 904 001e 2CBF     		ite	cs
 905 0020 0023     		movcs	r3, #0
 906 0022 0123     		movcc	r3, #1
 907 0024 B6F5C86F 		cmp	r6, #1600
 908 0028 88BF     		it	hi
 909 002a 43F00103 		orrhi	r3, r3, #1
 910 002e 002B     		cmp	r3, #0
 911 0030 40F08A80 		bne	.L97
 855:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 856:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 857:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 858:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* protect the heap from concurrent access */
 859:Middlewares/Third_Party/LwIP/src/core/mem.c ****   sys_mutex_lock(&mem_mutex);
 860:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_ALLOC_PROTECT();
 861:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 862:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* run as long as a mem_free disturbed mem_malloc or mem_trim */
 863:Middlewares/Third_Party/LwIP/src/core/mem.c ****   do {
 864:Middlewares/Third_Party/LwIP/src/core/mem.c ****     local_mem_free_count = 0;
 865:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 866:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 867:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* Scan through the heap searching for a free block that is big enough,
 868:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * beginning with the lowest free block.
 869:Middlewares/Third_Party/LwIP/src/core/mem.c ****      */
 870:Middlewares/Third_Party/LwIP/src/core/mem.c ****     for (ptr = mem_to_ptr(lfree); ptr < MEM_SIZE_ALIGNED - size;
ARM GAS  /tmp/ccn6Qu7E.s 			page 33


 912              		.loc 1 870 0
 913 0034 464B     		ldr	r3, .L107
 914 0036 1868     		ldr	r0, [r3]
 915              	.LVL110:
 916 0038 FFF7FEFF 		bl	mem_to_ptr
 917              	.LVL111:
 918 003c 0446     		mov	r4, r0
 919              	.LVL112:
 920 003e 4DE0     		b	.L82
 921              	.LVL113:
 922              	.L106:
 871:Middlewares/Third_Party/LwIP/src/core/mem.c ****          ptr = ptr_to_mem(ptr)->next) {
 872:Middlewares/Third_Party/LwIP/src/core/mem.c ****       mem = ptr_to_mem(ptr);
 873:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 874:Middlewares/Third_Party/LwIP/src/core/mem.c ****       mem_free_count = 0;
 875:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_MEM_ALLOC_UNPROTECT();
 876:Middlewares/Third_Party/LwIP/src/core/mem.c ****       /* allow mem_free or mem_trim to run */
 877:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_MEM_ALLOC_PROTECT();
 878:Middlewares/Third_Party/LwIP/src/core/mem.c ****       if (mem_free_count != 0) {
 879:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /* If mem_free or mem_trim have run, we have to restart since they
 880:Middlewares/Third_Party/LwIP/src/core/mem.c ****            could have altered our current struct mem. */
 881:Middlewares/Third_Party/LwIP/src/core/mem.c ****         local_mem_free_count = 1;
 882:Middlewares/Third_Party/LwIP/src/core/mem.c ****         break;
 883:Middlewares/Third_Party/LwIP/src/core/mem.c ****       }
 884:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 885:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 886:Middlewares/Third_Party/LwIP/src/core/mem.c ****       if ((!mem->used) &&
 887:Middlewares/Third_Party/LwIP/src/core/mem.c ****           (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
 888:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /* mem is not used and at least perfect fit is possible:
 889:Middlewares/Third_Party/LwIP/src/core/mem.c ****          * mem->next - (ptr + SIZEOF_STRUCT_MEM) gives us the 'user data size' of mem */
 890:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 891:Middlewares/Third_Party/LwIP/src/core/mem.c ****         if (mem->next - (ptr + SIZEOF_STRUCT_MEM) >= (size + SIZEOF_STRUCT_MEM + MIN_SIZE_ALIGNED))
 892:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* (in addition to the above, we test if another struct mem (SIZEOF_STRUCT_MEM) containin
 893:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * at least MIN_SIZE_ALIGNED of data also fits in the 'user data space' of 'mem')
 894:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * -> split large block, create empty remainder,
 895:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * remainder must be large enough to contain MIN_SIZE_ALIGNED data: if
 896:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * mem->next - (ptr + (2*SIZEOF_STRUCT_MEM)) == size,
 897:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * struct mem would fit in but no data between mem2 and mem2->next
 898:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * @todo we could leave out MIN_SIZE_ALIGNED. We would create an empty
 899:Middlewares/Third_Party/LwIP/src/core/mem.c ****            *       region that couldn't hold data, but when mem->next gets freed,
 900:Middlewares/Third_Party/LwIP/src/core/mem.c ****            *       the 2 regions would be combined, resulting in more free memory
 901:Middlewares/Third_Party/LwIP/src/core/mem.c ****            */
 902:Middlewares/Third_Party/LwIP/src/core/mem.c ****           ptr2 = (mem_size_t)(ptr + SIZEOF_STRUCT_MEM + size);
 903:Middlewares/Third_Party/LwIP/src/core/mem.c ****           LWIP_ASSERT("invalid next ptr",ptr2 != MEM_SIZE_ALIGNED);
 923              		.loc 1 903 0 discriminator 1
 924 0040 444B     		ldr	r3, .L107+4
 925 0042 40F28732 		movw	r2, #903
 926 0046 4449     		ldr	r1, .L107+8
 927 0048 4448     		ldr	r0, .L107+12
 928              	.LVL114:
 929 004a FFF7FEFF 		bl	printf
 930              	.LVL115:
 931 004e 63E0     		b	.L85
 932              	.LVL116:
 933              	.L84:
 904:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* create mem2 struct */
 905:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2 = ptr_to_mem(ptr2);
ARM GAS  /tmp/ccn6Qu7E.s 			page 34


 906:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->used = 0;
 907:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->next = mem->next;
 908:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->prev = ptr;
 909:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* and insert it between mem and mem->next */
 910:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem->next = ptr2;
 911:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem->used = 1;
 912:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 913:Middlewares/Third_Party/LwIP/src/core/mem.c ****           if (mem2->next != MEM_SIZE_ALIGNED) {
 914:Middlewares/Third_Party/LwIP/src/core/mem.c ****             ptr_to_mem(mem2->next)->prev = ptr2;
 915:Middlewares/Third_Party/LwIP/src/core/mem.c ****           }
 916:Middlewares/Third_Party/LwIP/src/core/mem.c ****           MEM_STATS_INC_USED(used, (size + SIZEOF_STRUCT_MEM));
 917:Middlewares/Third_Party/LwIP/src/core/mem.c ****         } else {
 918:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* (a mem2 struct does no fit into the user data space of mem and mem->next will always
 919:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * be used at this point: if not we have 2 unused structs in a row, plug_holes should hav
 920:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * take care of this).
 921:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * -> near fit or exact fit: do not split, no mem2 creation
 922:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * also can't move mem->next directly behind mem, since mem->next
 923:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * will always be used at this point!
 924:Middlewares/Third_Party/LwIP/src/core/mem.c ****            */
 925:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem->used = 1;
 934              		.loc 1 925 0
 935 0050 0123     		movs	r3, #1
 936 0052 0371     		strb	r3, [r0, #4]
 937              	.LVL117:
 938              	.L86:
 926:Middlewares/Third_Party/LwIP/src/core/mem.c ****           MEM_STATS_INC_USED(used, mem->next - mem_to_ptr(mem));
 927:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 928:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 929:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_malloc_adjust_lfree:
 930:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 931:Middlewares/Third_Party/LwIP/src/core/mem.c ****         if (mem == lfree) {
 939              		.loc 1 931 0
 940 0054 3E4B     		ldr	r3, .L107
 941 0056 1868     		ldr	r0, [r3]
 942 0058 8542     		cmp	r5, r0
 943 005a 10D0     		beq	.L87
 944              	.L88:
 932:Middlewares/Third_Party/LwIP/src/core/mem.c ****           struct mem *cur = lfree;
 933:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* Find next free block after mem and update lowest free pointer */
 934:Middlewares/Third_Party/LwIP/src/core/mem.c ****           while (cur->used && cur != ram_end) {
 935:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 936:Middlewares/Third_Party/LwIP/src/core/mem.c ****             mem_free_count = 0;
 937:Middlewares/Third_Party/LwIP/src/core/mem.c ****             LWIP_MEM_ALLOC_UNPROTECT();
 938:Middlewares/Third_Party/LwIP/src/core/mem.c ****             /* prevent high interrupt latency... */
 939:Middlewares/Third_Party/LwIP/src/core/mem.c ****             LWIP_MEM_ALLOC_PROTECT();
 940:Middlewares/Third_Party/LwIP/src/core/mem.c ****             if (mem_free_count != 0) {
 941:Middlewares/Third_Party/LwIP/src/core/mem.c ****               /* If mem_free or mem_trim have run, we have to restart since they
 942:Middlewares/Third_Party/LwIP/src/core/mem.c ****                  could have altered our current struct mem or lfree. */
 943:Middlewares/Third_Party/LwIP/src/core/mem.c ****               goto mem_malloc_adjust_lfree;
 944:Middlewares/Third_Party/LwIP/src/core/mem.c ****             }
 945:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 946:Middlewares/Third_Party/LwIP/src/core/mem.c ****             cur = ptr_to_mem(cur->next);
 947:Middlewares/Third_Party/LwIP/src/core/mem.c ****           }
 948:Middlewares/Third_Party/LwIP/src/core/mem.c ****           lfree = cur;
 949:Middlewares/Third_Party/LwIP/src/core/mem.c ****           LWIP_ASSERT("mem_malloc: !lfree->used", ((lfree == ram_end) || (!lfree->used)));
 950:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 951:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_MEM_ALLOC_UNPROTECT();
ARM GAS  /tmp/ccn6Qu7E.s 			page 35


 952:Middlewares/Third_Party/LwIP/src/core/mem.c ****         sys_mutex_unlock(&mem_mutex);
 953:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_ASSERT("mem_malloc: allocated memory not above ram_end.",
 945              		.loc 1 953 0
 946 005c 2F44     		add	r7, r7, r5
 947 005e 0837     		adds	r7, r7, #8
 948 0060 3F4B     		ldr	r3, .L107+16
 949 0062 1B68     		ldr	r3, [r3]
 950 0064 9F42     		cmp	r7, r3
 951 0066 20D8     		bhi	.L102
 952              	.L91:
 954:Middlewares/Third_Party/LwIP/src/core/mem.c ****                     (mem_ptr_t)mem + SIZEOF_STRUCT_MEM + size <= (mem_ptr_t)ram_end);
 955:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_ASSERT("mem_malloc: allocated memory properly aligned.",
 953              		.loc 1 955 0
 954 0068 15F00304 		ands	r4, r5, #3
 955              	.LVL118:
 956 006c 25D1     		bne	.L103
 957              	.L92:
 956:Middlewares/Third_Party/LwIP/src/core/mem.c ****                     ((mem_ptr_t)mem + SIZEOF_STRUCT_MEM) % MEM_ALIGNMENT == 0);
 957:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_ASSERT("mem_malloc: sanity check alignment",
 958              		.loc 1 957 0
 959 006e 64BB     		cbnz	r4, .L104
 960              	.L93:
 958:Middlewares/Third_Party/LwIP/src/core/mem.c ****                     (((mem_ptr_t)mem) & (MEM_ALIGNMENT - 1)) == 0);
 959:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 960:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_OVERFLOW_CHECK
 961:Middlewares/Third_Party/LwIP/src/core/mem.c ****         mem_overflow_init_element(mem, size_in);
 962:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 963:Middlewares/Third_Party/LwIP/src/core/mem.c ****         MEM_SANITY();
 964:Middlewares/Third_Party/LwIP/src/core/mem.c ****         return (u8_t *)mem + SIZEOF_STRUCT_MEM + MEM_SANITY_OFFSET;
 961              		.loc 1 964 0
 962 0070 05F10800 		add	r0, r5, #8
 963 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 964              	.LVL119:
 965              	.L90:
 966              	.LBB4:
 946:Middlewares/Third_Party/LwIP/src/core/mem.c ****           }
 967              		.loc 1 946 0
 968 0078 0088     		ldrh	r0, [r0]
 969              	.LVL120:
 970 007a FFF7FEFF 		bl	ptr_to_mem
 971              	.LVL121:
 972              	.L87:
 934:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 973              		.loc 1 934 0
 974 007e 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 975 0080 1BB1     		cbz	r3, .L89
 934:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 976              		.loc 1 934 0 is_stmt 0 discriminator 1
 977 0082 374A     		ldr	r2, .L107+16
 978 0084 1268     		ldr	r2, [r2]
 979 0086 9042     		cmp	r0, r2
 980 0088 F6D1     		bne	.L90
 981              	.L89:
 948:Middlewares/Third_Party/LwIP/src/core/mem.c ****           LWIP_ASSERT("mem_malloc: !lfree->used", ((lfree == ram_end) || (!lfree->used)));
 982              		.loc 1 948 0 is_stmt 1
 983 008a 314A     		ldr	r2, .L107
 984 008c 1060     		str	r0, [r2]
ARM GAS  /tmp/ccn6Qu7E.s 			page 36


 949:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 985              		.loc 1 949 0
 986 008e 344A     		ldr	r2, .L107+16
 987 0090 1268     		ldr	r2, [r2]
 988 0092 9042     		cmp	r0, r2
 989 0094 E2D0     		beq	.L88
 949:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 990              		.loc 1 949 0 is_stmt 0 discriminator 1
 991 0096 002B     		cmp	r3, #0
 992 0098 E0D0     		beq	.L88
 949:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 993              		.loc 1 949 0 discriminator 2
 994 009a 2E4B     		ldr	r3, .L107+4
 995 009c 40F2B532 		movw	r2, #949
 996 00a0 3049     		ldr	r1, .L107+20
 997 00a2 2E48     		ldr	r0, .L107+12
 998              	.LVL122:
 999 00a4 FFF7FEFF 		bl	printf
 1000              	.LVL123:
 1001 00a8 D8E7     		b	.L88
 1002              	.L102:
 1003              	.LBE4:
 953:Middlewares/Third_Party/LwIP/src/core/mem.c ****                     (mem_ptr_t)mem + SIZEOF_STRUCT_MEM + size <= (mem_ptr_t)ram_end);
 1004              		.loc 1 953 0 is_stmt 1 discriminator 1
 1005 00aa 2A4B     		ldr	r3, .L107+4
 1006 00ac 40F2BA32 		movw	r2, #954
 1007 00b0 2D49     		ldr	r1, .L107+24
 1008 00b2 2A48     		ldr	r0, .L107+12
 1009 00b4 FFF7FEFF 		bl	printf
 1010              	.LVL124:
 1011 00b8 D6E7     		b	.L91
 1012              	.LVL125:
 1013              	.L103:
 955:Middlewares/Third_Party/LwIP/src/core/mem.c ****                     ((mem_ptr_t)mem + SIZEOF_STRUCT_MEM) % MEM_ALIGNMENT == 0);
 1014              		.loc 1 955 0 discriminator 1
 1015 00ba 264B     		ldr	r3, .L107+4
 1016 00bc 4FF46F72 		mov	r2, #956
 1017 00c0 2A49     		ldr	r1, .L107+28
 1018 00c2 2648     		ldr	r0, .L107+12
 1019 00c4 FFF7FEFF 		bl	printf
 1020              	.LVL126:
 1021 00c8 D1E7     		b	.L92
 1022              	.L104:
 957:Middlewares/Third_Party/LwIP/src/core/mem.c ****                     (((mem_ptr_t)mem) & (MEM_ALIGNMENT - 1)) == 0);
 1023              		.loc 1 957 0 discriminator 1
 1024 00ca 224B     		ldr	r3, .L107+4
 1025 00cc 40F2BE32 		movw	r2, #958
 1026 00d0 2749     		ldr	r1, .L107+32
 1027 00d2 2248     		ldr	r0, .L107+12
 1028 00d4 FFF7FEFF 		bl	printf
 1029              	.LVL127:
 1030 00d8 CAE7     		b	.L93
 1031              	.LVL128:
 1032              	.L83:
 871:Middlewares/Third_Party/LwIP/src/core/mem.c ****       mem = ptr_to_mem(ptr);
 1033              		.loc 1 871 0
 1034 00da 2C88     		ldrh	r4, [r5]
ARM GAS  /tmp/ccn6Qu7E.s 			page 37


 1035              	.LVL129:
 1036              	.L82:
 870:Middlewares/Third_Party/LwIP/src/core/mem.c ****          ptr = ptr_to_mem(ptr)->next) {
 1037              		.loc 1 870 0 discriminator 1
 1038 00dc A046     		mov	r8, r4
 1039 00de 3746     		mov	r7, r6
 1040 00e0 C6F5C863 		rsb	r3, r6, #1600
 1041 00e4 9C42     		cmp	r4, r3
 1042 00e6 2AD2     		bcs	.L105
 872:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 1043              		.loc 1 872 0
 1044 00e8 2046     		mov	r0, r4
 1045 00ea FFF7FEFF 		bl	ptr_to_mem
 1046              	.LVL130:
 1047 00ee 0546     		mov	r5, r0
 1048              	.LVL131:
 886:Middlewares/Third_Party/LwIP/src/core/mem.c ****           (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
 1049              		.loc 1 886 0
 1050 00f0 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1051 00f2 002B     		cmp	r3, #0
 1052 00f4 F1D1     		bne	.L83
 887:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /* mem is not used and at least perfect fit is possible:
 1053              		.loc 1 887 0 discriminator 1
 1054 00f6 0388     		ldrh	r3, [r0]
 1055 00f8 A3EB0803 		sub	r3, r3, r8
 1056 00fc 083B     		subs	r3, r3, #8
 886:Middlewares/Third_Party/LwIP/src/core/mem.c ****           (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
 1057              		.loc 1 886 0 discriminator 1
 1058 00fe 9F42     		cmp	r7, r3
 1059 0100 EBD8     		bhi	.L83
 891:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* (in addition to the above, we test if another struct mem (SIZEOF_STRUCT_MEM) containin
 1060              		.loc 1 891 0
 1061 0102 07F11402 		add	r2, r7, #20
 1062 0106 9342     		cmp	r3, r2
 1063 0108 A2D3     		bcc	.L84
 902:Middlewares/Third_Party/LwIP/src/core/mem.c ****           LWIP_ASSERT("invalid next ptr",ptr2 != MEM_SIZE_ALIGNED);
 1064              		.loc 1 902 0
 1065 010a 2644     		add	r6, r6, r4
 1066              	.LVL132:
 1067 010c B6B2     		uxth	r6, r6
 1068 010e 0836     		adds	r6, r6, #8
 1069 0110 B6B2     		uxth	r6, r6
 1070              	.LVL133:
 903:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* create mem2 struct */
 1071              		.loc 1 903 0
 1072 0112 B6F5C86F 		cmp	r6, #1600
 1073 0116 93D0     		beq	.L106
 1074              	.LVL134:
 1075              	.L85:
 905:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->used = 0;
 1076              		.loc 1 905 0
 1077 0118 3046     		mov	r0, r6
 1078 011a FFF7FEFF 		bl	ptr_to_mem
 1079              	.LVL135:
 906:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->next = mem->next;
 1080              		.loc 1 906 0
 1081 011e 0023     		movs	r3, #0
ARM GAS  /tmp/ccn6Qu7E.s 			page 38


 1082 0120 0371     		strb	r3, [r0, #4]
 907:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->prev = ptr;
 1083              		.loc 1 907 0
 1084 0122 2B88     		ldrh	r3, [r5]
 1085 0124 0380     		strh	r3, [r0]	@ movhi
 908:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* and insert it between mem and mem->next */
 1086              		.loc 1 908 0
 1087 0126 4480     		strh	r4, [r0, #2]	@ movhi
 910:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem->used = 1;
 1088              		.loc 1 910 0
 1089 0128 2E80     		strh	r6, [r5]	@ movhi
 911:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 1090              		.loc 1 911 0
 1091 012a 0123     		movs	r3, #1
 1092 012c 2B71     		strb	r3, [r5, #4]
 913:Middlewares/Third_Party/LwIP/src/core/mem.c ****             ptr_to_mem(mem2->next)->prev = ptr2;
 1093              		.loc 1 913 0
 1094 012e 0088     		ldrh	r0, [r0]
 1095              	.LVL136:
 1096 0130 B0F5C86F 		cmp	r0, #1600
 1097 0134 8ED0     		beq	.L86
 914:Middlewares/Third_Party/LwIP/src/core/mem.c ****           }
 1098              		.loc 1 914 0
 1099 0136 FFF7FEFF 		bl	ptr_to_mem
 1100              	.LVL137:
 1101 013a 4680     		strh	r6, [r0, #2]	@ movhi
 1102 013c 8AE7     		b	.L86
 1103              	.LVL138:
 1104              	.L105:
 965:Middlewares/Third_Party/LwIP/src/core/mem.c ****       }
 966:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 967:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 968:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if we got interrupted by a mem_free, try again */
 969:Middlewares/Third_Party/LwIP/src/core/mem.c ****   } while (local_mem_free_count != 0);
 970:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 971:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_INC(err);
 972:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_ALLOC_UNPROTECT();
 973:Middlewares/Third_Party/LwIP/src/core/mem.c ****   sys_mutex_unlock(&mem_mutex);
 974:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("mem_malloc: could not allocate %"S16_F" bytes\n
 975:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return NULL;
 1105              		.loc 1 975 0
 1106 013e 0020     		movs	r0, #0
 1107 0140 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1108              	.LVL139:
 1109              	.L95:
 1110              	.LCFI7:
 1111              		.cfi_def_cfa_offset 0
 1112              		.cfi_restore 4
 1113              		.cfi_restore 5
 1114              		.cfi_restore 6
 1115              		.cfi_restore 7
 1116              		.cfi_restore 8
 1117              		.cfi_restore 14
 841:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 1118              		.loc 1 841 0
 1119 0144 0020     		movs	r0, #0
 1120              	.LVL140:
ARM GAS  /tmp/ccn6Qu7E.s 			page 39


 1121 0146 7047     		bx	lr
 1122              	.LVL141:
 1123              	.L97:
 1124              	.LCFI8:
 1125              		.cfi_def_cfa_offset 24
 1126              		.cfi_offset 4, -24
 1127              		.cfi_offset 5, -20
 1128              		.cfi_offset 6, -16
 1129              		.cfi_offset 7, -12
 1130              		.cfi_offset 8, -8
 1131              		.cfi_offset 14, -4
 855:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 1132              		.loc 1 855 0
 1133 0148 0020     		movs	r0, #0
 1134              	.LVL142:
 976:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 1135              		.loc 1 976 0
 1136 014a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1137              	.LVL143:
 1138              	.L108:
 1139 014e 00BF     		.align	2
 1140              	.L107:
 1141 0150 00000000 		.word	.LANCHOR2
 1142 0154 00000000 		.word	.LC0
 1143 0158 38000000 		.word	.LC12
 1144 015c 44000000 		.word	.LC2
 1145 0160 00000000 		.word	.LANCHOR1
 1146 0164 00000000 		.word	.LC13
 1147 0168 1C000000 		.word	.LC14
 1148 016c 4C000000 		.word	.LC15
 1149 0170 7C000000 		.word	.LC16
 1150              		.cfi_endproc
 1151              	.LFE165:
 1153              		.section	.text.mem_calloc,"ax",%progbits
 1154              		.align	1
 1155              		.global	mem_calloc
 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1159              		.fpu fpv5-d16
 1161              	mem_calloc:
 1162              	.LFB166:
 977:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 978:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_USE_POOLS */
 979:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 980:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_LIBC_MALLOC && (!LWIP_STATS || !MEM_STATS)
 981:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 982:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_calloc(mem_size_t count, mem_size_t size)
 983:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 984:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return mem_clib_calloc(count, size);
 985:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 986:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 987:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else /* MEM_LIBC_MALLOC && (!LWIP_STATS || !MEM_STATS) */
 988:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 989:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Contiguously allocates enough space for count objects that are size bytes
 990:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * of memory each and returns a pointer to the allocated memory.
 991:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
ARM GAS  /tmp/ccn6Qu7E.s 			page 40


 992:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * The allocated memory is filled with bytes of value zero.
 993:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 994:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param count number of objects to allocate
 995:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size size of the objects to allocate
 996:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return pointer to allocated memory / NULL pointer if there is an error
 997:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 998:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 999:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_calloc(mem_size_t count, mem_size_t size)
1000:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 1163              		.loc 1 1000 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              	.LVL144:
 1168 0000 38B5     		push	{r3, r4, r5, lr}
 1169              	.LCFI9:
 1170              		.cfi_def_cfa_offset 16
 1171              		.cfi_offset 3, -16
 1172              		.cfi_offset 4, -12
 1173              		.cfi_offset 5, -8
 1174              		.cfi_offset 14, -4
1001:Middlewares/Third_Party/LwIP/src/core/mem.c ****   void *p;
1002:Middlewares/Third_Party/LwIP/src/core/mem.c ****   size_t alloc_size = (size_t)count * (size_t)size;
 1175              		.loc 1 1002 0
 1176 0002 01FB00F4 		mul	r4, r1, r0
 1177              	.LVL145:
1003:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
1004:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((size_t)(mem_size_t)alloc_size != alloc_size) {
 1178              		.loc 1 1004 0
 1179 0006 A0B2     		uxth	r0, r4
 1180              	.LVL146:
 1181 0008 8442     		cmp	r4, r0
 1182 000a 09D1     		bne	.L111
1005:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("mem_calloc: could not allocate %"SZT_F" bytes
1006:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
1007:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
1008:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
1009:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* allocate 'count' objects of size 'size' */
1010:Middlewares/Third_Party/LwIP/src/core/mem.c ****   p = mem_malloc((mem_size_t)alloc_size);
 1183              		.loc 1 1010 0
 1184 000c FFF7FEFF 		bl	mem_malloc
 1185              	.LVL147:
1011:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (p) {
 1186              		.loc 1 1011 0
 1187 0010 0546     		mov	r5, r0
 1188 0012 18B1     		cbz	r0, .L109
1012:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* zero the memory */
1013:Middlewares/Third_Party/LwIP/src/core/mem.c ****     memset(p, 0, alloc_size);
 1189              		.loc 1 1013 0
 1190 0014 2246     		mov	r2, r4
 1191 0016 0021     		movs	r1, #0
 1192 0018 FFF7FEFF 		bl	memset
 1193              	.LVL148:
 1194              	.L109:
1014:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
1015:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return p;
1016:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
ARM GAS  /tmp/ccn6Qu7E.s 			page 41


 1195              		.loc 1 1016 0
 1196 001c 2846     		mov	r0, r5
 1197 001e 38BD     		pop	{r3, r4, r5, pc}
 1198              	.LVL149:
 1199              	.L111:
1006:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 1200              		.loc 1 1006 0
 1201 0020 0025     		movs	r5, #0
 1202 0022 FBE7     		b	.L109
 1203              		.cfi_endproc
 1204              	.LFE166:
 1206              		.comm	ram_heap,1619,4
 1207              		.section	.bss.lfree,"aw",%nobits
 1208              		.align	2
 1209              		.set	.LANCHOR2,. + 0
 1212              	lfree:
 1213 0000 00000000 		.space	4
 1214              		.section	.bss.ram,"aw",%nobits
 1215              		.align	2
 1216              		.set	.LANCHOR0,. + 0
 1219              	ram:
 1220 0000 00000000 		.space	4
 1221              		.section	.bss.ram_end,"aw",%nobits
 1222              		.align	2
 1223              		.set	.LANCHOR1,. + 0
 1226              	ram_end:
 1227 0000 00000000 		.space	4
 1228              		.section	.rodata.mem_free.str1.4,"aMS",%progbits,1
 1229              		.align	2
 1230              	.LC6:
 1231 0000 6D656D5F 		.ascii	"mem_free: sanity check alignment\000"
 1231      66726565 
 1231      3A207361 
 1231      6E697479 
 1231      20636865 
 1232 0021 000000   		.space	3
 1233              	.LC7:
 1234 0024 6D656D5F 		.ascii	"mem_free: illegal memory\000"
 1234      66726565 
 1234      3A20696C 
 1234      6C656761 
 1234      6C206D65 
 1235 003d 000000   		.space	3
 1236              	.LC8:
 1237 0040 6D656D5F 		.ascii	"mem_free: illegal memory: double free\000"
 1237      66726565 
 1237      3A20696C 
 1237      6C656761 
 1237      6C206D65 
 1238 0066 0000     		.space	2
 1239              	.LC9:
 1240 0068 6D656D5F 		.ascii	"mem_free: illegal memory: non-linked: double free\000"
 1240      66726565 
 1240      3A20696C 
 1240      6C656761 
 1240      6C206D65 
 1241              		.section	.rodata.mem_malloc.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccn6Qu7E.s 			page 42


 1242              		.align	2
 1243              	.LC13:
 1244 0000 6D656D5F 		.ascii	"mem_malloc: !lfree->used\000"
 1244      6D616C6C 
 1244      6F633A20 
 1244      216C6672 
 1244      65652D3E 
 1245 0019 000000   		.space	3
 1246              	.LC14:
 1247 001c 6D656D5F 		.ascii	"mem_malloc: allocated memory not above ram_end.\000"
 1247      6D616C6C 
 1247      6F633A20 
 1247      616C6C6F 
 1247      63617465 
 1248              	.LC15:
 1249 004c 6D656D5F 		.ascii	"mem_malloc: allocated memory properly aligned.\000"
 1249      6D616C6C 
 1249      6F633A20 
 1249      616C6C6F 
 1249      63617465 
 1250 007b 00       		.space	1
 1251              	.LC16:
 1252 007c 6D656D5F 		.ascii	"mem_malloc: sanity check alignment\000"
 1252      6D616C6C 
 1252      6F633A20 
 1252      73616E69 
 1252      74792063 
 1253              		.section	.rodata.mem_trim.str1.4,"aMS",%progbits,1
 1254              		.align	2
 1255              	.LC10:
 1256 0000 6D656D5F 		.ascii	"mem_trim: legal memory\000"
 1256      7472696D 
 1256      3A206C65 
 1256      67616C20 
 1256      6D656D6F 
 1257 0017 00       		.space	1
 1258              	.LC11:
 1259 0018 6D656D5F 		.ascii	"mem_trim can only shrink memory\000"
 1259      7472696D 
 1259      2063616E 
 1259      206F6E6C 
 1259      79207368 
 1260              	.LC12:
 1261 0038 696E7661 		.ascii	"invalid next ptr\000"
 1261      6C696420 
 1261      6E657874 
 1261      20707472 
 1261      00
 1262              		.section	.rodata.plug_holes.str1.4,"aMS",%progbits,1
 1263              		.align	2
 1264              	.LC0:
 1265 0000 4D696464 		.ascii	"Middlewares/Third_Party/LwIP/src/core/mem.c\000"
 1265      6C657761 
 1265      7265732F 
 1265      54686972 
 1265      645F5061 
 1266              	.LC1:
ARM GAS  /tmp/ccn6Qu7E.s 			page 43


 1267 002c 706C7567 		.ascii	"plug_holes: mem >= ram\000"
 1267      5F686F6C 
 1267      65733A20 
 1267      6D656D20 
 1267      3E3D2072 
 1268 0043 00       		.space	1
 1269              	.LC2:
 1270 0044 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 1270      7274696F 
 1270      6E202225 
 1270      73222066 
 1270      61696C65 
 1271              	.LC3:
 1272 006c 706C7567 		.ascii	"plug_holes: mem < ram_end\000"
 1272      5F686F6C 
 1272      65733A20 
 1272      6D656D20 
 1272      3C207261 
 1273 0086 0000     		.space	2
 1274              	.LC4:
 1275 0088 706C7567 		.ascii	"plug_holes: mem->used == 0\000"
 1275      5F686F6C 
 1275      65733A20 
 1275      6D656D2D 
 1275      3E757365 
 1276 00a3 00       		.space	1
 1277              	.LC5:
 1278 00a4 706C7567 		.ascii	"plug_holes: mem->next <= MEM_SIZE_ALIGNED\000"
 1278      5F686F6C 
 1278      65733A20 
 1278      6D656D2D 
 1278      3E6E6578 
 1279              		.text
 1280              	.Letext0:
 1281              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1282              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1283              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1284              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1285              		.file 6 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1286              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1287              		.file 8 "/usr/include/newlib/sys/lock.h"
 1288              		.file 9 "/usr/include/newlib/sys/_types.h"
 1289              		.file 10 "/usr/include/newlib/sys/reent.h"
 1290              		.file 11 "/usr/include/newlib/stdlib.h"
 1291              		.file 12 "/usr/include/newlib/time.h"
 1292              		.file 13 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1293              		.file 14 "/usr/include/newlib/ctype.h"
 1294              		.file 15 "Middlewares/Third_Party/LwIP/src/include/lwip/mem.h"
 1295              		.file 16 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1296              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1297              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1298              		.file 19 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccn6Qu7E.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mem.c
     /tmp/ccn6Qu7E.s:17     .text.ptr_to_mem:0000000000000000 $t
     /tmp/ccn6Qu7E.s:23     .text.ptr_to_mem:0000000000000000 ptr_to_mem
     /tmp/ccn6Qu7E.s:42     .text.ptr_to_mem:0000000000000008 $d
     /tmp/ccn6Qu7E.s:47     .text.mem_to_ptr:0000000000000000 $t
     /tmp/ccn6Qu7E.s:53     .text.mem_to_ptr:0000000000000000 mem_to_ptr
     /tmp/ccn6Qu7E.s:72     .text.mem_to_ptr:000000000000000c $d
     /tmp/ccn6Qu7E.s:77     .text.mem_link_valid:0000000000000000 $t
     /tmp/ccn6Qu7E.s:83     .text.mem_link_valid:0000000000000000 mem_link_valid
     /tmp/ccn6Qu7E.s:180    .text.mem_link_valid:0000000000000058 $d
     /tmp/ccn6Qu7E.s:185    .text.plug_holes:0000000000000000 $t
     /tmp/ccn6Qu7E.s:191    .text.plug_holes:0000000000000000 plug_holes
     /tmp/ccn6Qu7E.s:357    .text.plug_holes:00000000000000dc $d
     /tmp/ccn6Qu7E.s:370    .text.mem_init:0000000000000000 $t
     /tmp/ccn6Qu7E.s:377    .text.mem_init:0000000000000000 mem_init
     /tmp/ccn6Qu7E.s:425    .text.mem_init:0000000000000030 $d
                            *COM*:0000000000000653 ram_heap
     /tmp/ccn6Qu7E.s:433    .text.mem_free:0000000000000000 $t
     /tmp/ccn6Qu7E.s:440    .text.mem_free:0000000000000000 mem_free
     /tmp/ccn6Qu7E.s:561    .text.mem_free:0000000000000090 $d
     /tmp/ccn6Qu7E.s:574    .text.mem_trim:0000000000000000 $t
     /tmp/ccn6Qu7E.s:581    .text.mem_trim:0000000000000000 mem_trim
     /tmp/ccn6Qu7E.s:849    .text.mem_trim:0000000000000164 $d
     /tmp/ccn6Qu7E.s:861    .text.mem_malloc:0000000000000000 $t
     /tmp/ccn6Qu7E.s:868    .text.mem_malloc:0000000000000000 mem_malloc
     /tmp/ccn6Qu7E.s:1141   .text.mem_malloc:0000000000000150 $d
     /tmp/ccn6Qu7E.s:1154   .text.mem_calloc:0000000000000000 $t
     /tmp/ccn6Qu7E.s:1161   .text.mem_calloc:0000000000000000 mem_calloc
     /tmp/ccn6Qu7E.s:1208   .bss.lfree:0000000000000000 $d
     /tmp/ccn6Qu7E.s:1212   .bss.lfree:0000000000000000 lfree
     /tmp/ccn6Qu7E.s:1215   .bss.ram:0000000000000000 $d
     /tmp/ccn6Qu7E.s:1219   .bss.ram:0000000000000000 ram
     /tmp/ccn6Qu7E.s:1222   .bss.ram_end:0000000000000000 $d
     /tmp/ccn6Qu7E.s:1226   .bss.ram_end:0000000000000000 ram_end
     /tmp/ccn6Qu7E.s:1229   .rodata.mem_free.str1.4:0000000000000000 $d
     /tmp/ccn6Qu7E.s:1242   .rodata.mem_malloc.str1.4:0000000000000000 $d
     /tmp/ccn6Qu7E.s:1254   .rodata.mem_trim.str1.4:0000000000000000 $d
     /tmp/ccn6Qu7E.s:1263   .rodata.plug_holes.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
printf
memset
